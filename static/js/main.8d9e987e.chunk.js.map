{"version":3,"sources":["lib/darknode/publicKey.ts","lib/blockchain/btc/common.ts","lib/util/errors.ts","lib/util/market.ts","lib/util/history.ts","lib/util/environmentVariables.ts","components/views/ErrorBoundary.tsx","store/actions/market/marketActions.ts","components/controllers/BackgroundTasks.tsx","store/actions/general/generalActions.ts","styles/images/logo.svg","styles/images/rp-flag-uk.svg","lib/blockchain/depositAddresses.ts","components/controllers/HeaderController.tsx","lib/blockchain/mercury.ts","lib/blockchain/btc/btc.ts","lib/blockchain/btc/zec.ts","lib/types/types.ts","lib/blockchain/eth/eth.ts","store/types/general.ts","lib/darknode/darknode.ts","lib/darknode/darknodeGroup.ts","lib/util/persist.ts","components/views/ShowCurrency.tsx","components/views/CurrenciesBlock.tsx","styles/images/metamask.svg","store/configureStore.ts","components/views/ReceiveAddress.tsx","components/views/ShowUTXO.tsx","components/views/ShowUTXOs.tsx","components/controllers/SwapController.tsx","components/controllers/App.tsx","store/reducers/rootReducer.ts","store/reducers/general/generalReducer.ts","store/reducers/market/marketReducer.ts","store/persistConfig.ts","index.tsx","lib/util/onLoad.ts"],"names":["Buffer","__webpack_require__","d","__webpack_exports__","testnetMasterPKH","createAddress","networks","opcode","script","_ref","mainnet","masterPKH","address","add","substring","slice","OP_DROP","OP_DUP","OP_HASH160","OP_EQUALVERIFY","OP_CHECKSIG","toScriptHashOut","toAddress","livenet","testnet","toString","pageLoaded","Token","history","createBrowserHistory","INFURA","process","environment","pageLoadedAt","naturalTime","Math","floor","getTime","message","suffix","countDown","Date","toUTCString","_captureException_","error","details","_noCapture_","Sentry","scope","setExtra","category","setTag","level","setLevel","Object","keys","forEach","key","response","data","status","errorObject","cache","rawErrorJSON","JSON","stringify","value","indexOf","parse","push","rawError","console","concat","toUpperCase","_unused","ignoreNetwork","match","isNetworkError","_captureBackgroundException_","objectSpread","_captureInteractionException_","_captureComponentException_","errorInfo","description","ErrorBoundary","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidCatch","setState","reportFeedback","state","react","style","whiteSpace","role","cursor","onClick","componentStack","children","React","_catch_","ErrorBoundary_ErrorBoundary","CoinGeckoIDs","Map","set","DAI","BTC","ETH","REN","TUSD","ZEC","WBTC","fetchDetails","asyncToGenerator","regenerator_default","a","mark","_callee","geckoID","url","wrap","_context","prev","next","fetch","sent","abrupt","json","stop","_x","apply","arguments","getTokenPricesInCurrencies","_ref3","_callee3","prices","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","tokenAndDetails","_tokenAndDetails","token","coinGeckoID","price","_context3","undefined","toSeq","toArray","Symbol","iterator","done","slicedToArray","market_data","current_price","t0","return","finish","updatePrices","createStandardAction","pricesUpdating","setTokenPrices","updateTokenPrices","_callee2","dispatch","_context2","Promise","resolve","reject","setTimeout","tokenPrices","BackgroundTasksClass","context","callBootstrapTimeout","callUpdatePricesTimeout","callUpdateMarketPricesTimeout","callUpdatePrices","delay","actions","clearTimeout","callBootstrap","callUpdateMarketPrices","setupLoops","catch","BackgroundTasks","connect","store","darknodeGroup","general","bindActionCreators","setQuoteCurrency","setEthereumAddress","setEvents","_extends","assign","target","i","length","source","prototype","hasOwnProperty","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","logo_ref2","react_default","createElement","className","fillRule","clipRule","fill","logo_ref3","logo_ref4","logo_ref5","logo_ref6","logo_ref7","logo_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","logo_SvgLogo","svgRef","width","height","viewBox","ref","ForwardRef","forwardRef","p","rp_flag_uk_extends","rp_flag_uk_objectWithoutProperties","rp_flag_uk_objectWithoutPropertiesLoose","Currency","rp_flag_uk_ref2","rp_flag_uk_ref3","rp_flag_uk_ref4","rp_flag_uk_ref5","id","stroke","strokeWidth","points","rp_flag_uk_SvgRpFlagUk","rp_flag_uk_ForwardRef","currencyOptions","options","currencies","currency","lib_es","err","getCurrencyOptions","languageOptions","logo","react_router_dom","to","HeaderControllerClass","render","quoteCurrency","languageDropdown","selected","setValue","setLanguage","currencyDropdown","setCurrency","menu","language","HeaderController","getUTXOs","endpoint","limit","confirmations","resp","Axios","get","_x2","_x3","createBTCAddress","Networks","Opcode","Script","getBTCTestnetUTXOs","createBTCTestnetAddress","createZECAddress","getZECTestnetUTXOs","createZECTestnetAddress","zecAddressToHex","decode58","NewMultiAddress","multiAddress","multiAddressToID","split","zBTCAddress","zZECAddress","bridgedToken","Record","darknodes","List","web3","eth","Contract","BridgedTokenABI","UITheme","EventType","CurrencyList","CurrencyDecimals","DepositAddresses","receiveAddress","depositAddresses","zBTC","zZEC","utxos","btcDepositAddress","newBitcoinUTXOs","zecDepositAddress","newZcashUTXOs","_args","utxo","map","t1","t2","t3","getBalances","balances","_i","_arr","_ref4","curr","contract","ImmutableMap","utils","methods","balanceOf","t4","fromWei","t5","getBalance","_ref5","BigNumber","pow","div","toFixed","t6","t7","t8","burn","_ref6","_callee4","amount","toHex","_context4","getWeb3","Error","net","getNetworkType","getAccounts","multipliedBy","send","from","log","_x4","Web3","Darknode","charAt","_multiAddress$multiAd","_multiAddress$multiAd2","ip","port","fixedPort","createClass","_getHealth","axios","post","generatePayload","responseError","_getPeers","_getNumberOfPeers","_getEpoch","_getAddresses","_callee5","request","_context5","_sendMessage","_callee6","_context6","_receiveMessage","_callee7","_context7","method","params","jsonrpc","version","msg","bootstrapNodes","promiseAll","list","defaultValue","newList","entryP","WarpGateGroup","_DarknodeGroup","multiAddresses","_this2","submitDeposits","_ref7","results","sendMessage","nonce","signature","payload","args","filter","x","size","result","messageID","toList","_x6","_x7","checkForResponse","_ref8","_callee8","mintEvent","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_iterator4","_step4","node","_context8","valueSeq","receiveMessage","_x8","inherits","DarknodeGroup","bootstraps","bootstrap","success","lastError","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","peers","getPeers","addDarknodes","getHealth","darknode","_x5","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","Array","isArray","validateType","type","object","isArrayType","subtype","e","isListType","isSetType","Set","isMapType","Deposit","_Record","isXCSEvent","XCSCurrency","Mint","_Record2","mintTransaction","messageIDs","Burn","_Record3","burnTransaction","GeneralDataInner","ethereumAddress","allEvents","advanced","theme","Light","advancedTheme","Dark","USD","syncedGeneralData","GeneralData","_Record4","obj","_Array$from","str","_i2","_Array$from2","expectedType","nextAllEvents","_i3","_Object$keys","events","nextEvents","OrderedMap","_i4","_Object$keys2","child","event","shownToUser","alert","MarketPriceData","_Record5","updating","marketPrices","ShowCurrency","index","_React$useState","_React$useState2","expanded","setExpanded","_React$useState3","_React$useState4","setError","_React$useState5","_React$useState6","balance","setBalance","clickAway","current","contains","document","removeEventListener","showDeposit","_ref2","parent","addEventListener","currentTarget","parentElement","scrollTo","left","handleBurn","preventDefault","data-id","data-index","onMouseDown","href","CurrenciesBlock","ShowCurrency_ShowCurrency","metamask_extends","metamask_objectWithoutProperties","metamask_objectWithoutPropertiesLoose","config","reducer","metamask_ref2","metamask_ref3","metamask_ref4","metamask_SvgMetamask","y","enableBackground","xmlSpace","metamask_ForwardRef","ReceiveAddress","onGenerateAddress","onChange","getMetaMaskAddress","onGetMM","focus","onSubmit","placeholder","disabled","showCircle","percentage","color","dist_default","styles","path","strokeLinecap","trail","strokeOpacity","ShowUTXO","oldestDeposit","redeeming","onRedeem","first","rel","alt","checkingResponse","loading","values","previousValue","valuesString","join","ShowUTXOs","checking","onRefresh","redeemable","_loop","reverse","ShowUTXO_ShowUTXO","window","ethereum","enable","currentProvider","SwapController","_props$store","blur","setBlur","mounted","setMounted","_React$useState7","_React$useState8","setChecking","_React$useState9","_React$useState10","setRedeeming","_React$useState11","_React$useState12","setDepositAddresses","_React$useState13","_React$useState14","setCheckingResponse","remove","txHash","has","deposit","utxoWithCurrency","messages","addresses","prompt","delete","ReceiveAddress_ReceiveAddress","CurrenciesBlock_CurrenciesBlock","ShowUTXOs_ShowUTXOs","ScrollToTop","withRouter","ScrollToTopWithoutRouter","AppClass","react_router","App","rootReducer","combineReducers","action","getType","generalActions","marketActions","_action$payload","marketPrice","percentChange","pair","generalTransform","createTransform","inboundState","serialize","outboundState","deserialize","whitelist","persistConfig","storage","transforms","middlewares","thunk","persistedReducer","persistReducer","title","createStore","applyMiddleware","dsn","release","whitelistUrls","ReactDOM","es","integration_react","persistor","persistStore","getElementById"],"mappings":"2FAAA,SAAAA,GAAAC,EAAAC,EAAAC,EAAA,sBAAAC,IAAO,IAAMA,EAAmB,IAAIJ,EAAO,2CAA4C,mECGvF,SAAAA,GAAAC,EAAAC,EAAAC,EAAA,sBAAAE,IAAO,IAAMA,EACT,SAACC,EAA+CC,EAAyCC,GAAzF,OACI,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,QAASC,EAAZF,EAAYE,UAAZ,OACI,SAACC,GAAD,OACI,IAAIJ,GACCK,IAAI,IAAIb,EAAmC,OAA5BY,EAAQE,UAAU,EAAG,GAAcF,EAAQG,MAAM,GAAKH,EAAS,QAC9EC,IAAIN,EAAOS,SACXH,IAAIN,EAAOU,QACXJ,IAAIN,EAAOW,YACXL,IAAIF,GACJE,IAAIN,EAAOY,gBACXN,IAAIN,EAAOa,aACXC,kBAAkBC,UAAUZ,EAAUJ,EAASiB,QAAUjB,EAASkB,SAASC,g/XCS5FC,ECnBQC,4HCHCC,EAAUC,wCCEVC,EAASC,8DAITC,EANUD,UHuBVE,EAAe,WACxB,OAAKP,EAIMQ,YAAYC,KAAKC,MAAMV,EAAWW,UAAY,KAAO,CACxDC,QAAS,WACTC,OAAQ,MACRC,WAAW,KANfd,EAAa,IAAIe,MACCC,eA6DpBC,EAAqB,SAAoBC,EAAiBC,GACxDD,EAAME,aAIVC,IAAiB,SAAAC,GA+Bb,GA7BAA,EAAMC,SAAS,eAAgBhB,KAG3BY,EAAQK,UACRF,EAAMG,OAAO,WAAYN,EAAQK,UAIjCL,EAAQO,OACRJ,EAAMK,SAASR,EAAQO,OAI3BE,OAAOC,KAAKV,GACPW,QAAQ,SAAAC,GACLT,EAAMC,SAASQ,EAAKZ,EAAQY,MAGhCb,GAASA,EAAMc,WACfV,EAAMC,SAAS,eAAgBL,EAAMc,SAASC,MAC9CX,EAAMC,SAAS,iBAAkBL,EAAMc,SAASE,SAGpDZ,EAAMC,SAAS,UAAU,GACzBD,EAAMC,SAAS,YA7DN,SAACY,GAId,IAAIC,EAA0B,GACxBC,EAAeC,KAAKC,UAAUJ,EAAa,SAACJ,EAAKS,GACnD,GAAY,YAART,EACA,MAAO,cAEX,GAAIK,GAA0B,kBAAVI,GAAgC,OAAVA,EAAgB,CACtD,IAA8B,IAA1BJ,EAAMK,QAAQD,GAEd,IAEI,OAAOF,KAAKI,MAAMJ,KAAKC,UAAUC,IACnC,MAAOtB,GAEL,OAIRkB,EAAMO,KAAKH,GAEf,OAAOA,IAIX,OAFAJ,EAAQ,KAEDC,EAkCyBO,CAAS1B,IAGrC2B,QAAQ3B,MAAMA,GAEM,YAAhBZ,EACA,GAAqB,kBAAVY,EAEPA,EAAK,IAAA4B,OAAOxC,EAAYyC,cAAnB,MAAAD,OAAqC5B,QAE1C,IACIA,EAAMN,QAAN,IAAAkC,OAAoBxC,EAAYyC,cAAhC,MAAAD,OAAkD5B,EAAMN,SAAWM,GACrE,MAAA8B,IAON7B,EAAQ8B,eAnGG,SAAC/B,GACpB,IAAMN,IAAoBM,GAAS,IAAIN,SAAWM,GAAOnB,WAEzD,SACIa,EAAQsC,MAAM,oBACdtC,EAAQsC,MAAM,qBACdtC,EAAQsC,MAAM,4BACdtC,EAAQsC,MAAM,uBACdtC,EAAQsC,MAAM,iCACdtC,EAAQsC,MAAM,2DACdtC,EAAQsC,MAAM,+BACdtC,EAAQsC,MAAM,6BAwFeC,CAAejC,IAI5CG,IAAwBH,MAMnBkC,EAA+B,SAAgClC,EAAiBC,GACzFF,EAAmBC,EAADU,OAAAyB,EAAA,EAAAzB,CAAA,CAAUqB,eAAe,GAAS9B,EAAlC,CAA2CK,SAAU,2BAI9D8B,EAAgC,SAA8CpC,EAAiBC,GACxGF,EAAmBC,EAADU,OAAAyB,EAAA,EAAAzB,CAAA,GAAaT,EAAb,CAAsBK,SAAU,4BAIzC+B,EAA8B,SAACrC,EAAiBsC,GACzDvC,EAAmBC,EAADU,OAAAyB,EAAA,EAAAzB,CAAA,GAAa4B,EAAb,CAAwBC,YAAa,6DAA8DjC,SAAU,0BI3J7HkC,cACF,SAAAA,EAAYC,GAAc,IAAAC,EAAA,OAAAhC,OAAAiC,EAAA,EAAAjC,CAAAkC,KAAAJ,IACtBE,EAAAhC,OAAAmC,EAAA,EAAAnC,CAAAkC,KAAAlC,OAAAoC,EAAA,EAAApC,CAAA8B,GAAAO,KAAAH,KAAMH,KAIHO,kBAAoB,SAAChD,EAAcsC,GACtCI,EAAKO,SAAS,CACVjD,QACAsC,cAEJD,EAA4BrC,EAAOsC,IAVbI,EAsCTQ,eAAiB,WAC9B/C,OArCAuC,EAAKS,MAAQ,CAAEnD,MAAO,KAAMsC,UAAW,MAFjBI,wEAkBtB,OAAIE,KAAKO,MAAMb,UAGPc,EAAA,yBACIA,EAAA,iDACAA,EAAA,yBAASC,MAAO,CAAEC,WAAY,aAC1BF,EAAA,mBAAGG,KAAK,SAASF,MAAO,CAAEG,OAAQ,WAAaC,QAASb,KAAKM,gBAA7D,4BAGCN,KAAKO,MAAMnD,OAAS4C,KAAKO,MAAMnD,MAAMnB,WACtCuE,EAAA,yBACCR,KAAKO,MAAMb,UAAUoB,iBAM/Bd,KAAKH,MAAMkB,gBApCEC,aAoDfC,EAAU,SACnBF,GADmB,OAElBP,EAAA,cAACU,EAAD,KACIH,4DHvDG5E,uGAWZ,IAAMgF,EAAeC,cAChBC,IAAIlF,EAAMmF,IAAK,OACfD,IAAIlF,EAAMoF,IAAK,WACfF,IAAIlF,EAAMqF,IAAK,YACfH,IAAIlF,EAAMsF,IAAK,qBACfJ,IAAIlF,EAAMuF,KAAM,YAChBL,IAAIlF,EAAMwF,IAAK,SACfN,IAAIlF,EAAMyF,KAAM,WAQfC,EAAY,eAAA5G,EAAA6C,OAAAgE,EAAA,EAAAhE,CAAAiE,EAAAC,EAAAC,KAAG,SAAAC,EAAOC,GAAP,IAAAC,EAAAlE,EAAA,OAAA6D,EAAAC,EAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACXJ,EADW,0CAAApD,OACqCmD,EADrC,gHAAAG,EAAAE,KAAA,EAEMC,MAAML,GAFZ,cAEXlE,EAFWoE,EAAAI,KAAAJ,EAAAK,OAAA,SAGVzE,EAAS0E,QAHC,wBAAAN,EAAAO,SAAAX,MAAH,gBAAAY,GAAA,OAAA7H,EAAA8H,MAAA/C,KAAAgD,YAAA,GAwCLC,EAA0B,eAAAC,EAAApF,OAAAgE,EAAA,EAAAhE,CAAAiE,EAAAC,EAAAC,KAAG,SAAAkB,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA1F,EAAA2F,EAAA,OAAA/B,EAAAC,EAAAK,KAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,OAClCY,EAAsBhC,cADYiC,GAAA,EAAAC,GAAA,EAAAC,OAAAS,EAAAD,EAAAxB,KAAA,EAAAiB,EAGRrC,EAAa8C,QAAQC,UAHbC,OAAAC,YAAA,UAAAf,GAAAI,EAAAD,EAAAhB,QAAA6B,KAAA,CAAAN,EAAAvB,KAAA,gBAG3BkB,EAH2BD,EAAA/E,MAAAiF,EAAA7F,OAAAwG,EAAA,EAAAxG,CAIL4F,EAJK,GAI3BE,EAJ2BD,EAAA,GAIpBE,EAJoBF,EAAA,GAAAI,EAAAvB,KAAA,GAOfX,EAAagC,GAPE,QAO5B1F,EAP4B4F,EAAArB,KAQ5BoB,EAAQ1C,YAAsBjD,EAAKoG,YAAYC,eAErDpB,EAASA,EAAO/B,IAAIuC,EAAOE,GAVO,QAAAT,GAAA,EAAAU,EAAAvB,KAAA,gBAAAuB,EAAAvB,KAAA,iBAAAuB,EAAAxB,KAAA,GAAAwB,EAAAU,GAAAV,EAAA,SAAAT,GAAA,EAAAC,EAAAQ,EAAAU,GAAA,QAAAV,EAAAxB,KAAA,GAAAwB,EAAAxB,KAAA,GAAAc,GAAA,MAAAG,EAAAkB,QAAAlB,EAAAkB,SAAA,WAAAX,EAAAxB,KAAA,IAAAe,EAAA,CAAAS,EAAAvB,KAAA,eAAAe,EAAA,eAAAQ,EAAAY,OAAA,mBAAAZ,EAAAY,OAAA,mBAAAZ,EAAApB,OAAA,SAa/BS,GAb+B,yBAAAW,EAAAlB,SAAAM,EAAA,oCAAH,yBAAAD,EAAAH,MAAA/C,KAAAgD,YAAA,GI9D1B4B,EAAeC,+BAAqB,gBAArBA,GAMfC,EAAiBD,+BAAqB,kBAArBA,GAEjBE,EAAiBF,+BAAqB,qBAArBA,GAEjBG,EAAoB,iCAAA/J,EAAA6C,OAAAgE,EAAA,EAAAhE,CAAAiE,EAAAC,EAAAC,KAAM,SAAAgD,EAAOC,GAAP,OAAAnD,EAAAC,EAAAK,KAAA,SAAA8C,GAAA,cAAAA,EAAA5C,KAAA4C,EAAA3C,MAAA,cAAA2C,EAAAxC,OAAA,SAA8B,IAAIyC,QAAQ,SAACC,EAASC,GACvFJ,EAASJ,GAAe,IACxBS,WAAUzH,OAAAgE,EAAA,EAAAhE,CAAAiE,EAAAC,EAAAC,KAAC,SAAAC,IAAA,IAAAsD,EAAA,OAAAzD,EAAAC,EAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEuBS,IAFvB,OAEGuC,EAFHlD,EAAAI,KAGHwC,EAASJ,GAAe,IACxBI,EAASH,EAAe,CAAES,iBAJvBlD,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAmC,GAAAnC,EAAA,SAMH4C,EAASJ,GAAe,IACxBQ,EAAMhD,EAAAmC,IAPH,QASPY,IATO,yBAAA/C,EAAAO,SAAAX,EAAA,iBAUR,QAZgC,wBAAAiD,EAAAtC,SAAAoC,MAAN,gBAAAnC,GAAA,OAAA7H,EAAA8H,MAAA/C,KAAAgD,YAAA,ICJ3ByC,cAaF,SAAAA,EAAmB5F,EAAc6F,GAAiB,IAAA5F,EAAA,OAAAhC,OAAAiC,EAAA,EAAAjC,CAAAkC,KAAAyF,IAC9C3F,EAAAhC,OAAAmC,EAAA,EAAAnC,CAAAkC,KAAAlC,OAAAoC,EAAA,EAAApC,CAAA2H,GAAAtF,KAAAH,KAAMH,EAAO6F,KANTC,0BAK0C,EAAA7F,EAJ1C8F,6BAI0C,EAAA9F,EAH1C+F,mCAG0C,EAAA/F,EA0BjCgG,iBA1BiChI,OAAAgE,EAAA,EAAAhE,CAAAiE,EAAAC,EAAAC,KA0Bd,SAAAC,IAAA,IAAA6D,EAAA,OAAAhE,EAAAC,EAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAC5BuD,EAAQ,GADoBzD,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAItB1C,EAAKD,MAAMmG,QAAQhB,oBAJG,OAAA1C,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAmC,GAAAnC,EAAA,SAM5BhD,EAA4BgD,EAAAmC,GAAQ,CAChC9E,YAAa,qDAEjBoG,EAAQ,EAToB,QAW5BjG,EAAK8F,yBAA2BK,aAAanG,EAAK8F,yBACtD9F,EAAK8F,wBAA0BL,WAAWzF,EAAKgG,iBAA0B,IAARC,GAZjC,yBAAAzD,EAAAO,SAAAX,EAAA,iBA1BcpC,EA0CjCoG,cA1CiCpI,OAAAgE,EAAA,EAAAhE,CAAAiE,EAAAC,EAAAC,KA0CjB,SAAAgD,IAAA,IAAAc,EAAA,OAAAhE,EAAAC,EAAAK,KAAA,SAAA8C,GAAA,cAAAA,EAAA5C,KAAA4C,EAAA3C,MAAA,OACzBuD,EAAQ,KASRjG,EAAK6F,sBAAwBM,aAAanG,EAAK6F,sBACnD7F,EAAK6F,qBAAuBJ,WAAWzF,EAAKoG,cAAuB,IAARH,GAX9B,wBAAAZ,EAAAtC,SAAAoC,MA1CiBnF,EAyDjCqG,uBAzDiCrI,OAAAgE,EAAA,EAAAhE,CAAAiE,EAAAC,EAAAC,KAyDR,SAAAkB,IAAA,OAAApB,EAAAC,EAAAK,KAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,OAExB,GAgBV1C,EAAK+F,+BAAiCI,aAAanG,EAAK+F,+BAC5D/F,EAAK+F,8BAAgCN,WAAWzF,EAAKqG,uBAAwBJ,KAnBvC,wBAAAhC,EAAAlB,SAAAM,MAzDQrD,EAkFjCsG,WAAa,WAC1BtG,EAAKoG,gBAAgBG,MAAM,SAAAjJ,GACvBkC,EAA6BlC,EAAO,CAChCuC,YAAa,gDAIrBG,EAAKgG,mBAAmBO,MAAM,SAAAjJ,GAC1BkC,EAA6BlC,EAAO,CAChCuC,YAAa,mDAIrBG,EAAKqG,yBAAyBE,MAAM,SAAAjJ,GAChCkC,EAA6BlC,EAAO,CAChCuC,YAAa,oDA/FrBG,EAAKS,MAAQ,GAFiCT,2LAO9CE,KAAKoG,8JAKDpG,KAAK2F,sBAAwBM,aAAajG,KAAK2F,sBAC/C3F,KAAK4F,yBAA2BK,aAAajG,KAAK4F,yBAClD5F,KAAK6F,+BAAiCI,aAAajG,KAAK6F,gEAQ5D,OAAOrF,EAAA,cAAAA,EAAA,sBAnCoBQ,aAwItBsF,EAAkBC,YAnBP,SAAChG,GAAD,MAA6B,CACjDiG,MAAO,CACHC,cAAelG,EAAMmG,QAAQD,iBAIV,SAACvB,GAAD,MAAyB,CAChDc,QAASW,YAAmB,CACxB/B,eACAI,qBACDE,KASwBqB,CAA6Cd,YChJ/DmB,EAAmB/B,+BAAqB,mBAArBA,GACnBgC,EAAqBhC,+BAAqB,qBAArBA,GAErBiC,EAAYjC,+BAAqB,qBAArBA,GCVzB,SAAAkC,IAAmR,OAA9PA,EAAAjJ,OAAAkJ,QAAA,SAAAC,GAAgD,QAAAC,EAAA,EAAgBA,EAAAlE,UAAAmE,OAAsBD,IAAA,CAAO,IAAAE,EAAApE,UAAAkE,GAA2B,QAAAjJ,KAAAmJ,EAA0BtJ,OAAAuJ,UAAAC,eAAAnH,KAAAiH,EAAAnJ,KAAyDgJ,EAAAhJ,GAAAmJ,EAAAnJ,IAAiC,OAAAgJ,IAAkBlE,MAAA/C,KAAAgD,WAEnR,SAAAuE,EAAAH,EAAAI,GAAqD,SAAAJ,EAAA,SAA+B,IAA8DnJ,EAAAiJ,EAA9DD,EAEpF,SAAAG,EAAAI,GAA0D,SAAAJ,EAAA,SAA+B,IAAuDnJ,EAAAiJ,EAAvDD,EAAA,GAAiBQ,EAAA3J,OAAAC,KAAAqJ,GAAkD,IAAAF,EAAA,EAAYA,EAAAO,EAAAN,OAAuBD,IAAOjJ,EAAAwJ,EAAAP,GAAqBM,EAAA7I,QAAAV,IAAA,IAA0CgJ,EAAAhJ,GAAAmJ,EAAAnJ,IAA6B,OAAAgJ,EAF9MS,CAAAN,EAAAI,GAA0E,GAAA1J,OAAA6J,sBAAA,CAAoC,IAAAC,EAAA9J,OAAA6J,sBAAAP,GAA6D,IAAAF,EAAA,EAAYA,EAAAU,EAAAT,OAA6BD,IAAOjJ,EAAA2J,EAAAV,GAA2BM,EAAA7I,QAAAV,IAAA,GAA0CH,OAAAuJ,UAAAQ,qBAAA1H,KAAAiH,EAAAnJ,KAAwEgJ,EAAAhJ,GAAAmJ,EAAAnJ,IAA+B,OAAAgJ,EAM3d,IAAIa,GAEJC,EAAA/F,EAAKgG,cAAA,QACLC,UAAA,WACAC,SAAA,UACAC,SAAA,UACAzN,EAAA,gKACA0N,KAAA,YAGIC,GAEJN,EAAA/F,EAAKgG,cAAA,QACLC,UAAA,WACAC,SAAA,UACAC,SAAA,UACAzN,EAAA,oKACA0N,KAAA,YAGIE,GAEJP,EAAA/F,EAAKgG,cAAA,QACLC,UAAA,WACAC,SAAA,UACAC,SAAA,UACAzN,EAAA,kKACA0N,KAAA,YAGIG,GAEJR,EAAA/F,EAAKgG,cAAA,QACLC,UAAA,WACAC,SAAA,UACAC,SAAA,UACAzN,EAAA,kKACA0N,KAAA,YAGII,GAEJT,EAAA/F,EAAKgG,cAAA,QACLC,UAAA,WACAC,SAAA,UACAC,SAAA,UACAzN,EAAA,qKACA0N,KAAA,YAGIK,GAEJV,EAAA/F,EAAKgG,cAAA,QACLC,UAAA,WACAC,SAAA,UACAC,SAAA,UACAzN,EAAA,oKACA0N,KAAA,YAGIM,GAEJX,EAAA/F,EAAKgG,cAAA,QACLC,UAAA,WACAC,SAAA,UACAC,SAAA,UACAzN,EAAA,yJACA0N,KAAA,YAGAO,GAEAZ,EAAA/F,EAAKgG,cAAA,QACLC,UAAA,WACAC,SAAA,UACAC,SAAA,UACAzN,EAAA,yIACA0N,KAAA,YAGAQ,GAEAb,EAAA/F,EAAKgG,cAAA,QACLC,UAAA,WACAC,SAAA,UACAC,SAAA,UACAzN,EAAA,yJACA0N,KAAA,YAGAS,GAEAd,EAAA/F,EAAKgG,cAAA,QACLC,UAAA,WACAC,SAAA,UACAC,SAAA,UACAzN,EAAA,2JACA0N,KAAA,YAGAU,GAEAf,EAAA/F,EAAKgG,cAAA,QACLC,UAAA,WACAC,SAAA,UACAC,SAAA,UACAzN,EAAA,wJACA0N,KAAA,YAGAW,GAEAhB,EAAA/F,EAAKgG,cAAA,QACLC,UAAA,WACAC,SAAA,UACAC,SAAA,UACAzN,EAAA,yJACA0N,KAAA,YAGAY,GAEAjB,EAAA/F,EAAKgG,cAAA,QACLC,UAAA,WACAC,SAAA,UACAC,SAAA,UACAzN,EAAA,mKACA0N,KAAA,YAGIa,GAAO,SAAAhO,GACX,IAAAiO,EAAAjO,EAAAiO,OACArJ,EAAA0H,EAAAtM,EAAA,YAEA,OAAS8M,EAAA/F,EAAKgG,cAAA,MAAAjB,EAAA,CACdoC,MAAA,GACAC,OAAA,GACAC,QAAA,YACAjB,KAAA,OACAkB,IAAAJ,GACGrJ,GAAUiI,GAAOO,GAAOC,GAAOC,GAAOC,GAAOC,GAAOC,GAAKC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,KAG5DO,GAAiBxB,EAAA/F,EAAKwH,WAAA,SAAA3J,EAAAyJ,GACtB,OAASvB,EAAA/F,EAAKgG,cAAeiB,GAAOlC,EAAA,CACpCmC,OAAAI,GACGzJ,MAEYpF,EAAAgP,EC5Jf,SAASC,KAA0Q,OAA7PA,GAAQ5L,OAAAkJ,QAAA,SAAAC,GAAuC,QAAAC,EAAA,EAAgBA,EAAAlE,UAAAmE,OAAsBD,IAAA,CAAO,IAAAE,EAAApE,UAAAkE,GAA2B,QAAAjJ,KAAAmJ,EAA0BtJ,OAAAuJ,UAAAC,eAAAnH,KAAAiH,EAAAnJ,KAAyDgJ,EAAAhJ,GAAAmJ,EAAAnJ,IAAiC,OAAAgJ,IAAkClE,MAAA/C,KAAAgD,WAEnS,SAAS2G,GAAwBvC,EAAAI,GAAoB,SAAAJ,EAAA,SAA+B,IAA8DnJ,EAAAiJ,EAA9DD,EAEpF,SAAsCG,EAAAI,GAAoB,SAAAJ,EAAA,SAA+B,IAAuDnJ,EAAAiJ,EAAvDD,EAAA,GAAiBQ,EAAA3J,OAAAC,KAAAqJ,GAAkD,IAAAF,EAAA,EAAYA,EAAAO,EAAAN,OAAuBD,IAAOjJ,EAAAwJ,EAAAP,GAAqBM,EAAA7I,QAAAV,IAAA,IAA0CgJ,EAAAhJ,GAAAmJ,EAAAnJ,IAA6B,OAAAgJ,EAFhM2C,CAA6BxC,EAAAI,GAA+B,GAAA1J,OAAA6J,sBAAA,CAAoC,IAAAC,EAAA9J,OAAA6J,sBAAAP,GAA6D,IAAAF,EAAA,EAAYA,EAAAU,EAAAT,OAA6BD,IAAOjJ,EAAA2J,EAAAV,GAA2BM,EAAA7I,QAAAV,IAAA,GAA0CH,OAAAuJ,UAAAQ,qBAAA1H,KAAAiH,EAAAnJ,KAAwEgJ,EAAAhJ,GAAAmJ,EAAAnJ,IAA+B,OAAAgJ,EAM3d,ICKY4C,GDLRC,GAEJ/B,EAAA/F,EAAKgG,cAAA,2BAED+B,GAEJhC,EAAA/F,EAAKgG,cAAA,oCAEDgC,GAEJjC,EAAA/F,EAAKgG,cAAA,aAEDiC,GAEJlC,EAAA/F,EAAKgG,cAAA,KACLkC,GAAA,SACAC,OAAA,OACAC,YAAA,EACAhC,KAAA,OACAF,SAAA,WACGH,EAAA/F,EAAKgG,cAAA,KACRkC,GAAA,cACGnC,EAAA/F,EAAKgG,cAAA,WACRkC,GAAA,SACA9B,KAAA,UACAiC,OAAA,wCACItC,EAAA/F,EAAKgG,cAAA,WACTkC,GAAA,SACA9B,KAAA,UACAiC,OAAA,sDACItC,EAAA/F,EAAKgG,cAAA,WACTkC,GAAA,SACA9B,KAAA,UACAiC,OAAA,sDACItC,EAAA/F,EAAKgG,cAAA,WACTkC,GAAA,SACA9B,KAAA,UACAiC,OAAA,oDACItC,EAAA/F,EAAKgG,cAAA,WACTkC,GAAA,SACA9B,KAAA,UACAiC,OAAA,gGACItC,EAAA/F,EAAKgG,cAAA,WACTkC,GAAA,SACA9B,KAAA,UACAiC,OAAA,4FACItC,EAAA/F,EAAKgG,cAAA,WACTkC,GAAA,SACA9B,KAAA,UACAiC,OAAA,sEACItC,EAAA/F,EAAKgG,cAAA,WACTkC,GAAA,SACA9B,KAAA,UACAiC,OAAA,oDACItC,EAAA/F,EAAKgG,cAAA,WACTkC,GAAA,SACA9B,KAAA,UACAiC,OAAA,sEACItC,EAAA/F,EAAKgG,cAAA,WACTkC,GAAA,UACA9B,KAAA,UACAiC,OAAA,6GACItC,EAAA/F,EAAKgG,cAAA,WACTkC,GAAA,UACA9B,KAAA,UACAiC,OAAA,0EACItC,EAAA/F,EAAKgG,cAAA,WACTkC,GAAA,UACA9B,KAAA,UACAiC,OAAA,kQACItC,EAAA/F,EAAKgG,cAAA,WACTkC,GAAA,UACA9B,KAAA,UACAiC,OAAA,8EACItC,EAAA/F,EAAKgG,cAAA,WACTkC,GAAA,UACA9B,KAAA,UACAiC,OAAA,sGAGIC,GAAW,SAAArP,GACf,IAAAiO,EAAAjO,EAAAiO,OACArJ,EAAc8J,GAAwB1O,EAAA,YAEtC,OAAS8M,EAAA/F,EAAKgG,cAAA,MAAsB0B,GAAQ,CAC5CP,MAAA,OACAC,OAAA,OACAC,QAAA,YACAC,IAAAJ,GACGrJ,GAAUiK,GAAOC,GAAOC,GAAOC,KAG9BM,GAAaxC,EAAA/F,EAAKwH,WAAA,SAAA3J,EAAAyJ,GACtB,OAASvB,EAAA/F,EAAKgG,cAAesC,GAAaZ,GAAQ,CAClDR,OAAAI,GACGzJ,ME1EG2K,IF4ES/P,EAAAgP,EEzFY,WACvB,IAAMgB,EAAU,IAAIrJ,IADSiC,GAAA,EAAAC,GAAA,EAAAC,OAAAS,EAAA,IAG7B,QAAAP,EAAAD,EAAuBkH,IAAvBvG,OAAAC,cAAAf,GAAAI,EAAAD,EAAAhB,QAAA6B,MAAAhB,GAAA,EAAmC,KAAxBsH,EAAwBlH,EAAA/E,MAC/B+L,EAAQpJ,IAAIsJ,EAASA,SAAUnK,EAAA,cAAAA,EAAA,cAC3BA,EAAA,cAACoK,EAAA,EAAD,CAAcD,SAAUA,EAASA,WAChC,IAAKA,EAAShL,eANM,MAAAkL,GAAAvH,GAAA,EAAAC,EAAAsH,EAAA,YAAAxH,GAAA,MAAAG,EAAAkB,QAAAlB,EAAAkB,SAAA,WAAApB,EAAA,MAAAC,GAU7B,OAAOkH,EAGaK,IAElBC,IAAkB,IAAI3J,KACvBC,IAAI,KACDb,EAAA,cAAAA,EAAA,cAAEA,EAAA,cAAC+J,GAAD,MAAF,aAGFS,GAAOxK,EAAA,cAACyK,EAAA,EAAD,CAAMhD,UAAU,eAAeiD,GAAG,KAC3C1K,EAAA,cAAC+I,GAAD,MACA/I,EAAA,mCAME2K,8MACKC,OAAS,WAAmB,IACdC,EAAoBvL,EAAKD,MAAlC2G,MAAS6E,cAEXC,EAAmB9K,EAAA,cAACoK,EAAA,EAAD,CACrB3M,IAAI,mBACJsN,SAAU,CACN7M,MAAO,KACP0M,OAAQ,WAEZX,QAASM,GACTS,SAAU1L,EAAK2L,cAGbC,EAAmBlL,EAAA,cAACoK,EAAA,EAAD,CACrB3M,IAAI,mBACJsN,SAAU,CACN7M,MAAO2M,EACPD,OAAQ5K,EAAA,cAAAA,EAAA,cACJA,EAAA,cAACoK,EAAA,EAAD,CAAcD,SAAUU,IACvB,IAAKA,EAAcpM,gBAG5BwL,QAASD,GACTgB,SAAU1L,EAAK6L,cAGnB,OACInL,EAAA,cAACoK,EAAA,EAAD,CACII,KAAMA,GACNY,KAAM,CACFN,EAAkBI,QAMjBC,YAAc,SAACN,GAC5BvL,EAAKD,MAAMmG,QAAQY,iBAAiByE,MAGvBI,YAAc,SAACI,kCAzCA7K,aAgEvB8K,GAAmBvF,YAlBR,SAAChG,GAAD,MAA6B,CACjDiG,MAAO,CACH6E,cAAe9K,EAAMmG,QAAQ2E,iBAIV,SAACnG,GAAD,MAAyB,CAChDc,QAASW,YAAmB,CACxBC,oBACD1B,KASyBqB,CAA6C4E,+FC1GhEY,GAAW,SAAIC,GAAJ,sBAAA/Q,EAAA6C,OAAAgE,EAAA,EAAAhE,CAAAiE,EAAAC,EAAAC,KAAyB,SAAAC,EAAO9G,EAAiB6Q,EAAeC,GAAvC,IAAAC,EAAA,OAAApK,EAAAC,EAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAC1B4J,KAAMC,IAAN,GAAArN,OAAkBgN,EAAlB,UAAAhN,OAAmC5D,EAAnC,WAAA4D,OAAoDiN,EAApD,mBAAAjN,OAA2EkN,IADjD,cACvCC,EADuC7J,EAAAI,KAAAJ,EAAAK,OAAA,SAEtCwJ,EAAKhO,MAFiC,wBAAAmE,EAAAO,SAAAX,MAAzB,gBAAAY,EAAAwJ,EAAAC,GAAA,OAAAtR,EAAA8H,MAAA/C,KAAAgD,YAAA,cCKXwJ,GAAmB3R,aAAc4R,YAAUC,UAAQC,WAmBnDC,GAAqBb,GAjBX,kDAuBVc,GAA0BL,GAAiB,CAAEtR,SAAS,EAAOC,UAAWP,iBCxBxEkS,GAAmBjS,aAAc4R,YAAUC,UAAQC,WAmBnDI,GAAqBhB,GAjBX,iDAuBViB,GAA0BF,GAAiB,CAAE5R,SAAS,EAAOC,UAAWP,OAExEqS,GAAkB,SAAC7R,GAAD,WAAA4D,OAA0BkO,kBAAS9R,GAASa,SAAS,SC/BvEkR,WAAkB,SAACC,GAAD,MAA2B,CAAEA,kBAE/CC,GAAmB,SAACD,GAC7B,IAAME,EAAQF,EAAaA,aAAaE,MAAM,KAC9C,MAAO,CAAEpD,GAAIoD,EAAMA,EAAMnG,OAAS,eCMzBoG,WAAc,8CACdC,GAAc,6CAWdC,IATYC,YAAO,CAC5BxD,GAAI,GACJyD,UAAWC,gBAOa,SAACC,EAAYzS,GACrC,OAAO,IAAIyS,EAAKC,IAAIC,SAASC,GAA8B5S,eNdnDyO,qDAKL,IOEKoE,GAKAC,GPPCC,GAAe,CAACtE,GAAStI,IAAKsI,GAASlI,IAAKkI,GAASrI,KAErD4M,GAAmB,SAACzD,GAC7B,OAAQA,GACJ,KAAKd,GAAStI,IAEd,KAAKsI,GAASlI,IACV,OAAO,EACX,KAAKkI,GAASrI,IACV,OAAO,KAiBN6M,GAST,SAAAA,EAAYC,GAAwB,IAAAxO,EAAAE,KAAAlC,OAAAiC,EAAA,EAAAjC,CAAAkC,KAAAqO,GAAArO,KAR7BsO,oBAQ6B,EAAAtO,KAN7BuO,sBAM6B,EAAAvO,KAJnB6N,UAImB,EAAA7N,KAHnBwO,UAGmB,EAAAxO,KAFnByO,UAEmB,EAAAzO,KAgB7B+L,SAhB6BjO,OAAAgE,EAAA,EAAAhE,CAAAiE,EAAAC,EAAAC,KAgBlB,SAAAC,IAAA,IAAA+J,EAAAC,EAAAwC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA/L,UAAA,OAAAjB,EAAAC,EAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAAOyJ,EAAP8C,EAAA5H,OAAA,QAAAnD,IAAA+K,EAAA,GAAAA,EAAA,GAAe,GAAI7C,EAAnB6C,EAAA5H,OAAA,QAAAnD,IAAA+K,EAAA,GAAAA,EAAA,GAAmC,EAC7CL,EAAQd,gBAENe,EAAoB7O,EAAKyO,iBAAiBlC,IAAIxC,GAAStI,MAH/C,CAAAe,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAM+EoK,GAAmB+B,EAAmB1C,EAAOC,GAN5H,OAAA5J,EAAAmC,GAMgJ,SAAAuK,GAAI,MAAK,CAAErE,SAAUd,GAAStI,IAAKyN,SAAnLJ,EANAtM,EAAAI,KAM4IuM,IAN5I3M,EAAAmC,IAONiK,EAAQA,EAAM1P,OAAO4O,YAAKgB,IAPpBtM,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAA4M,GAAA5M,EAAA,SASNvD,QAAQ3B,MAARkF,EAAA4M,IATM,aAaRL,EAAoB/O,EAAKyO,iBAAiBlC,IAAIxC,GAASlI,MAb/C,CAAAW,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,GAAAD,EAAAE,KAAA,GAgB2EuK,GAAmB8B,EAAmB5C,EAAOC,GAhBxH,QAAA5J,EAAA6M,GAgB4I,SAAAH,GAAI,MAAK,CAAErE,SAAUd,GAASlI,IAAKqN,SAA/KF,EAhBAxM,EAAAI,KAgBwIuM,IAhBxI3M,EAAA6M,IAiBNT,EAAQA,EAAM1P,OAAO4O,YAAKkB,IAjBpBxM,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAA8M,GAAA9M,EAAA,UAmBNvD,QAAQ3B,MAARkF,EAAA8M,IAnBM,eAAA9M,EAAAK,OAAA,SAuBP+L,GAvBO,yBAAApM,EAAAO,SAAAX,EAAA,0BAhBkBlC,KA0C7BqP,YA1C6BvR,OAAAgE,EAAA,EAAAhE,CAAAiE,EAAAC,EAAAC,KA0Cf,SAAAgD,IAAA,IAAAqK,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA5N,EAAAC,EAAAK,KAAA,SAAA8C,GAAA,cAAAA,EAAA5C,KAAA4C,EAAA3C,MAAA,OACb8M,EAAWM,cADEL,EAAA,EAAAC,EAGgB,CAC7B,CAAEE,KAAM7F,GAAStI,IAAKoO,SAAU7P,EAAK0O,MACrC,CAAEkB,KAAM7F,GAASlI,IAAKgO,SAAU7P,EAAK2O,OALxB,YAAAc,EAAAC,EAAArI,QAAA,CAAAhC,EAAA3C,KAAA,YAAAiN,EAAAD,EAAAD,GAGJG,EAHID,EAGJC,KAAMC,EAHFF,EAGEE,UAIX7P,EAAK+N,OAAQ8B,EAPJ,CAAAxK,EAAA3C,KAAA,gBAAA2C,EAAA5C,KAAA,EAAA4C,EAAAV,GASM6K,EATNnK,EAAA+J,GASmBQ,EATnBvK,EAAAgK,GASyBrP,EAAK+N,KAAKgC,MATnC1K,EAAA3C,KAAA,GASuDmN,EAASG,QAAQC,UAAUjQ,EAAKwO,gBAAgBnO,OATvG,QAAAgF,EAAAiK,GAAAjK,EAAAzC,KAAAyC,EAAA6K,GAAA7K,EAAAgK,GASyCc,QATzC9P,KAAAgF,EAAAgK,GAAAhK,EAAAiK,IASLE,EATKnK,EAAAV,GASepD,IATflB,KAAAgF,EAAAV,GAAAU,EAAA+J,GAAA/J,EAAA6K,IAAA7K,EAAA3C,KAAA,iBAAA2C,EAAA5C,KAAA,GAAA4C,EAAA+K,GAAA/K,EAAA,SAWLpG,QAAQ3B,MAAR+H,EAAA+K,IAXK,QAAAX,IAAApK,EAAA3C,KAAA,uBAAA2C,EAAAxC,OAAA,SAgBV2M,GAhBU,yBAAAnK,EAAAtC,SAAAoC,EAAA,kBA1CejF,KA6D7BmQ,WA7D6B,eAAAC,EAAAtS,OAAAgE,EAAA,EAAAhE,CAAAiE,EAAAC,EAAAC,KA6DhB,SAAAkB,EAAOwH,GAAP,OAAA5I,EAAAC,EAAAK,KAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,OAAAuB,EAAAU,GACRkG,EADQ5G,EAAAvB,KAAAuB,EAAAU,KAEPoF,GAAStI,IAFF,EAAAwC,EAAAU,KAMPoF,GAASlI,IANF,GAAAoC,EAAAU,KAUPoF,GAASrI,IAVF,uBAGA1B,EAAK+N,OAAQ/N,EAAK0O,KAHlB,CAAAzK,EAAAvB,KAAA,gBAAAuB,EAAAoL,GAIAkB,KAJAtM,EAAAvB,KAAA,EAIgB1C,EAAK0O,KAAKsB,QAAQC,UAAUjQ,EAAKwO,gBAAgBnO,OAJjE,OAAA4D,EAAAqL,GAAArL,EAAArB,KAAAqB,EAAAiM,GAAArT,KAAA2T,IAI6E,GAAMlC,GAAiBvE,GAAStI,MAJ7GwC,EAAAmL,GAAA,IAAAnL,EAAAoL,GAAApL,EAAAqL,IAIyEmB,IAJzExM,EAAAiM,IAImHQ,UAJnHzM,EAAAvB,KAAA,iBAAAuB,EAAAmL,GAKJ,IALI,eAAAnL,EAAApB,OAAA,SAAAoB,EAAAmL,IAAA,YAOApP,EAAK+N,OAAQ/N,EAAK2O,KAPlB,CAAA1K,EAAAvB,KAAA,gBAAAuB,EAAA0M,GAQAJ,KARAtM,EAAAvB,KAAA,GAQgB1C,EAAK2O,KAAKqB,QAAQC,UAAUjQ,EAAKwO,gBAAgBnO,OARjE,QAAA4D,EAAA2M,GAAA3M,EAAArB,KAAAqB,EAAA4M,GAAAhU,KAAA2T,IAQ6E,GAAMlC,GAAiBvE,GAAStI,MAR7GwC,EAAAmM,GAAA,IAAAnM,EAAA0M,GAAA1M,EAAA2M,IAQyEH,IARzExM,EAAA4M,IAQmHH,UARnHzM,EAAAvB,KAAA,iBAAAuB,EAAAmM,GASJ,IATI,eAAAnM,EAAApB,OAAA,SAAAoB,EAAAmM,IAAA,eAAAnM,EAAApB,OAAA,SAaD,KAbC,yBAAAoB,EAAAlB,SAAAM,MA7DgB,gBAAAL,GAAA,OAAAsN,EAAArN,MAAA/C,KAAAgD,YAAA,GAAAhD,KA8E7B4Q,KA9E6B,eAAAC,EAAA/S,OAAAgE,EAAA,EAAAhE,CAAAiE,EAAAC,EAAAC,KA8EtB,SAAA6O,EAAOnG,EAAoBO,EAAY6F,GAAvC,IAAAlD,EAAA8B,EAAAqB,EAAA,OAAAjP,EAAAC,EAAAK,KAAA,SAAA4O,GAAA,cAAAA,EAAA1O,KAAA0O,EAAAzO,MAAA,cAAAyO,EAAA1O,KAAA,EAAA0O,EAAAzO,KAAA,EAGO0O,KAHP,OAGNrD,EAHMoD,EAAAvO,KAAAuO,EAAAzO,KAAA,qBAAAyO,EAAA1O,KAAA,EAAA0O,EAAAxM,GAAAwM,EAAA,SAKA,IAAIE,MAAM,sCALV,cAAAF,EAAAzO,KAAA,GAOYqL,EAAKC,IAAIsD,IAAIC,iBAPzB,WAQM,UARNJ,EAAAvO,KAAA,CAAAuO,EAAAzO,KAAA,eASA,IAAI2O,MAAM,oDATV,eAAAF,EAAAzO,KAAA,GAWeqL,EAAKC,IAAIwD,cAXxB,WAAAL,EAAA/B,GAW2C,SAAAlN,GAAC,OAAIA,EAAE/C,gBACE,IAZpDgS,EAAAvO,KAWuCuM,IAXvCgC,EAAA/B,IAYIvQ,QAAQmB,EAAKwO,eAAerP,eAZhC,CAAAgS,EAAAzO,KAAA,eAaA,IAAI2O,MAAM,8DAbV,gBAoBOnN,KAJX2L,EAAWhF,IAAad,GAAStI,IAAMkM,GAAaI,EAAMN,IAC5D5C,IAAad,GAASlI,IAAM8L,GAAaI,EAAML,SAC3CxJ,GAlBE,CAAAiN,EAAAzO,KAAA,eAqBA,IAAI2O,MAAM,qDArBV,eAwBJH,EAAQrG,IAAad,GAAStI,KGzHZnG,EHyHkC8P,EGzHnC,KAAAlM,OAA0BkO,kBAAS9R,GAASa,SAAS,SH0HxE0O,IAAad,GAASlI,IAAMsL,GAAgB/B,GACxCA,EA1BE+F,EAAAzO,KAAA,GA4BJmN,EAASG,QAAQc,KAAKI,EAAO,IAAIX,KAAUU,GAAQQ,aAAtB5U,KAAA2T,IAAmC,GAAMlC,GAAiBzD,KAAW6F,WAAWgB,KAAK,CAAEC,KAAM3R,EAAKwO,iBA5B3H,QA6BVvP,QAAQ2S,IAAI,4BA7BF,yBAAAT,EAAApO,OGjGa,IAACzH,GHiGd0V,EAAA,iBA9EsB,gBAAAxE,EAAAC,EAAAoF,GAAA,OAAAd,EAAA9N,MAAA/C,KAAAgD,YAAA,GAChChD,KAAKsO,eAAiBA,EAEtBtO,KAAKuO,kBAAoB,IAAInN,KACxBC,IAAIwI,GAASlI,IAAKqL,GAAwBsB,IAC1CjN,IAAIwI,GAAStI,IAAKsL,GAAwByB,IAC1CjN,IAAIwI,GAASrI,IAAK8M,GAInBtO,KAAK6N,KAAO,IAAI+D,KAAKtV,GACrB0D,KAAKwO,KAAOf,GAAazN,KAAK6N,KAAMN,IACpCvN,KAAKyO,KAAOhB,GAAazN,KAAK6N,KAAML,KQjDnCqE,GAAb,WAII,SAAAA,EAAYzE,GAER,GAFqCtP,OAAAiC,EAAA,EAAAjC,CAAAkC,KAAA6R,GAAA7R,KAHlCoN,kBAGiC,EAAApN,KAFvBoC,SAEuB,EACpCpC,KAAKoN,aAAeA,EACwB,MAAxCA,EAAaA,aAAa0E,OAAO,GACjC,IAAI,IAAAC,EAC6C3E,EAAaA,aAAaE,MAAM,KAD7E0E,EAAAlU,OAAAwG,EAAA,EAAAxG,CAAAiU,EAAA,GACgBE,GADhBD,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAC0BE,GAD1BF,EAAA,GAAAA,EAAA,IAEMG,GAFNH,EAAA,GAAAA,EAAA,GAE2B,UAATE,EAAmB,QAAUA,GAE/ClS,KAAKoC,IAAL,UAAApD,OAAqBiT,EAArB,KAAAjT,OAA2BmT,GAC7B,MAAO/U,GACL,MAAM,IAAI+T,MAAJ,8BAAAnS,OAAwCoO,SAGlDpN,KAAKoC,IAAMgL,EAAaA,aAhBpC,OAAAtP,OAAAsU,EAAA,EAAAtU,CAAA+T,EAAA,EAAA5T,IAAA,YAAAS,MAAA,eAAA2T,EAAAvU,OAAAgE,EAAA,EAAAhE,CAAAiE,EAAAC,EAAAC,KAAA,SAAAC,IAAA,IAAAiK,EAAA,OAAApK,EAAAC,EAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAuByB8P,KAAMC,KAAN,GAAAvT,OAAcgB,KAAKoC,KAAOpC,KAAKwS,gBAAgB,oBAvBxE,UAwBgC,OADpBrG,EAvBZ7J,EAAAI,MAwBqBtE,OAxBrB,CAAAkE,EAAAE,KAAA,cAyBsBxC,KAAKyS,cAAc,8CAA+CtG,GAzBxF,OAAA7J,EAAAE,KAAA,mBAAAF,EAAAC,KAAA,EAAAD,EAAAmC,GAAAnC,EAAA,UA4BgBA,EAAAmC,GAAMvG,SA5BtB,CAAAoE,EAAAE,KAAA,eA6BsB,IAAI2O,MAAJ,4BAAAnS,OAC0BsD,EAAAmC,GAAMvG,SAASE,OADzC,kBAAAY,OACgEsD,EAAAmC,GAAMvG,SAASC,OA9BrG,cAAAmE,EAAAmC,GAAA,eAAAnC,EAAAK,OAAA,SAoCewJ,EAAKhO,MApCpB,yBAAAmE,EAAAO,SAAAX,EAAAlC,KAAA,qCAAAqS,EAAAtP,MAAA/C,KAAAgD,YAAA,KAAA/E,IAAA,WAAAS,MAAA,eAAAgU,EAAA5U,OAAAgE,EAAA,EAAAhE,CAAAiE,EAAAC,EAAAC,KAAA,SAAAgD,IAAA,IAAAkH,EAAA,OAAApK,EAAAC,EAAAK,KAAA,SAAA8C,GAAA,cAAAA,EAAA5C,KAAA4C,EAAA3C,MAAA,cAAA2C,EAAA5C,KAAA,EAAA4C,EAAA3C,KAAA,EA0CyB8P,KAAMC,KAAN,GAAAvT,OAAcgB,KAAKoC,KAAOpC,KAAKwS,gBAAgB,mBA1CxE,UA2CgC,OADpBrG,EA1CZhH,EAAAzC,MA2CqBtE,OA3CrB,CAAA+G,EAAA3C,KAAA,cA4CsBxC,KAAKyS,cAAc,8CAA+CtG,GA5CxF,OAAAhH,EAAA3C,KAAA,mBAAA2C,EAAA5C,KAAA,EAAA4C,EAAAV,GAAAU,EAAA,UA+CgBA,EAAAV,GAAMvG,SA/CtB,CAAAiH,EAAA3C,KAAA,eAgDsB,IAAI2O,MAAJ,4BAAAnS,OAC0BmG,EAAAV,GAAMvG,SAASE,OADzC,kBAAAY,OACgEmG,EAAAV,GAAMvG,SAASC,OAjDrG,cAAAgH,EAAAV,GAAA,eAAAU,EAAAxC,OAAA,SAuDewJ,EAAKhO,MAvDpB,yBAAAgH,EAAAtC,SAAAoC,EAAAjF,KAAA,qCAAA0S,EAAA3P,MAAA/C,KAAAgD,YAAA,KAAA/E,IAAA,mBAAAS,MAAA,eAAAiU,EAAA7U,OAAAgE,EAAA,EAAAhE,CAAAiE,EAAAC,EAAAC,KAAA,SAAAkB,IAAA,IAAAgJ,EAAA,OAAApK,EAAAC,EAAAK,KAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,cAAAuB,EAAAxB,KAAA,EAAAwB,EAAAvB,KAAA,EA6DyB8P,KAAMC,KAAN,GAAAvT,OAAcgB,KAAKoC,KAAOpC,KAAKwS,gBAAgB,sBA7DxE,UA8DgC,OADpBrG,EA7DZpI,EAAArB,MA8DqBtE,OA9DrB,CAAA2F,EAAAvB,KAAA,cA+DsBxC,KAAKyS,cAAc,8CAA+CtG,GA/DxF,OAAApI,EAAAvB,KAAA,mBAAAuB,EAAAxB,KAAA,EAAAwB,EAAAU,GAAAV,EAAA,UAkEgBA,EAAAU,GAAMvG,SAlEtB,CAAA6F,EAAAvB,KAAA,eAmEsB,IAAI2O,MAAJ,4BAAAnS,OAC0B+E,EAAAU,GAAMvG,SAASE,OADzC,kBAAAY,OACgE+E,EAAAU,GAAMvG,SAASC,OApErG,cAAA4F,EAAAU,GAAA,eAAAV,EAAApB,OAAA,SA0EewJ,EAAKhO,MA1EpB,yBAAA4F,EAAAlB,SAAAM,EAAAnD,KAAA,qCAAA2S,EAAA5P,MAAA/C,KAAAgD,YAAA,KAAA/E,IAAA,WAAAS,MAAA,eAAAkU,EAAA9U,OAAAgE,EAAA,EAAAhE,CAAAiE,EAAAC,EAAAC,KAAA,SAAA6O,IAAA,IAAA3E,EAAA,OAAApK,EAAAC,EAAAK,KAAA,SAAA4O,GAAA,cAAAA,EAAA1O,KAAA0O,EAAAzO,MAAA,cAAAyO,EAAA1O,KAAA,EAAA0O,EAAAzO,KAAA,EAgFyB8P,KAAMC,KAAN,GAAAvT,OAAcgB,KAAKoC,KAAOpC,KAAKwS,gBAAgB,mBAhFxE,UAiFgC,OADpBrG,EAhFZ8E,EAAAvO,MAiFqBtE,OAjFrB,CAAA6S,EAAAzO,KAAA,cAkFsBxC,KAAKyS,cAAc,8CAA+CtG,GAlFxF,OAAA8E,EAAAzO,KAAA,mBAAAyO,EAAA1O,KAAA,EAAA0O,EAAAxM,GAAAwM,EAAA,UAqFgBA,EAAAxM,GAAMvG,SArFtB,CAAA+S,EAAAzO,KAAA,eAsFsB,IAAI2O,MAAJ,4BAAAnS,OAC0BiS,EAAAxM,GAAMvG,SAASE,OADzC,kBAAAY,OACgEiS,EAAAxM,GAAMvG,SAASC,OAvFrG,cAAA8S,EAAAxM,GAAA,eAAAwM,EAAAtO,OAAA,SA6FewJ,EAAKhO,MA7FpB,yBAAA8S,EAAApO,SAAAiO,EAAA9Q,KAAA,qCAAA4S,EAAA7P,MAAA/C,KAAAgD,YAAA,KAAA/E,IAAA,eAAAS,MAAA,eAAAmU,EAAA/U,OAAAgE,EAAA,EAAAhE,CAAAiE,EAAAC,EAAAC,KAAA,SAAA6Q,EAgG8BC,GAhG9B,IAAA5G,EAAA,OAAApK,EAAAC,EAAAK,KAAA,SAAA2Q,GAAA,cAAAA,EAAAzQ,KAAAyQ,EAAAxQ,MAAA,cAAAwQ,EAAAzQ,KAAA,EAAAyQ,EAAAxQ,KAAA,EAmGyB8P,KAAMC,KAAN,GAAAvT,OAAcgB,KAAKoC,KAAOpC,KAAKwS,gBAAgB,qBAAsBO,IAnG9F,UAoGgC,OADpB5G,EAnGZ6G,EAAAtQ,MAoGqBtE,OApGrB,CAAA4U,EAAAxQ,KAAA,cAqGsBxC,KAAKyS,cAAc,8CAA+CtG,GArGxF,OAAA6G,EAAAxQ,KAAA,mBAAAwQ,EAAAzQ,KAAA,EAAAyQ,EAAAvO,GAAAuO,EAAA,UAwGgBA,EAAAvO,GAAMvG,SAxGtB,CAAA8U,EAAAxQ,KAAA,eAyGsB,IAAI2O,MAAJ,4BAAAnS,OAC0BgU,EAAAvO,GAAMvG,SAASE,OADzC,kBAAAY,OACgEgU,EAAAvO,GAAMvG,SAASC,OA1GrG,cAAA6U,EAAAvO,GAAA,eAAAuO,EAAArQ,OAAA,SAgHewJ,EAAKhO,MAhHpB,yBAAA6U,EAAAnQ,SAAAiQ,EAAA9S,KAAA,4BAAA8C,GAAA,OAAA+P,EAAA9P,MAAA/C,KAAAgD,YAAA,KAAA/E,IAAA,cAAAS,MAAA,eAAAuU,EAAAnV,OAAAgE,EAAA,EAAAhE,CAAAiE,EAAAC,EAAAC,KAAA,SAAAiR,EAmH6BH,GAnH7B,IAAA5G,EAAA,OAAApK,EAAAC,EAAAK,KAAA,SAAA8Q,GAAA,cAAAA,EAAA5Q,KAAA4Q,EAAA3Q,MAAA,cAAA2Q,EAAA5Q,KAAA,EAAA4Q,EAAA3Q,KAAA,EAsHyB8P,KAAMC,KAAN,GAAAvT,OAAcgB,KAAKoC,KAAOpC,KAAKwS,gBAAgB,kBAAmBO,IAtH3F,UAuHgC,OADpB5G,EAtHZgH,EAAAzQ,MAuHqBtE,OAvHrB,CAAA+U,EAAA3Q,KAAA,cAwHsBxC,KAAKyS,cAAc,8CAA+CtG,GAxHxF,OAAAgH,EAAA3Q,KAAA,mBAAA2Q,EAAA5Q,KAAA,EAAA4Q,EAAA1O,GAAA0O,EAAA,UA2HgBA,EAAA1O,GAAMvG,SA3HtB,CAAAiV,EAAA3Q,KAAA,eA4HsB,IAAI2O,MAAJ,4BAAAnS,OAC0BmU,EAAA1O,GAAMvG,SAASE,OADzC,kBAAAY,OACgEmU,EAAA1O,GAAMvG,SAASC,OA7HrG,cAAAgV,EAAA1O,GAAA,eAAA0O,EAAAxQ,OAAA,SAmIewJ,EAAKhO,MAnIpB,yBAAAgV,EAAAtQ,SAAAqQ,EAAAlT,KAAA,4BAAAsM,GAAA,OAAA2G,EAAAlQ,MAAA/C,KAAAgD,YAAA,KAAA/E,IAAA,iBAAAS,MAAA,eAAA0U,EAAAtV,OAAAgE,EAAA,EAAAhE,CAAAiE,EAAAC,EAAAC,KAAA,SAAAoR,EAsIgCN,GAtIhC,IAAA5G,EAAA,OAAApK,EAAAC,EAAAK,KAAA,SAAAiR,GAAA,cAAAA,EAAA/Q,KAAA+Q,EAAA9Q,MAAA,cAAA8Q,EAAA/Q,KAAA,EAAA+Q,EAAA9Q,KAAA,EAyIyB8P,KAAMC,KAAN,GAAAvT,OAAcgB,KAAKoC,KAAOpC,KAAKwS,gBAAgB,qBAAsBO,IAzI9F,UA0IgC,OADpB5G,EAzIZmH,EAAA5Q,MA0IqBtE,OA1IrB,CAAAkV,EAAA9Q,KAAA,cA2IsBxC,KAAKyS,cAAc,8CAA+CtG,GA3IxF,OAAAmH,EAAA9Q,KAAA,mBAAA8Q,EAAA/Q,KAAA,EAAA+Q,EAAA7O,GAAA6O,EAAA,UA8IgBA,EAAA7O,GAAMvG,SA9ItB,CAAAoV,EAAA9Q,KAAA,eA+IsB,IAAI2O,MAAJ,4BAAAnS,OAC0BsU,EAAA7O,GAAMvG,SAASE,OADzC,kBAAAY,OACgEsU,EAAA7O,GAAMvG,SAASC,OAhJrG,cAAAmV,EAAA7O,GAAA,eAAA6O,EAAA3Q,OAAA,SAsJewJ,EAAKhO,MAtJpB,yBAAAmV,EAAAzQ,SAAAwQ,EAAArT,KAAA,4BAAAuM,GAAA,OAAA6G,EAAArQ,MAAA/C,KAAAgD,YAAA,KAAA/E,IAAA,kBAAAS,MAAA,SAyJ4B6U,EAAgBC,GACpC,MAAO,CACHtJ,GAAI,EACJuJ,QAAS,MACTF,SACAC,SACAE,QAAS,SA/JrB,CAAAzV,IAAA,gBAAAS,MAAA,SAmK0BiV,EAAazV,GAC/B,IAAMd,EAAQ,IAAI+T,MAAMwC,GAExB,OADAvW,EAAMc,SAAWA,EACVd,MAtKfyU,EAAA,GCQa+B,GAAiB,CATPzG,GAAgB,gEAChBA,GAAgB,+DAChBA,GAAgB,+DAChBA,GAAgB,6DAChBA,GAAgB,8DAChBA,GAAgB,gEAChBA,GAAgB,+DAChBA,GAAgB,iEAajC0G,GAAU,eAAA5Y,EAAA6C,OAAAgE,EAAA,EAAAhE,CAAAiE,EAAAC,EAAAC,KAAG,SAAAC,EAAU4R,EAAwBC,GAAlC,IAAAC,EAAA3Q,EAAAC,EAAAC,EAAAC,EAAAC,EAAAwQ,EAAA,OAAAlS,EAAAC,EAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACXwR,EAAUpG,cADCvK,GAAA,EAAAC,GAAA,EAAAC,OAAAS,EAAA1B,EAAAC,KAAA,EAAAiB,EAEMsQ,EAAK5P,UAFXC,OAAAC,YAAA,UAAAf,GAAAI,EAAAD,EAAAhB,QAAA6B,KAAA,CAAA/B,EAAAE,KAAA,gBAEJyR,EAFIxQ,EAAA/E,MAAA4D,EAAAC,KAAA,EAAAD,EAAAmC,GAIGuP,EAJH1R,EAAAE,KAAA,GAIsByR,EAJtB,QAAA3R,EAAA4M,GAAA5M,EAAAI,KAIPsR,EAJO1R,EAAAmC,GAIW5F,KAJXsB,KAAAmC,EAAAmC,GAAAnC,EAAA4M,IAAA5M,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAA6M,GAAA7M,EAAA,SAMP0R,EAAUA,EAAQnV,KAAKkV,GANhB,QAAA1Q,GAAA,EAAAf,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAA8M,GAAA9M,EAAA,SAAAgB,GAAA,EAAAC,EAAAjB,EAAA8M,GAAA,QAAA9M,EAAAC,KAAA,GAAAD,EAAAC,KAAA,GAAAc,GAAA,MAAAG,EAAAkB,QAAAlB,EAAAkB,SAAA,WAAApC,EAAAC,KAAA,IAAAe,EAAA,CAAAhB,EAAAE,KAAA,eAAAe,EAAA,eAAAjB,EAAAqC,OAAA,mBAAArC,EAAAqC,OAAA,mBAAArC,EAAAK,OAAA,SASRqR,GATQ,yBAAA1R,EAAAO,SAAAX,EAAA,2CAAH,gBAAAY,EAAAwJ,GAAA,OAAArR,EAAA8H,MAAA/C,KAAAgD,YAAA,GAuFHkR,GAAb,SAAAC,GACI,SAAAD,EAAYE,GAA+C,IAAAC,EAAA,OAAAvW,OAAAiC,EAAA,EAAAjC,CAAAkC,KAAAkU,IACvDG,EAAAvW,OAAAmC,EAAA,EAAAnC,CAAAkC,KAAAlC,OAAAoC,EAAA,EAAApC,CAAAoW,GAAA/T,KAAAH,KAAMoU,KAIHE,eALoD,eAAAC,EAAAzW,OAAAgE,EAAA,EAAAhE,CAAAiE,EAAAC,EAAAC,KAKnC,SAAAoR,EAAOjY,EAAiB4T,GAAxB,IAAAuE,EAAAiB,EAAA,OAAAzS,EAAAC,EAAAK,KAAA,SAAAiR,GAAA,cAAAA,EAAA/Q,KAAA+Q,EAAA9Q,MAAA,UAGd+Q,EAASvE,EAAKrE,WAAad,GAAStI,IAAM,WAC1CyN,EAAKrE,WAAad,GAASlI,IAAM,gBAAaqC,EAJhC,CAAAsP,EAAA9Q,KAAA,cAOV,IAAI2O,MAAJ,WAAAnS,OAAqBgQ,EAAKrE,SAA1B,mBAPU,cAAA2I,EAAA9Q,KAAA,EAUE6R,EAAKI,YAAY,CACnCC,MAAO,EACPxJ,GAAI,WACJyJ,UAAW,GACXC,QAAS,CACLrB,SACAsB,KAAM,CACF,CACInW,MAA+B,OAAxBtD,EAAQG,MAAM,EAAG,GAAcH,EAAQG,MAAM,GAAKH,OAlBrD,aAUdoZ,EAVclB,EAAA5Q,MAwBRoS,OAAO,SAAAC,GAAC,OAAU,OAANA,IAAYC,KAAO,GAxBvB,CAAA1B,EAAA9Q,KAAA,cAyBV,IAAI2O,MAAM,+CAzBA,cAAAmC,EAAA3Q,OAAA,SA4Bb6R,EAAQM,OAAO,SAAAC,GAAC,OAAU,OAANA,IAAY9F,IAAI,SAACgG,GAAD,MAAa,CAEpD7H,aAAc6H,EAAQ7H,aACtB8H,UAAWD,EAAQA,OAAOA,OAAQC,aAElCC,UAjCgB,wBAAA7B,EAAAzQ,SAAAwQ,MALmC,gBAAA+B,EAAAC,GAAA,OAAAd,EAAAxR,MAAA/C,KAAAgD,YAAA,GAAAqR,EAyCpDiB,iBAzCoD,eAAAC,EAAAzX,OAAAgE,EAAA,EAAAhE,CAAAiE,EAAAC,EAAAC,KAyCjC,SAAAuT,EAAOC,GAAP,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAApB,EAAA,OAAA5S,EAAAC,EAAAK,KAAA,SAAA2T,GAAA,cAAAA,EAAAzT,KAAAyT,EAAAxT,MAAA,OAAAkT,GAAA,EAAAC,GAAA,EAAAC,OAAA5R,EAAAgS,EAAAzT,KAAA,EAAAsT,EACHxB,EAAK1G,UAAUsI,WAAW/R,UADvBC,OAAAC,YAAA,UAAAsR,GAAAI,EAAAD,EAAArT,QAAA6B,KAAA,CAAA2R,EAAAxT,KAAA,cACXuT,EADWD,EAAApX,OAAA,CAAAsX,EAAAxT,KAAA,gBAAAwT,EAAAzT,KAAA,EAAAyT,EAAAxT,KAAA,GAIcuT,EAAKG,eAAe,CAAEhB,UAAWO,EAAUP,YAJzD,aAIJP,EAJIqB,EAAAtT,MASIuS,OATJ,CAAAe,EAAAxT,KAAA,gBAAAwT,EAAArT,OAAA,SAUCgS,EAAUM,OAAOA,OAAO,GAAGvW,OAV5B,YAWCiW,EAAUvX,MAXX,CAAA4Y,EAAAxT,KAAA,eAYAmS,EAAUvX,MAZV,QAAA4Y,EAAAxT,KAAA,iBAAAwT,EAAAzT,KAAA,GAAAyT,EAAAvR,GAAAuR,EAAA,SAeVjX,QAAQ3B,MAAR4Y,EAAAvR,IAfU,QAAAiR,GAAA,EAAAM,EAAAxT,KAAA,gBAAAwT,EAAAxT,KAAA,iBAAAwT,EAAAzT,KAAA,GAAAyT,EAAA9G,GAAA8G,EAAA,SAAAL,GAAA,EAAAC,EAAAI,EAAA9G,GAAA,QAAA8G,EAAAzT,KAAA,GAAAyT,EAAAzT,KAAA,GAAAmT,GAAA,MAAAG,EAAAnR,QAAAmR,EAAAnR,SAAA,WAAAsR,EAAAzT,KAAA,IAAAoT,EAAA,CAAAK,EAAAxT,KAAA,eAAAoT,EAAA,eAAAI,EAAArR,OAAA,mBAAAqR,EAAArR,OAAA,kBAmBhB,IAAIwM,MAAJ,2BAnBgB,yBAAA6E,EAAAnT,SAAA2S,EAAA,2CAzCiC,gBAAAW,GAAA,OAAAZ,EAAAxS,MAAA/C,KAAAgD,YAAA,GAAAqR,EAD/D,OAAAvW,OAAAsY,EAAA,EAAAtY,CAAAoW,EAAAC,GAAAD,EAAA,CApEI,SAAAmC,EAAYjC,GAA+C,IAAAtU,EAAAE,KAAAlC,OAAAiC,EAAA,EAAAjC,CAAAkC,KAAAqW,GAAArW,KAHpDsW,WAAa1I,cAGuC5N,KAFpD2N,UAAYvM,cAEwCpB,KAUpDuW,UAVoDzY,OAAAgE,EAAA,EAAAhE,CAAAiE,EAAAC,EAAAC,KAUxC,SAAAgD,IAAA,IAAAuR,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA1J,EAAA6H,EAAA8B,EAAA,OAAAhV,EAAAC,EAAAK,KAAA,SAAA8C,GAAA,cAAAA,EAAA5C,KAAA4C,EAAA3C,MAAA,OACXgU,GAAU,EADCE,GAAA,EAAAC,GAAA,EAAAC,OAAA5S,EAAAmB,EAAA5C,KAAA,EAAAsU,EAGY/W,EAAKwW,WAAWpS,UAH5BC,OAAAC,YAAA,UAAAsS,GAAAI,EAAAD,EAAArU,QAAA6B,KAAA,CAAAc,EAAA3C,KAAA,YAGJ4K,EAHI0J,EAAApY,MAAAyG,EAAA5C,KAAA,EAKD0S,EAA+BnV,EAAK6N,UAAUtB,IAAIgB,GAAiBD,GAAclD,IALhF,CAAA/E,EAAA3C,KAAA,eAOG,IAAI2O,MAAM,wBAPb,eAAAhM,EAAA3C,KAAA,GASayS,EAAO+B,WATpB,aASDD,EATC5R,EAAAzC,MAUGuS,OAVH,CAAA9P,EAAA3C,KAAA,SAWH1C,EAAKmX,aAAaF,EAAM9B,OAAO8B,MAAM9H,IAAI9B,KACzCqJ,GAAU,EAZPrR,EAAA3C,KAAA,qBAaIuU,EAAM3Z,MAbV,CAAA+H,EAAA3C,KAAA,eAcGuU,EAAM3Z,MAdT,QAAA+H,EAAA3C,KAAA,iBAAA2C,EAAA5C,KAAA,GAAA4C,EAAAV,GAAAU,EAAA,SAiBPsR,EAAStR,EAAAV,GAjBF,QAAAiS,GAAA,EAAAvR,EAAA3C,KAAA,gBAAA2C,EAAA3C,KAAA,iBAAA2C,EAAA5C,KAAA,GAAA4C,EAAA+J,GAAA/J,EAAA,SAAAwR,GAAA,EAAAC,EAAAzR,EAAA+J,GAAA,QAAA/J,EAAA5C,KAAA,GAAA4C,EAAA5C,KAAA,GAAAmU,GAAA,MAAAG,EAAAnS,QAAAmS,EAAAnS,SAAA,WAAAS,EAAA5C,KAAA,IAAAoU,EAAA,CAAAxR,EAAA3C,KAAA,eAAAoU,EAAA,eAAAzR,EAAAR,OAAA,mBAAAQ,EAAAR,OAAA,eAoBV6R,EApBU,CAAArR,EAAA3C,KAAA,eAqBLiU,EArBK,eAAAtR,EAAAxC,OAAA,SAuBR7C,GAvBQ,yBAAAqF,EAAAtC,SAAAoC,EAAA,2CAVwCjF,KAoCpDkX,UApCoDpZ,OAAAgE,EAAA,EAAAhE,CAAAiE,EAAAC,EAAAC,KAoCxC,SAAAkB,IAAA,OAAApB,EAAAC,EAAAK,KAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,cAAAuB,EAAApB,OAAA,SACRkR,GACH/T,EAAK6N,UAAUsI,WAAWhH,IAAI,SAAAkI,GAAQ,OAAIA,EAASD,cAAa/B,SAChE,OAHW,wBAAApR,EAAAlB,SAAAM,MApCwCnD,KA2CpDyU,YA3CoD,eAAAhF,EAAA3R,OAAAgE,EAAA,EAAAhE,CAAAiE,EAAAC,EAAAC,KA2CtC,SAAA6Q,EAAOC,GAAP,OAAAhR,EAAAC,EAAAK,KAAA,SAAA2Q,GAAA,cAAAA,EAAAzQ,KAAAyQ,EAAAxQ,MAAA,cAAAwQ,EAAArQ,OAAA,SACVkR,GACH/T,EAAK6N,UAAUsI,WAAWhH,IAA1B,eAAAmB,EAAAtS,OAAAgE,EAAA,EAAAhE,CAAAiE,EAAAC,EAAAC,KAA8B,SAAA6O,EAAOqG,GAAP,OAAApV,EAAAC,EAAAK,KAAA,SAAA4O,GAAA,cAAAA,EAAA1O,KAAA0O,EAAAzO,MAAA,cAAAyO,EAAAxM,GACZ0S,EAAS/J,aADG6D,EAAAzO,KAAA,EAEZ2U,EAAS1C,YAAY1B,GAFT,cAAA9B,EAAA/B,GAAA+B,EAAAvO,KAAAuO,EAAAtO,OAAA,UAC1ByK,aAD0B6D,EAAAxM,GAE1BwQ,OAF0BhE,EAAA/B,KAAA,wBAAA+B,EAAApO,SAAAiO,MAA9B,gBAAAa,GAAA,OAAAvB,EAAArN,MAAA/C,KAAAgD,YAAA,IAGImS,SACJ,OANa,wBAAAnC,EAAAnQ,SAAAiQ,MA3CsC,gBAAAvG,GAAA,OAAAkD,EAAA1M,MAAA/C,KAAAgD,YAAA,GAAAhD,KAqDpDkW,eArDoD,eAAArF,EAAA/S,OAAAgE,EAAA,EAAAhE,CAAAiE,EAAAC,EAAAC,KAqDnC,SAAAiR,EAAOH,GAAP,OAAAhR,EAAAC,EAAAK,KAAA,SAAA8Q,GAAA,cAAAA,EAAA5Q,KAAA4Q,EAAA3Q,MAAA,cAAA2Q,EAAAxQ,OAAA,SACbkR,GACH/T,EAAK6N,UAAUsI,WAAWhH,IAAI,SAAAkI,GAAQ,OAAIA,EAASjB,eAAenD,KAAUoC,SAC5E,OAHgB,wBAAAhC,EAAAtQ,SAAAqQ,MArDmC,gBAAAkE,GAAA,OAAAvG,EAAA9N,MAAA/C,KAAAgD,YAAA,GAAAhD,KA4D1CiX,aAAe,SAAC7C,GAAyC,IAAAiD,GAAA,EAAAC,GAAA,EAAAC,OAAAvT,EAAA,IACtE,QAAAwT,EAAAC,EAA2BrD,EAA3BjQ,OAAAC,cAAAiT,GAAAG,EAAAC,EAAAjV,QAAA6B,MAAAgT,GAAA,EAA2C,KAAhCjK,EAAgCoK,EAAA9Y,MACvCoB,EAAK6N,UAAY7N,EAAK6N,UAAUtM,IAAIgM,GAAiBD,GAAclD,GAAI,IAAI2H,GAASzE,KAFlB,MAAAvC,GAAAyM,GAAA,EAAAC,EAAA1M,EAAA,YAAAwM,GAAA,MAAAI,EAAA/S,QAAA+S,EAAA/S,SAAA,WAAA4S,EAAA,MAAAC,GAItE,OAAOzX,GA/DH4X,MAAMC,QAAQvD,IACdpU,KAAKsW,WAAatW,KAAKsW,WAAWtX,OAAOoV,GACzCpU,KAAKiX,aAAa7C,IAElBpU,KAAKiX,aAAa,CAAC7C,IAEvBpU,KAAKsW,WAAatW,KAAKsW,WAAWtX,OAAOoV,KC1BpCwD,GAAe,SAAfA,EAAgBC,EAAYC,GACrC,GAxBgB,SAACD,GAAD,MAAmC,OAAnBA,EAAKtc,OAAO,GAwBxCwc,CAAYF,GAAO,CACnB,IAAMG,EAAUH,EAAKtc,MAAM,GAAI,GAC/B,OAAQuc,EAAqB7I,IAAI,SAACgJ,GAAD,OAAOL,EAAaI,EAASC,KAC3D,GA1BQ,SAACJ,GAAD,MAAqC,UAArBA,EAAKtc,MAAM,EAAG,IAAqC,MAAnBsc,EAAKtc,OAAO,GA0BhE2c,CAAWL,GAAO,CACzB,IAAMG,EAAUH,EAAKtc,MAAM,GAAI,GAC/B,OAAOqS,YAAMkK,EAAqB7I,IAAI,SAACgJ,GAAD,OAAOL,EAAaI,EAASC,MAChE,GA5BO,SAACJ,GAAD,MAAqC,SAArBA,EAAKtc,MAAM,EAAG,IAAoC,MAAnBsc,EAAKtc,OAAO,GA4B9D4c,CAAUN,GAAO,CACxB,IAAMG,EAAUH,EAAKtc,MAAM,GAAI,GAC/B,OAAO6c,YAAKN,EAAqB7I,IAAI,SAACgJ,GAAD,OAAOL,EAAaI,EAASC,MAC/D,GA9BO,SAACJ,GAAD,MAAsC,iBAAtBA,EAAKtc,MAAM,EAAG,KAA6C,MAAnBsc,EAAKtc,OAAO,GA8BvE8c,CAAUR,GAAO,CACxB,IAAMG,EAAUH,EAAKtc,MAAM,IAAK,GAChC,OAAO6F,YAAI0W,GAAkC7I,IAAI,SAAAgJ,GAAC,OAAIL,EAAaI,EAASC,KAEhF,UAAWH,IAAWD,EAClB,OAAOC,EAEX,MAAM,IAAI3G,MAAJ,4BAAAnS,cAA6C8Y,EAA7C,eAAA9Y,OAAiE6Y,EAAjE,iBHhCE5J,oEAKAC,iEAML,IAAMoK,GAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAxa,OAAAiC,EAAA,EAAAjC,CAAAkC,KAAAsY,GAAAxa,OAAAmC,EAAA,EAAAnC,CAAAkC,KAAAlC,OAAAoC,EAAA,EAAApC,CAAAwa,GAAAvV,MAAA/C,KAAAgD,YAAA,OAAAlF,OAAAsY,EAAA,EAAAtY,CAAAwa,EAAAC,GAAAD,EAAA,CAA6B5K,YAAO,CAChCxD,GAAI,GACJsO,YAAY,EACZX,KAAM3J,GAAUoK,QAEhBtJ,KAAMpB,cACNjD,SAAU8N,GAAYlX,OAGbmX,GAAb,SAAAC,GAAA,SAAAD,IAAA,OAAA5a,OAAAiC,EAAA,EAAAjC,CAAAkC,KAAA0Y,GAAA5a,OAAAmC,EAAA,EAAAnC,CAAAkC,KAAAlC,OAAAoC,EAAA,EAAApC,CAAA4a,GAAA3V,MAAA/C,KAAAgD,YAAA,OAAAlF,OAAAsY,EAAA,EAAAtY,CAAA4a,EAAAC,GAAAD,EAAA,CAA0BhL,YAAO,CAC7BxD,GAAI,GACJsO,YAAY,EACZX,KAAM3J,GAAUwK,KAChBhK,MAAOd,cACPgL,qBAAiB5U,EACjBkR,UAAW,GACX2D,WAAYjL,iBAGHkL,GAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAhb,OAAAiC,EAAA,EAAAjC,CAAAkC,KAAA8Y,GAAAhb,OAAAmC,EAAA,EAAAnC,CAAAkC,KAAAlC,OAAAoC,EAAA,EAAApC,CAAAgb,GAAA/V,MAAA/C,KAAAgD,YAAA,OAAAlF,OAAAsY,EAAA,EAAAtY,CAAAgb,EAAAC,GAAAD,EAAA,CAA0BpL,YAAO,CAC7BxD,GAAI,GACJsO,YAAY,EACZX,KAAM3J,GAAU4K,KAChBnO,SAAU8N,GAAYlX,IACtBwP,OAAQ,IACR7F,GAAI,GACJgK,UAAW,GACX8D,qBAAiBhV,KAKfiV,GAAmB,CACrBC,gBAAiB,6CAEjBC,UAAWvJ,cAEXnJ,cAAe,IAAIyN,GAAcN,IAGjCwF,UAAU,EACVC,MAAOpL,GAAQqL,MACfC,cAAetL,GAAQuL,KAGvBpX,IAAK,KACLiJ,cAAexB,IAAS4P,KAGtBC,IAAoB,IAAItY,KACzBC,IAAI,kBAAmB,UACvBA,IAAI,WAAY,WAChBA,IAAI,QAAS,UACbA,IAAI,gBAAiB,UACrBA,IAAI,YAAa,8BACjBA,IAAI,gBAAiB,UACbsY,GAAb,SAAAC,GAAA,SAAAD,IAAA,OAAA7b,OAAAiC,EAAA,EAAAjC,CAAAkC,KAAA2Z,GAAA7b,OAAAmC,EAAA,EAAAnC,CAAAkC,KAAAlC,OAAAoC,EAAA,EAAApC,CAAA6b,GAAA5W,MAAA/C,KAAAgD,YAAA,OAAAlF,OAAAsY,EAAA,EAAAtY,CAAA6b,EAAAC,GAAA9b,OAAAsU,EAAA,EAAAtU,CAAA6b,EAAA,EAAA1b,IAAA,YAAAS,MAAA,WAIQ,IADA,IAAMmb,EAAM,GACZtK,EAAA,EAAAuK,EAAkBpC,MAAMjG,KAAKiI,GAAkB3b,QAA/CwR,EAAAuK,EAAA3S,OAAAoI,IAAwD,CAAnD,IAAMtR,EAAG6b,EAAAvK,GACVsK,EAAI5b,GAAO+B,KAAKqM,IAAIpO,GAExB,OAAOO,KAAKC,UAAUob,KAP9B,CAAA5b,IAAA,cAAAS,MAAA,SAUuBqb,GAEf,IAAIvX,EAAOxC,KACX,IAEI,IADA,IAAM7B,EAAOK,KAAKI,MAAMmb,GACxBC,EAAA,EAAAC,EAAkBvC,MAAMjG,KAAKiI,GAAkB3b,QAA/Cic,EAAAC,EAAA9S,OAAA6S,IAAwD,CAAnD,IAAM/b,EAAGgc,EAAAD,GACV,IACI,IAAME,EAAeR,GAAkBrN,IAAIpO,GAC3C,GAAY,cAARA,EAAqB,CACrB,IAAMkb,EAAYhb,EAAKF,GACvB,IAAKkb,EACD,SAGJ,IADA,IAAIgB,EAAgBvK,cACpBwK,EAAA,EAAAC,EAAsBvc,OAAOC,KAAKob,GAAlCiB,EAAAC,EAAAlT,OAAAiT,IAA8C,CAAzC,IAAMhf,EAAOif,EAAAD,GACRE,EAASnB,EAAU/d,GACzB,GAAKkf,EAAL,CAIA,IADA,IAAIC,EAAaC,cACjBC,EAAA,EAAAC,EAAuB5c,OAAOC,KAAKuc,GAAnCG,EAAAC,EAAAvT,OAAAsT,IAA4C,CAAvC,IACKE,EAAQL,EADCI,EAAAD,IAEXG,OAAK,EACT,GAAID,EAAM9C,OAAS3J,GAAUoK,QACzBsC,EAAQ,IAAItC,GAAJxa,OAAAyB,EAAA,EAAAzB,CAAA,GAAiB6c,EAAjB,CAAwB3L,KAAMpB,YAAK+M,EAAM3L,cAC9C,GAAI2L,EAAM9C,OAAS3J,GAAU4K,KAChC8B,EAAQ,IAAI9B,GAAK6B,OACd,IAAIA,EAAM9C,OAAS3J,GAAUwK,KAGhC,MAAM,IAAIvH,MAAM,yBAFhByJ,EAAQ,IAAIlC,GAAJ5a,OAAAyB,EAAA,EAAAzB,CAAA,GAAc6c,EAAd,CAAqBjM,MAAOd,YAAK+M,EAAMjM,UAInD6L,EAAaA,EAAWlZ,IAAIuZ,EAAM1Q,GAAI0Q,GAE1CT,EAAgBA,EAAc9Y,IAAIjG,EAASmf,IAE/C/X,EAAOA,EAAKnB,IAAIpD,EAAKkc,QACdD,IACP1X,EAAOA,EAAKnB,IACRpD,EAEA2Z,GAAasC,EAAc/b,EAAKF,MAG1C,MAAOb,GACLoC,EAA8BpC,EAAO,CAAEuC,YAAa,mCAAoCkb,YAAa,SAG/G,MAAOzd,GACLkC,EAA6BlC,EAAO,CAChCuC,YAAa,qCAGjBmb,MAAM,kBAEV,OAAOtY,MAjEfmX,EAAA,CAAiCjM,YAAOuL,KAiF3B8B,GAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAjd,OAAAiC,EAAA,EAAAjC,CAAAkC,KAAA+a,GAAAjd,OAAAmC,EAAA,EAAAnC,CAAAkC,KAAAlC,OAAAoC,EAAA,EAAApC,CAAAid,GAAAhY,MAAA/C,KAAAgD,YAAA,OAAAlF,OAAAsY,EAAA,EAAAtY,CAAAid,EAAAC,GAAAD,EAAA,CAAqCrN,YAAO,CACxCuN,UAAU,EACVC,aAAcV,cACdhV,YAAa,QI/JJ2V,GAAe,SAAAlgB,GAAqE,IAAlE0P,EAAkE1P,EAAlE0P,SAAUyQ,EAAwDngB,EAAxDmgB,MAAO7M,EAAiDtT,EAAjDsT,iBAAkBqC,EAA+B3V,EAA/B2V,KAA+ByK,EAC7Dra,YAAe,GAD8Csa,EAAAxd,OAAAwG,EAAA,EAAAxG,CAAAud,EAAA,GACtFE,EADsFD,EAAA,GAC5EE,EAD4EF,EAAA,GAAAG,EAEnEza,gBAAmCgD,GAFgC0X,EAAA5d,OAAAwG,EAAA,EAAAxG,CAAA2d,EAAA,GAEtFre,EAFsFse,EAAA,GAE/EC,EAF+ED,EAAA,GAAAE,EAIjE5a,gBAAmCgD,GAJ8B6X,EAAA/d,OAAAwG,EAAA,EAAAxG,CAAA8d,EAAA,GAIxFE,EAJwFD,EAAA,GAI/EE,EAJ+EF,EAAA,GAKvFvS,EAAMtI,SAAa,MAEnBgb,EAA2B,SAA3BA,EAA4BpB,GACzBtR,EAAI2S,UAAY3S,EAAI2S,QAAQC,SAAStB,EAAM3T,UAC5CuU,GAAY,GACZG,OAAS3X,GACTmY,SAASC,oBAAoB,YAAaJ,GAAW,KAIvDK,EAAW,eAAAC,EAAAxe,OAAAgE,EAAA,EAAAhE,CAAAiE,EAAAC,EAAAC,KAAG,SAAAC,EAAO+V,GAAP,IAAAsE,EAAA,OAAAxa,EAAAC,EAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACX+Y,EADW,CAAAjZ,EAAAE,KAAA,gBAEZgZ,GAAY,GACZW,SAASK,iBAAiB,YAAaR,IACjCO,EAAStE,EAAEwE,cAAcC,gBAE3BH,EAAOI,SAAS,CAAEC,KAAM,IAAaxB,EAAQ,KAEjD7V,WAAW,WACHgX,GACAA,EAAOI,SAAS,CAAEC,KAAM,IAAaxB,EAAQ,MAElD,KAZS9Y,EAAAE,KAAA,EAaI+L,EAAiB4B,WAAWxF,GAbhC,OAaZmR,EAbYxZ,EAAAI,KAcZqZ,EAAWD,GAdC,yBAAAxZ,EAAAO,SAAAX,MAAH,gBAAAY,GAAA,OAAAwZ,EAAAvZ,MAAA/C,KAAAgD,YAAA,GAkBX6Z,EAAU,eAAA3Z,EAAApF,OAAAgE,EAAA,EAAAhE,CAAAiE,EAAAC,EAAAC,KAAG,SAAAgD,EAAOgT,GAAP,OAAAlW,EAAAC,EAAAK,KAAA,SAAA8C,GAAA,cAAAA,EAAA5C,KAAA4C,EAAA3C,MAAA,cACfyV,EAAE6E,iBADa3X,EAAA3C,KAAA,EAEToO,EAAKjG,EAAUmR,GAAW,KAFjB,wBAAA3W,EAAAtC,SAAAoC,MAAH,gBAAAqH,GAAA,OAAApJ,EAAAH,MAAA/C,KAAAgD,YAAA,GAKhB,OAAOxC,EAAA,qBAAK8I,IAAKA,EAAKrB,UAAS,YAAAjJ,OAAc2L,EAAd,KAAA3L,OAA0Buc,EAAW,SAAW,IAAMwB,UAASpS,EAAUqS,aAAY5B,EAAO6B,YAAaZ,EAAa1b,KAAK,SAAS1C,IAAK0M,GACpKnK,EAAA,cAACoK,EAAA,EAAD,CAAWhH,MAAO+G,EAAS1L,gBAC1Bsc,EACG/a,EAAA,qBAAKyH,UAAS,mBAAAjJ,OAAqB2L,IAC/BnK,EAAA,yBACIA,EAAA,sCAAgBsb,EAAhB,IAA0BnR,EAAS1L,cAAe6c,GAAuB,MAAZA,EAAkBtb,EAAA,cAAAA,EAAA,cAAG,IAAH,IAAQA,EAAA,mBAAGG,KAAK,SAASuc,KAAK,OAAOrc,QAASgc,GAAtC,QAAR,KAAyE,MAAYrc,EAAA,yBACnKpD,EAAQoD,EAAA,cAAAA,EAAA,cAAEA,EAAA,sBAAMyH,UAAU,OAAO7K,GAAaoD,EAAA,0BAAY,KAC3DA,EAAA,wCAAiBA,EAAA,uBAAI+N,EAAiBA,iBAAiBlC,IAAI1B,OAGjE,OCvDDwS,GAAkB,SAAAliB,GAAqI,IAAlI2V,EAAkI3V,EAAlI2V,KAAMrC,EAA4HtT,EAA5HsT,iBACpC,OAAO/N,EAAA,qBAAKyH,UAAU,SAClBzH,EAAA,sCACAA,EAAA,qBAAKyH,UAAU,cACVkG,GAAac,IAAI,SAACtE,EAAUyQ,GACzB,OAAO5a,EAAA,cAAC4c,GAAD,CAAcxM,KAAMA,EAAM3S,IAAK0M,EAAUA,SAAUA,EAAUyQ,MAAOA,EAAO7M,iBAAkBA,SCVpH,SAAS8O,KAA0Q,OAA7PA,GAAQvf,OAAAkJ,QAAA,SAAAC,GAAuC,QAAAC,EAAA,EAAgBA,EAAAlE,UAAAmE,OAAsBD,IAAA,CAAO,IAAAE,EAAApE,UAAAkE,GAA2B,QAAAjJ,KAAAmJ,EAA0BtJ,OAAAuJ,UAAAC,eAAAnH,KAAAiH,EAAAnJ,KAAyDgJ,EAAAhJ,GAAAmJ,EAAAnJ,IAAiC,OAAAgJ,IAAkClE,MAAA/C,KAAAgD,WAEnS,SAASsa,GAAwBlW,EAAAI,GAAoB,SAAAJ,EAAA,SAA+B,IAA8DnJ,EAAAiJ,EAA9DD,EAEpF,SAAsCG,EAAAI,GAAoB,SAAAJ,EAAA,SAA+B,IAAuDnJ,EAAAiJ,EAAvDD,EAAA,GAAiBQ,EAAA3J,OAAAC,KAAAqJ,GAAkD,IAAAF,EAAA,EAAYA,EAAAO,EAAAN,OAAuBD,IAAOjJ,EAAAwJ,EAAAP,GAAqBM,EAAA7I,QAAAV,IAAA,IAA0CgJ,EAAAhJ,GAAAmJ,EAAAnJ,IAA6B,OAAAgJ,EAFhMsW,CAA6BnW,EAAAI,GAA+B,GAAA1J,OAAA6J,sBAAA,CAAoC,IAAAC,EAAA9J,OAAA6J,sBAAAP,GAA6D,IAAAF,EAAA,EAAYA,EAAAU,EAAAT,OAA6BD,IAAOjJ,EAAA2J,EAAAV,GAA2BM,EAAA7I,QAAAV,IAAA,GAA0CH,OAAAuJ,UAAAQ,qBAAA1H,KAAAiH,EAAAnJ,KAAwEgJ,EAAAhJ,GAAAmJ,EAAAnJ,IAA+B,OAAAgJ,EAM3d,ICWkDuW,GAAuBC,GDXrEC,GAEJ3V,EAAA/F,EAAKgG,cAAA,SACL6P,KAAA,YACC,u1BAEG8F,GAEJ5V,EAAA/F,EAAKgG,cAAA,WACLC,UAAA,MACAoC,OAAA,0UAGIuT,GAEJ7V,EAAA/F,EAAKgG,cAAA,SAA0BD,EAAA/F,EAAKgG,cAAA,WACpCC,UAAA,MACAoC,OAAA,sCACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,wCACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,wCACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,oCACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,iCACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,sCACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,sCACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,iCACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,wCACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,mCACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,wCACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,yCACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,qCACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,mCACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,kCACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,qCACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,qCACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,wCACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,wCACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,sCACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,0CACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,uCACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,uCACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,0CACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,wCACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,uCACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,wCACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,qCACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,wCACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,qCACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,uCACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,0CACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,wCACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,0CACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,mCACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,oCACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,0CACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,0CACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,0CACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,yCACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,mCACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,oCACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,sCACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,gCACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,qCACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,wCACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,0CACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,0CACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,sCACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,sCACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,wCACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,wCACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,sCACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,0CACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,uCACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,0CACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,wCACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,wCACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,sCACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,wCACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,0CACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,yCACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,0CACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,0CACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,0CACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,wCACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,0CACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,0CACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,0CACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,0CACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,sCACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,wCACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,0CACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,0CACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,0CACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,0CACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,0CACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,wCACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,wCACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,0CACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,0CACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,wCACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,0CACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,wCACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,wCACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,0CACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,wCACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,wCACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,wCACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,MACAoC,OAAA,wCACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,OACAoC,OAAA,0CACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,OACAoC,OAAA,wCACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,OACAoC,OAAA,wCACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,OACAoC,OAAA,wCACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,OACAoC,OAAA,0CACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,OACAoC,OAAA,sCACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,OACAoC,OAAA,wCACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,OACAoC,OAAA,wCACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,OACAoC,OAAA,wCACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,OACAoC,OAAA,wCACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,OACAoC,OAAA,wCACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,OACAoC,OAAA,wCACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,OACAoC,OAAA,wCACItC,EAAA/F,EAAKgG,cAAA,WACTC,UAAA,OACAoC,OAAA,uCAGIwT,GAAW,SAAA5iB,GACf,IAAAiO,EAAAjO,EAAAiO,OACArJ,EAAcyd,GAAwBriB,EAAA,YAEtC,OAAS8M,EAAA/F,EAAKgG,cAAA,MAAsBqV,GAAQ,CAC5CnT,GAAA,UACA6K,EAAA,MACA+I,EAAA,MACAzU,QAAA,kBACA5I,MAAA,CACAsd,iBAAA,uBAEAC,SAAA,WACA1U,IAAAJ,GACGrJ,GAAU6d,GAAOC,GAAOC,KAGvBK,GAAalW,EAAA/F,EAAKwH,WAAA,SAAA3J,EAAAyJ,GACtB,OAASvB,EAAA/F,EAAKgG,cAAe6V,GAAaR,GAAQ,CAClDnU,OAAAI,GACGzJ,MEzVUqe,IF2VEzjB,EAAAgP,EE3Ve,SAAAxO,GAAiF,IAA9EkjB,EAA8EljB,EAA9EkjB,kBAAmBjF,EAA2Dje,EAA3Die,gBAAiBkF,EAA0CnjB,EAA1CmjB,SAAUC,EAAgCpjB,EAAhCojB,mBACrE/U,EAAMtI,SAAa,MAEnBsd,EAAO,eAAAhC,EAAAxe,OAAAgE,EAAA,EAAAhE,CAAAiE,EAAAC,EAAAC,KAAG,SAAAC,IAAA,OAAAH,EAAAC,EAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACR8G,EAAI2S,SACJ3S,EAAI2S,QAAQsC,QAFJjc,EAAAE,KAAA,EAIN6b,IAJM,wBAAA/b,EAAAO,SAAAX,MAAH,yBAAAoa,EAAAvZ,MAAA/C,KAAAgD,YAAA,GAYb,OAAOxC,EAAA,qBAAKyH,UAAU,SAClBzH,EAAA,sBAAMge,SANO,SAAC5D,GACdA,EAAMkC,iBACNqB,KAI0BlW,UAAU,mBAChCzH,EAAA,qBAAKyH,UAAU,oBACXzH,EAAA,uBAAOqX,KAAK,OAAOnZ,MAAOwa,EAAiBkF,SAAUA,EAAUK,YAAY,yCAC3Eje,EAAA,wBAAQqX,KAAK,SAAS5P,UAAU,gBAAgBpH,QAASyd,GAAS9d,EAAA,cAACyd,GAAD,OAClEzd,EAAA,wBAAQ8I,IAAKA,EAAKuO,KAAK,SAAS5P,UAAU,kCAAkCyW,UAAWxF,GAAvF,gCCpBVyF,WAAa,SAACC,EAAoBC,GACpC,OAAOre,EAAA,cAACse,GAAA9c,EAAD,CACHiG,UAAU,mBACV2W,WAAYA,EACZxU,YAAa,GACb2U,OAAQ,CACJC,KAAM,CACF7U,OAAQ0U,GAAS,UACjBI,cAAe,QAGnBC,MAAO,CACH/U,OAAQ0U,GAAS,UACjBM,cAAe,SAgBlBC,GAAW,SAACvf,GACrB,GAAIA,EAAM+a,MAAM/C,OAAS3J,GAAUoK,QAAS,CACxC,IAAMsC,EAAQ/a,EAAM+a,MACZyE,EAAuCxf,EAAvCwf,cAAeC,EAAwBzf,EAAxByf,UAAWC,EAAa1f,EAAb0f,SAI5BvQ,EAAO4L,EAAM5L,KAAKwQ,WAAMxb,GAC9B,IAAKgL,EACD,OAAOxO,EAAA,qBAAKyH,UAAU,QAAf,oBAAwCzJ,KAAKC,UAAUoB,EAAM+a,MAAO,KAAM,SAErF,IAAMlc,EAAQsQ,EAAK+B,OACnB,OAAOvQ,EAAA,qBAAKyH,UAAU,QACjB0W,GAAW,IACZne,EAAA,qBAAKyH,UAAU,eACXzH,EAAA,uCAAgBA,EAAA,uBAAI9B,EAAK/B,KAAA2T,IAAI,GAAMlC,GAAiBwM,EAAMjQ,WAA1C,IAAuDiQ,EAAMjQ,SAAS1L,gBACtFuB,EAAA,mBAAGif,IAAI,aAAaxY,OAAO,SAASiW,KAAI,+CAAAle,OAAiD4b,EAAM1Q,KAC3F1J,EAAA,sBAAMyH,UAAU,cAAc2S,EAAM1Q,MAG5C1J,EAAA,qBAAKyH,UAAU,iBACVoX,EAAgB7e,EAAA,wBAAQke,SAAUY,EAAWrX,UAAU,eAAepH,QAjB/D,WACZ0e,EAAS3E,KAgBqF0E,EAAY9e,EAAA,cAACoK,EAAA,EAAD,CAAS8U,KAAK,IAAWlf,EAAA,cAAAA,EAAA,oCAAmC,OAGvK,GAAIX,EAAM+a,MAAM/C,OAAS3J,GAAUwK,KAAM,CAC5C,IAAMkC,EAAQ/a,EAAM+a,MACZ+E,EAAuC9f,EAAvC8f,iBAAkBrK,EAAqBzV,EAArByV,iBAEpBsK,EAAUD,EAAiBtT,IAAIuO,EAAM1Q,IACvC2V,EAASze,cACbwZ,EAAMlM,MAAMO,IAAI,SAAAD,GACZ,IAAMtQ,EAAQsQ,EAAKA,KAAK+B,OAClB+O,EAAgBD,EAAOxT,IAAI2C,EAAKrE,WAAa,EACnDkV,EAASA,EAAOxe,IAAI2N,EAAKrE,SAAUmV,EAAgBphB,KAEvD,IAAMqhB,EAAeF,EAAO5Q,IAAI,SAACvQ,EAAOiM,GACpC,SAAA3L,OAAUN,EAAK/B,KAAA2T,IAAI,GAAMlC,GAAiBzD,IAA1C,KAAA3L,OAAwD2L,EAAS1L,iBAClE+gB,KAAK,MACR,OAAOxf,EAAA,qBAAKyH,UAAS,QAAAjJ,OAAU4b,EAAMhC,gBAAkB,OAAS,KAC3D+F,GAAW/D,EAAMhC,gBAAkB,IAAM,IAC1CpY,EAAA,qBAAKyH,UAAU,eACXzH,EAAA,uCAAgBA,EAAA,uBAAIuf,IACpBvf,EAAA,sBAAMyH,UAAU,cAAc2S,EAAMhC,gBAAkBpY,EAAA,cAAAA,EAAA,2BAAaoa,EAAMhC,gBAAnB,MAA2CpY,EAAA,cAAAA,EAAA,yBAAUA,EAAA,uBAAIoa,EAAM/B,WAAW7D,KAArB,cAAV,0BAOpG4F,EAAMhC,gBACHpY,EAAA,qBAAKyH,UAAU,kBAKfzH,EAAA,cAAAA,EAAA,cACIA,EAAA,qBAAKyH,UAAU,iBAEXzH,EAAA,wBAAQyH,UAAU,gBAAgBpH,QAAS,WAAQyU,EAAiBsF,EAAM1Q,IAAI7D,MAAMtH,QAAQ3B,QAAWshB,SAAUkB,GAAUA,EAAUpf,EAAA,cAACoK,EAAA,EAAD,MAAcpK,EAAA,cAAAA,EAAA,wCAKhK,GAAIX,EAAM+a,MAAM/C,OAAS3J,GAAU4K,KAAM,CAC5C,IAAM8B,EAAQ/a,EAAM+a,MACpB,OAAOpa,EAAA,qBAAKyH,UAAS,aAChB0W,GAAW,IAAK,WACjBne,EAAA,qBAAKyH,UAAU,eACXzH,EAAA,oCAAaA,EAAA,uBAAIoa,EAAM7J,OAAV,IAAmB6J,EAAMjQ,SAAS1L,kBAOvD,OAAOuB,EAAA,qBAAKyH,UAAU,QAAf,kBACazJ,KAAKC,UAAUoB,EAAM+a,MAAO,KAAM,UCjGjDqF,GAAY,SAAAhlB,GAAqG,IAAlGilB,EAAkGjlB,EAAlGilB,SAAUC,EAAwFllB,EAAxFklB,UAAW7F,EAA6Erf,EAA7Eqf,OAAQgF,EAAqErkB,EAArEqkB,UAAWC,EAA0DtkB,EAA1DskB,SAAUI,EAAgD1kB,EAAhD0kB,iBAAkBrK,EAA8Bra,EAA9Bqa,iBACxF8K,EAAahf,cADyGiC,GAAA,EAAAC,GAAA,EAAAC,OAAAS,EAAA,IAE1H,IAF0H,IAE1HP,EAF0H4c,EAAA,eAE/G1V,EAF+GlH,EAAA/E,MAGhH8gB,EAAQlF,EAAOxF,OAAO,SAAA9F,GAAI,OAAIA,EAAK6I,OAAS3J,GAAUoK,SAAYtJ,EAAiBrE,WAAaA,IAAU6U,WAAMxb,GAClHwb,IACAY,EAAaA,EAAW/e,IAAIsJ,EAAU6U,EAAMtV,MAHpD1G,EAAuB2K,GAAvBhK,OAAAC,cAAAf,GAAAI,EAAAD,EAAAhB,QAAA6B,MAAAhB,GAAA,EAAqCgd,IAFqF,MAAAxV,GAAAvH,GAAA,EAAAC,EAAAsH,EAAA,YAAAxH,GAAA,MAAAG,EAAAkB,QAAAlB,EAAAkB,SAAA,WAAApB,EAAA,MAAAC,GAQ1H,OAAO/C,EAAA,qBAAKyH,UAAU,kBAClBzH,EAAA,qBAAKyH,UAAU,mBACXzH,EAAA,mDACAA,EAAA,wBAAQke,SAAUwB,EAAUjY,UAAU,gBAAgBpH,QAASsf,GAAYD,EAAW1f,EAAA,qBAAKyH,UAAU,YAAWzH,EAAA,cAACoK,EAAA,EAAD,OAAoBpK,EAAA,cAAAA,EAAA,2BAGvI8Z,EAAOgG,UAAUrR,IAAI,SAAA2L,GAElB,OAAOpa,EAAA,cAAC+f,GAAD,CAAU3F,MAAOA,EAAO3c,IAAK2c,EAAM1Q,GAAImV,cAAee,EAAWlE,SAAStB,EAAM1Q,IAAKoV,UAAWA,EAAUjT,IAAIuO,EAAM1Q,MAAO,EAAOqV,SAAUA,EAAUI,iBAAkBA,EAAkBrK,iBAAkBA,MACpNH,WCREjE,GAAO,eAAAjW,EAAA6C,OAAAgE,EAAA,EAAAhE,CAAAiE,EAAAC,EAAAC,KAAG,SAAAgD,IAAA,OAAAlD,EAAAC,EAAAK,KAAA,SAAA8C,GAAA,cAAAA,EAAA5C,KAAA4C,EAAA3C,MAAA,cAAA2C,EAAAxC,OAAA,SAAY,IAAIyC,QAAJ,eAAAkX,EAAAxe,OAAAgE,EAAA,EAAAhE,CAAAiE,EAAAC,EAAAC,KAAkB,SAAAC,EAAOmD,EAASC,GAAhB,OAAAvD,EAAAC,EAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WAE7Cge,OAAOC,SAFsC,CAAAne,EAAAE,KAAA,gBAG7Cge,OAAO3S,KAAO,IAAI+D,KAAK4O,OAAOC,UAHene,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAMnCge,OAAOC,SAASC,SANmB,OAOzCrb,EAAQ,IAAIuM,KAAK4O,OAAO3S,KAAK8S,kBAPYre,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAmC,GAAAnC,EAAA,SAUzCgD,EAAMhD,EAAAmC,IAVmC,QAAAnC,EAAAE,KAAA,iBAYtCge,OAAO3S,MAEd2S,OAAO3S,KAAO,IAAI+D,KAAK4O,OAAO3S,KAAK8S,iBAEnCtb,EAAQ,IAAIuM,KAAK4O,OAAO3S,KAAK8S,mBAG7Brb,EAAO,uEAnBsC,yBAAAhD,EAAAO,SAAAX,EAAA,iBAAlB,gBAAAY,EAAAwJ,GAAA,OAAAgQ,EAAAvZ,MAAA/C,KAAAgD,YAAA,KAAZ,wBAAAmC,EAAAtC,SAAAoC,MAAH,yBAAAhK,EAAA8H,MAAA/C,KAAAgD,YAAA,GA6PP4d,GAAiBra,YAlBN,SAAChG,GAAD,MAA6B,CACjDiG,MAAO,CACH0S,gBAAiB3Y,EAAMmG,QAAQwS,gBAC/BzS,cAAelG,EAAMmG,QAAQD,cAC7B6T,OAAQ/Z,EAAMmG,QAAQyS,UAAU9M,IAAI9L,EAAMmG,QAAQwS,iBAAmB,KAAOsB,iBAIzD,SAACtV,GAAD,MAAyB,CAChDc,QAASW,YAAmB,CACxBE,qBACAC,aACD5B,KAMuBqB,CAtOF,SAAC1G,GAAiB,IAAAghB,EACYhhB,EAA9C2G,MAAS0S,EADyB2H,EACzB3H,gBAAiBzS,EADQoa,EACRpa,cAC9B6T,EAASza,EAAM2G,MAAM8T,OAFiBe,EAKlBra,YAAe,GALGsa,EAAAxd,OAAAwG,EAAA,EAAAxG,CAAAud,EAAA,GAKnCyF,EALmCxF,EAAA,GAK7ByF,EAL6BzF,EAAA,GAAAG,EAMhBza,gBAAmCgD,GANnB0X,EAAA5d,OAAAwG,EAAA,EAAAxG,CAAA2d,EAAA,GAMnCre,EANmCse,EAAA,GAM5BC,EAN4BD,EAAA,GAAAE,EAOZ5a,YAAe,GAPH6a,EAAA/d,OAAAwG,EAAA,EAAAxG,CAAA8d,EAAA,GAOnCoF,EAPmCnF,EAAA,GAO1BoF,EAP0BpF,EAAA,GAAAqF,EAQVlgB,YAAe,GARLmgB,EAAArjB,OAAAwG,EAAA,EAAAxG,CAAAojB,EAAA,GAQnChB,EARmCiB,EAAA,GAQzBC,EARyBD,EAAA,GAAAE,EAUVrgB,WAAeI,eAVLkgB,EAAAxjB,OAAAwG,EAAA,EAAAxG,CAAAujB,EAAA,GAUrC/B,EAVqCgC,EAAA,GAU1BC,EAV0BD,EAAA,GAAAE,EAWIxgB,gBAA6CgD,GAXjDyd,EAAA3jB,OAAAwG,EAAA,EAAAxG,CAAA0jB,EAAA,GAWrCjT,EAXqCkT,EAAA,GAWnBC,EAXmBD,EAAA,GAAAE,EAYI3gB,WAAeI,eAZnBwgB,EAAA9jB,OAAAwG,EAAA,EAAAxG,CAAA6jB,EAAA,GAYrChC,EAZqCiC,EAAA,GAYnBC,EAZmBD,EAAA,GAwBpCtM,EAAgB,eAAApS,EAAApF,OAAAgE,EAAA,EAAAhE,CAAAiE,EAAAC,EAAAC,KAAG,SAAAkB,EAAO+G,GAAP,IAAA0Q,EAAAnF,EAAAd,EAAA,OAAA5S,EAAAC,EAAAK,KAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,WACfoY,EAAQN,EAAOjO,IAAInC,KACX0Q,EAAM/C,OAAS3J,GAAUwK,KAFlB,CAAA3U,EAAAvB,KAAA,eAAAuB,EAAApB,OAAA,wBAKf8S,EAAkBmF,EACxB+E,EAAmBA,EAAiBte,IAAI6I,GAAI,GAC5C2X,EAAoBlC,GAPC5b,EAAAxB,KAAA,EAAAwB,EAAAvB,KAAA,EASOiE,EAAc6O,iBAAiBG,GATtC,OASXd,EATW5Q,EAAArB,KAUjB4X,EAASA,EAAOjZ,IAAI6I,EAAIuL,EAAUpU,IAAI,kBAAmBsT,IACrDuE,GACArZ,EAAMmG,QAAQc,UAAU,CAAEoS,kBAAiBoB,WAZ9BvW,EAAAvB,KAAA,iBAAAuB,EAAAxB,KAAA,GAAAwB,EAAAU,GAAAV,EAAA,SAejBhF,QAAQ3B,MAAR2G,EAAAU,IAfiB,QAiBrBkb,EAAmBA,EAAiBmC,OAAO5X,GAC3C2X,EAAoBlC,GAlBC,yBAAA5b,EAAAlB,SAAAM,EAAA,kBAAH,gBAAAoJ,GAAA,OAAArJ,EAAAH,MAAA/C,KAAAgD,YAAA,GAqBhBwb,EAAQ,eAAA/O,EAAA3R,OAAAgE,EAAA,EAAAhE,CAAAiE,EAAAC,EAAAC,KAAG,SAAA6O,IAAA,OAAA/O,EAAAC,EAAAK,KAAA,SAAA4O,GAAA,cAAAA,EAAA1O,KAAA0O,EAAAzO,MAAA,UACR+L,EADQ,CAAA0C,EAAAzO,KAAA,eAETmZ,EAAQ,+BAFC1K,EAAAtO,OAAA,wBAMboe,GAAQ,GACRK,GAAY,GACZzF,OAAS3X,GARIiN,EAAAzO,KAAA,EAeU+L,EAAiBxC,WAf3B,OAAAkF,EAAAvO,KAgBJuM,IAAI,SAAAD,GACT,IAAM+S,EAAS/S,EAAKA,KAAK+S,OACpBzH,EAAO0H,IAAID,KACZzH,EAASA,EAAOjZ,IAAI0gB,EAAQ,IAAIzJ,GAAQ,CACpCpO,GAAI6X,EACJ/S,KAAMpB,YAAK,CAACoB,EAAKA,OACjBrE,SAAUqE,EAAKrE,YAEfuO,GACArZ,EAAMmG,QAAQc,UAAU,CAAEoS,kBAAiBoB,cAYvD8G,GAAY,GArCC,yBAAAnQ,EAAApO,SAAAiO,MAAH,yBAAArB,EAAA1M,MAAA/C,KAAAgD,YAAA,GA4CRmb,EAAoB,WAGtB,GAFAxC,OAAS3X,GAELkV,EAAiB,CACjB,GAAI3K,GAAoBA,EAAiBD,iBAAmB4K,QAGxD,IACI3K,EAAmB,IAAIF,GAAiB6K,GACxCwI,EAAoBnT,GACtB,MAAOnR,GAEL,YADAue,EAAQ,GAAA3c,OAAI5B,GAASA,EAAMnB,SAAWmB,EAAMnB,WAAamB,IAKjEohB,IAAWnY,MAAMtH,QAAQ3B,SAI5B4jB,IAAW9H,GAA8C,KAA3BA,EAAgB/R,QAAkBoH,GACjE4P,IAGC6C,GACDC,GAAW,GAGf,IAAM1B,EAAQ,eAAAnP,EAAAtS,OAAAgE,EAAA,EAAAhE,CAAAiE,EAAAC,EAAAC,KAAG,SAAA6Q,EAAOmP,GAAP,IAAA/X,EAAA8E,EAAAkT,EAAAC,EAAA,OAAApgB,EAAAC,EAAAK,KAAA,SAAA2Q,GAAA,cAAAA,EAAAzQ,KAAAyQ,EAAAxQ,MAAA,UACP0H,EAAK+X,EAAQ/X,GAEnBoV,EAAYA,EAAUje,IAAI6I,GAAI,GAC9BqX,EAAajC,GACRpG,EALQ,CAAAlG,EAAAxQ,KAAA,eAAAwQ,EAAArQ,OAAA,oBAAAqQ,EAAAzQ,KAAA,EAUHyM,EAAOiT,EAAQjT,KAAKwQ,WAAMxb,GAC1Bke,EAAsCD,EAAQtX,WAAad,GAAStI,IAAO,CAAEoJ,SAAUd,GAAStI,IAAKyN,KAAMA,GAC5GiT,EAAQtX,WAAad,GAASlI,IAAO,CAAEgJ,SAAUd,GAASlI,IAAKqN,KAAMA,QAAsBhL,EAZvF,CAAAgP,EAAAxQ,KAAA,eAcC,IAAI2O,MAAJ,8BAAAnS,OAAwCijB,EAAQtX,WAdjD,eAAAqI,EAAAxQ,KAAA,GAiBciE,EAAc6N,eAAe4E,EAAiBgJ,GAjB5D,QAiBHC,EAjBGnP,EAAAtQ,KAmBT4X,EAASA,EAAOjZ,IAAI6I,EAAI,IAAIwO,GAAK,CAC7BxO,KACAwE,MAAOd,YAAW,CAACsU,IACnBhN,UAAWiN,EAAS3C,MAAM,CAAEtK,UAAW,KAAMA,UAC7C2D,WAAYsJ,EAASlT,IAAI,SAAA8F,GAAC,OAAIA,EAAEG,eAEhCgE,GACArZ,EAAMmG,QAAQc,UAAU,CAAEoS,kBAAiBoB,WA1BtCtH,EAAAxQ,KAAA,iBAAAwQ,EAAAzQ,KAAA,GAAAyQ,EAAAvO,GAAAuO,EAAA,SA6BTjU,QAAQ3B,MAAR4V,EAAAvO,IACAkX,EAAQ,GAAA3c,OAAIgU,EAAAvO,IAASuO,EAAAvO,GAAMxI,SAAW+W,EAAAvO,GAAMxI,WAAhC+W,EAAAvO,KA9BH,QAiCb6a,EAAYA,EAAUwC,OAAO5X,GAC7BqX,EAAajC,GAlCA,yBAAAtM,EAAAnQ,SAAAiQ,EAAA,kBAAH,gBAAAnB,GAAA,OAAAvB,EAAArN,MAAA/C,KAAAgD,YAAA,GAqCRqb,EAAkB,eAAAxN,EAAA/S,OAAAgE,EAAA,EAAAhE,CAAAiE,EAAAC,EAAAC,KAAG,SAAAiR,IAAA,IAAArF,EAAAuU,EAAA,OAAArgB,EAAAC,EAAAK,KAAA,SAAA8Q,GAAA,cAAAA,EAAA5Q,KAAA4Q,EAAA3Q,MAAA,cAAA2Q,EAAA5Q,KAAA,EAAA4Q,EAAA3Q,KAAA,EAEA0O,KAFA,cAEbrD,EAFasF,EAAAzQ,KAAAyQ,EAAA3Q,KAAA,EAGKqL,EAAKC,IAAIwD,cAHd,OAGb8Q,EAHajP,EAAAzQ,KAInB7C,EAAMmG,QAAQa,mBAAmBub,EAAU,IAC3CrB,GAAQ,GALW5N,EAAA3Q,KAAA,iBAAA2Q,EAAA5Q,KAAA,GAAA4Q,EAAA1O,GAAA0O,EAAA,SAOnBpU,QAAQ3B,MAAR+V,EAAA1O,IACAkX,EAAQ,GAAA3c,OAAImU,EAAA1O,IAAS0O,EAAA1O,GAAMxI,SAAWkX,EAAA1O,GAAMxI,WAAhCkX,EAAA1O,KARO,yBAAA0O,EAAAtQ,SAAAqQ,EAAA,kBAAH,yBAAArC,EAAA9N,MAAA/C,KAAAgD,YAAA,GAYlB4N,EAAI,eAAA2D,EAAAzW,OAAAgE,EAAA,EAAAhE,CAAAiE,EAAAC,EAAAC,KAAG,SAAAoR,EAAO1I,EAAoBoG,GAA3B,IAAA7F,EAAAhB,EAAA,OAAAnI,EAAAC,EAAAK,KAAA,SAAAiR,GAAA,cAAAA,EAAA/Q,KAAA+Q,EAAA9Q,MAAA,UACTmZ,OAAS3X,IACLuK,GAA+B,MAAXwC,EAFf,CAAAuC,EAAA9Q,KAAA,YAAA8Q,EAAA/Q,KAAA,EAIK2I,EAAKmX,OAAM,mBAAArjB,OAAoB2L,EAAS1L,cAA7B,aAJhB,CAAAqU,EAAA9Q,KAAA,eAAA8Q,EAAA3Q,OAAA,wBAQKuH,EAAajN,OACnBqd,EAASA,EAAOjZ,IAAI6I,EAAI,IAAI4O,GAAK,CAC7B5O,KACAS,WACAoG,SACA7F,KACAgK,UAAW,GACX8D,qBAAiBhV,KAEjBkV,GACArZ,EAAMmG,QAAQc,UAAU,CAAEoS,kBAAiBoB,WAlB9ChH,EAAA/Q,KAAA,EAAA+Q,EAAA9Q,KAAA,GAqBS+L,EAAiBqC,KAAKjG,EAAUO,EAAI6F,GArB7C,QAAAuC,EAAA9Q,KAAA,iBAAA8Q,EAAA/Q,KAAA,GAAA+Q,EAAA7O,GAAA6O,EAAA,SAuBGgH,EAASA,EAAOgI,OAAOpY,GACnBgP,GACArZ,EAAMmG,QAAQc,UAAU,CAAEoS,kBAAiBoB,WAzBlD,QAAAhH,EAAA9Q,KAAA,iBAAA8Q,EAAA/Q,KAAA,GAAA+Q,EAAApE,GAAAoE,EAAA,SA6BDvU,QAAQ3B,MAARkW,EAAApE,IACAyM,EAAQ,GAAA3c,OAAIsU,EAAApE,IAASoE,EAAApE,GAAMjT,SAAWqX,EAAApE,GAAMjT,WAAhCqX,EAAApE,KA9BX,yBAAAoE,EAAAzQ,SAAAwQ,EAAA,yBAAH,gBAAA+D,EAAAhC,GAAA,OAAAb,EAAAxR,MAAA/C,KAAAgD,YAAA,GAmCV,OAAOxC,EAAA,qBAAKyH,UAAU,kBAClBzH,EAAA,cAAC+hB,GAAD,CAAgBpE,kBAAmBA,EAAmBjF,gBAAiBA,EAAiBkF,SA3L3E,SAACxD,GACd,IACMlc,EADWkc,EAAM3T,OACDvI,MACtBmB,EAAMmG,QAAQa,mBAAmBnI,GAGjCqiB,GAAQ,IAqLoG1C,mBAAoBA,IAC/HjhB,EAAQoD,EAAA,mBAAGyH,UAAU,OAAO7K,GAAa,KACzCmR,EACG/N,EAAA,qBAAKyH,UAAS,gBAAAjJ,OAAkB8hB,EAAO,OAAS,KAC5CtgB,EAAA,cAACgiB,GAAD,CAAiB5R,KAAMA,EAAMrC,iBAAkBA,IAC/C/N,EAAA,cAACiiB,GAAD,CAAWvC,SAAUA,EAAUC,UAzHzB,kBAAM3B,KAyHyClE,OAAQA,EAAQgF,UAAWA,EAAWC,SAAUA,EAAUI,iBAAkBA,EAAkBrK,iBAAkBA,KAChK,QCpPfoN,GAAcC,YAAWC,KAMzBC,oLAME,OACIriB,EAAA,cAACsiB,EAAA,EAAD,CAAQ1mB,QAASA,GACboE,EAAA,sBAAMyH,UAAU,eACZzH,EAAA,qBAAKyH,UAAU,cACVhH,EAAQT,EAAA,cAAC8F,EAAD,OACT9F,EAAA,cAACkiB,GAAD,MAEAliB,EAAA,yBACKS,EAAQT,EAAA,cAACsL,GAAD,OACR7K,EAAQT,EAAA,cAACogB,GAAD,OACR3f,EAAQT,EAAA,cAACoK,EAAA,EAAD,CAAgBxI,IAAI,kBAhBlCpB,aAyCV+hB,GAAMxc,YAhBK,SAAChG,GAAD,MAA6B,CACjDiG,MAAO,KAIgB,SAACtB,GAAD,MAAyB,CAChDc,QAASW,YAAmB,GACzBzB,KASYqB,CAA6Csc,cCxDnDG,GAAcC,YAAiC,CACxDvc,QCC0B,WAAoE,IAAnEnG,EAAmEyC,UAAAmE,OAAA,QAAAnD,IAAAhB,UAAA,GAAAA,UAAA,GAA9C,IAAI2W,GAAeuJ,EAA2BlgB,UAAAmE,OAAA,EAAAnE,UAAA,QAAAgB,EAC9F,OAAQkf,EAAOrL,MACX,KAAKsL,kBAAQC,GACT,OAAO7iB,EAAMc,IAAI,gBAAiB6hB,EAAOtO,SAE7C,KAAKuO,kBAAQC,GACT,OAAO7iB,EAAMc,IAAI,kBAAmB6hB,EAAOtO,SAE/C,KAAKuO,kBAAQC,GACT,OAAO7iB,EAAMc,IAAI,YAAad,EAAM4Y,UAAU9X,IAAI6hB,EAAOtO,QAAQsE,gBAAiBgK,EAAOtO,QAAQ0F,SAErG,QACI,OAAO/Z,IDZf2a,aEDyB,WAA0E,IAAzE3a,EAAyEyC,UAAAmE,OAAA,QAAAnD,IAAAhB,UAAA,GAAAA,UAAA,GAAhD,IAAI+X,GAAmBmI,EAAyBlgB,UAAAmE,OAAA,EAAAnE,UAAA,QAAAgB,EACnG,OAAQkf,EAAOrL,MACX,KAAKsL,kBAAQE,GAAb,IAAAC,EACqCJ,EAAOtO,QAClC2O,EAA2B,CAAEzf,MAFvCwf,EACYxf,MACkC0f,cAF9CF,EACmBE,eAEf,OAAOjjB,EAAMc,IAAI,eAAgBd,EAAM2a,aAAa7Z,IAAI6hB,EAAOtO,QAAQ6O,KAAMF,IAEjF,KAAKJ,kBAAQE,GACT,OAAO9iB,EAAMc,IAAI,WAAY6hB,EAAOtO,SAExC,KAAKuO,kBAAQE,GACT,OAAO9iB,EAAMc,IAAI,cAAe6hB,EAAOtO,QAAQpP,aAEnD,QACI,OAAOjF,2BCbbmjB,GAAmBC,YACrB,SAACC,EAA2B3lB,GACxB,IACI,OAAO2lB,EAAaC,YACtB,MAAOzmB,GAIL,MAFA2B,QAAQ3B,MAAR,qBAAA4B,OAAmCf,EAAnC,MAAAe,OAA2CR,KAAKC,UAAUmlB,GAA1D,OAAA5kB,OAA6E5B,IAC7EkC,EAA6BlC,EAAO,CAAEuC,YAAa,oCAC7CvC,IAGd,SAAC0mB,EAAuB7lB,GACpB,IACI,OAAO,IAAI0b,IAAcoK,YAAYD,GACvC,MAAO1mB,GAIL,MAFA2B,QAAQ3B,MAAR,uBAAA4B,OAAqCf,EAArC,MAAAe,OAA6CR,KAAKC,UAAUqlB,GAA5D,OAAA9kB,OAAgF5B,IAChFkC,EAA6BlC,EAAO,CAAEuC,YAAa,sCAC7CvC,IAGd,CAAE4mB,UAAW,CAAC,aAGLC,GAA+B,CACxCC,aACAjmB,IAAK,SACL+lB,UAAW,CAAC,WACZG,WAAY,CAACT,KT5BXU,GAA4B,CAC9BC,MAgBEC,IAP4C9G,GAOLyG,GAP4BxG,GAObuF,GANjDuB,YACH/G,GACAC,YUtBRhjB,EAAAC,EAAAC,EAAA,0BAAA6L,KAcO,ICRgBge,GDQVhe,GVcuBie,YAChCH,GACAI,IAAe3hB,WAAf,EAAmBqhB,KWxBAI,GDUhB,SCPHjnB,IAAY,CAERonB,IhCXkBpoB,GgCclBC,cAGAooB,QAA2B,QAG3BC,cAAe,CACX,wBACA,kBAGA,iBACA,wKAIRtnB,IAAsB,SAACC,GACnBA,EAAMC,SAAS,YAAY,GAG3BD,EAAMC,SAAS,UAAU,GAEzBD,EAAMC,SAAS,UAA6B,SAE5CD,EAAMC,SAAS,eAAgBhB,OAK/B0f,SAASqI,MAAT,GAAAxlB,OAAoBwlB,GAApB,MAAAxlB,OhCzCezC,UgCyCf,KAMJwC,QAAQ2S,IAAR,GAAA1S,OAAewlB,GAAf,mBAAAxlB,OAAwD,UD/B5D8lB,SACI7jB,EAAQT,EAAA,cAACukB,EAAA,EAAD,CAAUve,MAAOA,IACrBhG,EAAA,cAACwkB,EAAA,EAAD,CAAapF,QAAS,KAAMqF,UAAWC,YAAa1e,KAChDhG,EAAA,cAACuiB,GAAD,SAGR5G,SAASgJ,eAAe","file":"static/js/main.8d9e987e.chunk.js","sourcesContent":["export const testnetMasterPKH = new Buffer(\"e02cabac3a62655335b1227dfdecfff27b5f6111\", \"hex\");\n","import { Networks as BNetworks, Opcode as BOpcode, Script as bScript } from \"bitcore-lib\";\nimport { Networks as ZNetworks, Opcode as ZOpcode, Script as zScript } from \"bitcore-lib-zcash\";\n\nexport const createAddress =\n    (networks: typeof BNetworks | typeof ZNetworks, opcode: typeof BOpcode | typeof ZOpcode, script: typeof bScript | typeof zScript) =>\n        ({ mainnet, masterPKH }: { mainnet: boolean, masterPKH: Buffer }) =>\n            (address: string) =>\n                new script()\n                    .add(new Buffer(address.substring(0, 2) === \"0x\" ? address.slice(2) : address, \"hex\"))\n                    .add(opcode.OP_DROP)\n                    .add(opcode.OP_DUP)\n                    .add(opcode.OP_HASH160)\n                    .add(masterPKH)\n                    .add(opcode.OP_EQUALVERIFY)\n                    .add(opcode.OP_CHECKSIG)\n                    .toScriptHashOut().toAddress(mainnet ? networks.livenet : networks.testnet).toString();\n","import * as Sentry from \"@sentry/browser\";\n\nimport { naturalTime } from \"@renex/react-components\";\n\nimport { environment } from \"./environmentVariables\";\n\n// tslint:disable-next-line: no-any\ntype AnyError = Error | any;\n\ninterface Details {\n    description?: string;\n    category?: string;\n    level?: Sentry.Severity;\n    ignoreNetwork?: boolean;\n}\n\ninterface Described {\n    description: string;\n}\n\ninterface ShownToUser {\n    shownToUser: string;\n}\n\nlet pageLoaded: Date;\nexport const pageLoadedAt = (): string => {\n    if (!pageLoaded) {\n        pageLoaded = new Date();\n        return pageLoaded.toUTCString();\n    } else {\n        return naturalTime(Math.floor(pageLoaded.getTime() / 1000), {\n            message: \"Just now\",\n            suffix: \"ago\",\n            countDown: false,\n        });\n    }\n};\n\n// Determines whether or not this is a common network error (too many of these\n// are being logged to Sentry)\nconst isNetworkError = (error: AnyError): boolean => {\n    const message: string = ((error || {}).message || error).toString();\n\n    if (\n        message.match(/Network ?Error/i) ||\n        message.match(/Failed to fetch/i) ||\n        message.match(/Network request failed/i) ||\n        message.match(/Wrong response id/i) ||\n        message.match(/Request failed or timed out/i) ||\n        message.match(/Returned values aren't valid, did it run Out of Gas\\?/i) ||\n        message.match(/Invalid JSON RPC response/i) ||\n        message.match(/timeout of 0ms exceeded/i)\n    ) {\n        return true;\n    }\n\n    return false;\n};\n\nconst rawError = (errorObject: Error) => {\n    // https://stackoverflow.com/questions/11616630/json-stringify-avoid-typeerror-converting-circular-structure-to-json/11616993#11616993\n\n    // Note: cache should not be re-used by repeated calls to JSON.stringify.\n    let cache: Array<{}> | null = [];\n    const rawErrorJSON = JSON.stringify(errorObject, (key, value) => {\n        if (key === \"request\") {\n            return \"... omitted\";\n        }\n        if (cache && typeof value === \"object\" && value !== null) {\n            if (cache.indexOf(value) !== -1) {\n                // Duplicate reference found\n                try {\n                    // If this value does not reference a parent it can be deduped\n                    return JSON.parse(JSON.stringify(value));\n                } catch (error) {\n                    // discard key if value cannot be deduped\n                    return;\n                }\n            }\n            // Store value in our collection\n            cache.push(value);\n        }\n        return value;\n    });\n    cache = null; // Enable garbage collection\n\n    return rawErrorJSON;\n};\n\nconst _captureException_ = <X extends Details>(error: AnyError, details: X) => {\n    if (error._noCapture_) {\n        return;\n    }\n\n    Sentry.withScope(scope => {\n        // How long ago the page was loaded at\n        scope.setExtra(\"pageLoadedAt\", pageLoadedAt());\n\n        // Category\n        if (details.category) {\n            scope.setTag(\"category\", details.category);\n        }\n\n        // Level\n        if (details.level) {\n            scope.setLevel(details.level);\n        }\n\n        // Extra information\n        Object.keys(details)\n            .forEach(key => {\n                scope.setExtra(key, details[key]);\n            });\n\n        if (error && error.response) {\n            scope.setExtra(\"responseData\", error.response.data);\n            scope.setExtra(\"responseStatus\", error.response.status);\n        }\n\n        scope.setExtra(\"caught\", true);\n        scope.setExtra(\"zRawError\", rawError(error));\n\n        // tslint:disable-next-line: no-console\n        console.error(error);\n\n        if (environment !== \"mainnet\") {\n            if (typeof error === \"string\") {\n                // tslint:disable-next-line: no-parameter-reassignment\n                error = `[${environment.toUpperCase()}] ${error}`;\n            } else {\n                try {\n                    error.message = `[${environment.toUpperCase()}] ${error.message || error}`;\n                } catch {\n                    // Ignore: Unable to overwrite message (may be read-only)\n                }\n            }\n        }\n\n        // Check if we should ignore the error\n        if (details.ignoreNetwork && isNetworkError(error)) {\n            return;\n        }\n\n        Sentry.captureException(error);\n\n    });\n};\n\n// Background exceptions are thrown in background loops and actions\nexport const _captureBackgroundException_ = <X extends Details & Described>(error: AnyError, details?: X) => {\n    _captureException_(error, { ignoreNetwork: true, ...details, category: \"background_exception\" });\n};\n\n// Interaction exceptions are thrown as a direct result of a user interaction\nexport const _captureInteractionException_ = <X extends Details & Described & ShownToUser>(error: AnyError, details?: X) => {\n    _captureException_(error, { ...details, category: \"interaction_exception\" });\n};\n\n// Component exceptions are thrown from an ErrorBoundary\nexport const _captureComponentException_ = (error: AnyError, errorInfo: React.ErrorInfo) => {\n    _captureException_(error, { ...errorInfo, description: \"Error caught in Error Boundary. See Component stack trace.\", category: \"component_exception\" });\n};\n\n// _noCapture_ is to mark errors that should not be reported to Sentry.\nexport const _noCapture_ = (error: Error): Error => {\n    (error as AnyError)._noCapture_ = true;\n    return error;\n};\n","import { Currency } from \"@renex/react-components\";\nimport { Map } from \"immutable\";\n\nimport { TokenPrices } from \"../../store/types/general\";\n\nexport enum Token {\n    DAI = \"DAI\",\n    BTC = \"BTC\",\n    ETH = \"ETH\",\n    REN = \"REN\",\n    TUSD = \"TUSD\",\n    ZEC = \"ZEC\",\n    WBTC = \"WBTC\",\n}\n// export type MarketPair = string;\n\nconst CoinGeckoIDs = Map<Token, string>()\n    .set(Token.DAI, \"dai\")\n    .set(Token.BTC, \"bitcoin\")\n    .set(Token.ETH, \"ethereum\")\n    .set(Token.REN, \"republic-protocol\")\n    .set(Token.TUSD, \"true-usd\")\n    .set(Token.ZEC, \"zcash\")\n    .set(Token.WBTC, \"bitcoin\");\n\n/**\n * Retrieves the current pricepoint for two currencies.\n * @param fstCode The first currency.\n * @param sndCode The second currency.\n * @returns An array containing the price with respect to the currencies, and the 24 hour percent change.\n */\nconst fetchDetails = async (geckoID: string) => {\n    const url = `https://api.coingecko.com/api/v3/coins/${geckoID}?localization=false&tickers=false&market_data=true&community_data=false&developer_data=false&sparkline=false`;\n    const response = await fetch(url);\n    return response.json();\n};\n\nexport const getMarketPrice = async (quoteCode: Token, baseCode: Token): Promise<[number, number]> => {\n    const baseCoinGeckoID = CoinGeckoIDs.get(baseCode, undefined);\n    if (baseCoinGeckoID === undefined) {\n        return [0, 0];\n    }\n\n    const baseData = await fetchDetails(baseCoinGeckoID);\n    const basePrice: number | null | undefined = baseData.market_data.current_price[quoteCode.toLowerCase()];\n    const basePercentChange: number | null | undefined = baseData.market_data.price_change_percentage_24h_in_currency[quoteCode.toLowerCase()];\n\n    if (basePrice !== undefined && basePrice !== null) {\n        return [basePrice || 0, basePercentChange || 0];\n    }\n\n    // If the pairing isn't available, use BTC as a conversion bridge.\n    const bridge = Token.BTC;\n\n    const quoteCoinGeckoID = CoinGeckoIDs.get(quoteCode, undefined);\n    if (quoteCoinGeckoID === undefined) {\n        return [0, 0];\n    }\n\n    const basePriceInBridge: number = (baseData.market_data.current_price[bridge.toLowerCase()] || 0);\n    const basePercentChangeInBridge: number = (baseData.market_data.price_change_percentage_24h_in_currency[bridge.toLowerCase()] || 0);\n\n    const quoteData = await fetchDetails(quoteCoinGeckoID);\n    const quotePriceInBridge: number = quoteData.market_data.current_price[bridge.toLowerCase()] || 0;\n    const quotePercentChangeInBridge: number = quoteData.market_data.price_change_percentage_24h_in_currency[bridge.toLowerCase()] || 0;\n    return [\n        quotePriceInBridge ? basePriceInBridge / quotePriceInBridge : 0,\n        quotePercentChangeInBridge ? basePercentChangeInBridge / quotePercentChangeInBridge : 0\n    ];\n};\n\nexport const getTokenPricesInCurrencies = async (): Promise<TokenPrices> => {\n    let prices: TokenPrices = Map();\n\n    for (const tokenAndDetails of CoinGeckoIDs.toSeq().toArray()) {\n        const [token, coinGeckoID] = tokenAndDetails;\n\n        // tslint:disable-next-line:max-line-length\n        const data = await fetchDetails(coinGeckoID);\n        const price = Map<Currency, number>(data.market_data.current_price);\n\n        prices = prices.set(token, price);\n    }\n\n    return prices;\n};\n","import { createBrowserHistory } from \"history\";\n\nexport const history = createBrowserHistory();\n","export const SENTRY_DSN = process.env.REACT_APP_SENTRY_DSN;\n\nexport const NETWORK = process.env.REACT_APP_NETWORK;\nexport const SOURCE_VERSION = process.env.REACT_APP_SOURCE_VERSION;\nexport const INFURA = process.env.REACT_APP_INFURA;\n\n// export const BACKEND_URL = process.env.REACT_APP_BACKEND_URL || \"\";\n\nexport const environment = ((process.env.NODE_ENV === \"development\") ? \"local\" : NETWORK) || \"unknown\";\n","import * as Sentry from \"@sentry/browser\";\nimport * as React from \"react\";\n\nimport { _captureComponentException_ } from \"../../lib/util/errors\";\n\nclass ErrorBoundary extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = { error: null, errorInfo: null };\n    }\n\n    public componentDidCatch = (error: Error, errorInfo: React.ErrorInfo) => {\n        this.setState({\n            error,\n            errorInfo,\n        });\n        _captureComponentException_(error, errorInfo);\n    }\n\n    /**\n     * The main render function.\n     * @dev Should have minimal computation, loops and anonymous functions.\n     */\n    public render(): React.ReactNode {\n        if (this.state.errorInfo) {\n            // Error path\n            return (\n                <div>\n                    <h2>Something went wrong.</h2>\n                    <details style={{ whiteSpace: \"pre-wrap\" }}>\n                        <p role=\"button\" style={{ cursor: \"pointer\" }} onClick={this.reportFeedback}>\n                            Click to report feedback\n                        </p>\n                        {this.state.error && this.state.error.toString()}\n                        <br />\n                        {this.state.errorInfo.componentStack}\n                    </details>\n                </div>\n            );\n        }\n        // Normally, just render children\n        return this.props.children;\n    }\n\n    private readonly reportFeedback = () => {\n        Sentry.showReportDialog();\n    }\n}\n\ninterface Props {\n}\n\ninterface State {\n    error: null | Error;\n    errorInfo: null | React.ErrorInfo;\n}\n\nexport const _catch_ = (\n    children: React.ReactNode,\n) => <ErrorBoundary>\n        {children}\n    </ErrorBoundary>;\n","import { Dispatch } from \"redux\";\nimport { createStandardAction } from \"typesafe-actions\";\n\nimport { getTokenPricesInCurrencies } from \"../../../lib/util/market\";\nimport { TokenPrices } from \"../../types/general\";\n\n/**\n * Updates the market price for a specific token\n */\nexport const updatePrices = createStandardAction(\"UPDATE_PRICES\")<{\n    price: number;\n    percentChange: number;\n    pair: string;\n}>();\n\nexport const pricesUpdating = createStandardAction(\"PRICES_UPDATING\")<boolean>();\n\nexport const setTokenPrices = createStandardAction(\"STORE_TOKEN_PRICES\")<{ tokenPrices: TokenPrices }>();\n\nexport const updateTokenPrices = () => async (dispatch: Dispatch) => new Promise((resolve, reject) => {\n    dispatch(pricesUpdating(true));\n    setTimeout(async () => {\n        try {\n            const tokenPrices = await getTokenPricesInCurrencies();\n            dispatch(pricesUpdating(false));\n            dispatch(setTokenPrices({ tokenPrices }));\n        } catch (error) {\n            dispatch(pricesUpdating(false));\n            reject(error);\n        }\n        resolve();\n    }, 1000);\n});\n","import * as React from \"react\";\n\nimport { connect, ConnectedReturnType } from \"react-redux\"; // Custom typings\nimport { bindActionCreators, Dispatch } from \"redux\";\n\nimport { _captureBackgroundException_, _captureInteractionException_ } from \"../../lib/util/errors\";\n// import { getMarketPrice } from \"../lib/market\";\nimport { updatePrices, updateTokenPrices } from \"../../store/actions/market/marketActions\";\nimport { ApplicationData } from \"../../store/types/general\";\nimport { _catch_ } from \"../views/ErrorBoundary\";\n\n/**\n * BackgroundTasks is responsible for running background loops like updating\n * balances and prices\n */\nclass BackgroundTasksClass extends React.Component<Props, State> {\n\n    /**\n     * The following timeouts are used to run the various background tasks.\n     * setTimeout is used instead of setInterval so the interval between calls\n     * includes the time it takes to run the task.\n     */\n    // tslint:disable: completed-docs\n    private callBootstrapTimeout: NodeJS.Timer | undefined;\n    private callUpdatePricesTimeout: NodeJS.Timer | undefined;\n    private callUpdateMarketPricesTimeout: NodeJS.Timer | undefined;\n    // tslint:enable: completed-docs\n\n    public constructor(props: Props, context: object) {\n        super(props, context);\n        this.state = {\n        };\n    }\n\n    public async componentDidMount(): Promise<void> {\n        this.setupLoops();\n    }\n\n    public componentWillUnmount() {\n        // Clear timeouts\n        if (this.callBootstrapTimeout) { clearTimeout(this.callBootstrapTimeout); }\n        if (this.callUpdatePricesTimeout) { clearTimeout(this.callUpdatePricesTimeout); }\n        if (this.callUpdateMarketPricesTimeout) { clearTimeout(this.callUpdateMarketPricesTimeout); }\n    }\n\n    /**\n     * The main render function.\n     * @dev Should have minimal computation, loops and anonymous functions.\n     */\n    public render(): React.ReactNode {\n        return <></>;\n    }\n\n    // Update token prices every 60 seconds\n    private readonly callUpdatePrices = async (): Promise<void> => {\n        let delay = 60;\n        try {\n            // tslint:disable-next-line: await-promise\n            await this.props.actions.updateTokenPrices();\n        } catch (error) {\n            _captureBackgroundException_(error, {\n                description: \"Error thrown in callUpdatePrices background task\",\n            });\n            delay = 5;\n        }\n        if (this.callUpdatePricesTimeout) { clearTimeout(this.callUpdatePricesTimeout); }\n        this.callUpdatePricesTimeout = setTimeout(this.callUpdatePrices, delay * 1000);\n    }\n\n    // Bootstrap every hour\n    private readonly callBootstrap = async (): Promise<void> => {\n        let delay = 60 * 60;\n        try {\n            // await this.props.store.darknodeGroup.bootstrap();\n        } catch (error) {\n            _captureBackgroundException_(error, {\n                description: \"Error thrown in callBootstrap background task\",\n            });\n            delay = 20;\n        }\n        if (this.callBootstrapTimeout) { clearTimeout(this.callBootstrapTimeout); }\n        this.callBootstrapTimeout = setTimeout(this.callBootstrap, delay * 1000);\n    }\n\n    // Retrieve market prices every minute\n    private readonly callUpdateMarketPrices = async () => {\n        // const { supportedMarkets } = this.props;\n        const delay = 60;\n        // if (supportedMarkets) {\n        //     try {\n        //         await Promise.all(supportedMarkets.map(async (pair, marketID) => {\n        //             const [price, percentChange] = await getMarketPrice(pair.quote, pair.base);\n        //             this.props.actions.updatePrices({ price, percentChange, pair: marketID });\n        //         }).toArray());\n        //     } catch (error) {\n        //         _captureBackgroundException_(error, {\n        //             description: \"Error in BackgroundTasks.callUpdateMarketPrices\",\n        //         });\n        //         delay = 10;\n        //     }\n        // } else {\n        //     delay = 1;\n        // }\n        if (this.callUpdateMarketPricesTimeout) { clearTimeout(this.callUpdateMarketPricesTimeout); }\n        this.callUpdateMarketPricesTimeout = setTimeout(this.callUpdateMarketPrices, delay * 1000);\n    }\n\n    /**\n     * setupLoops is called once to start the timeouts\n     */\n    private readonly setupLoops = () => {\n        this.callBootstrap().catch(error => {\n            _captureBackgroundException_(error, {\n                description: \"Error in callBootstrap in BackgroundTasks\",\n            });\n        });\n\n        this.callUpdatePrices().catch(error => {\n            _captureBackgroundException_(error, {\n                description: \"Error in callUpdatePrices in BackgroundTasks\",\n            });\n        });\n\n        this.callUpdateMarketPrices().catch(error => {\n            _captureBackgroundException_(error, {\n                description: \"Error in callUpdatePrices in BackgroundTasks\",\n            });\n        });\n\n    }\n}\n\nconst mapStateToProps = (state: ApplicationData) => ({\n    store: {\n        darknodeGroup: state.general.darknodeGroup,\n    }\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n    actions: bindActionCreators({\n        updatePrices,\n        updateTokenPrices,\n    }, dispatch)\n});\n\ninterface Props extends ReturnType<typeof mapStateToProps>, ConnectedReturnType<typeof mapDispatchToProps> {\n}\n\ninterface State {\n}\n\nexport const BackgroundTasks = connect(mapStateToProps, mapDispatchToProps)(BackgroundTasksClass);\n","import { OrderedMap } from \"immutable\";\nimport { createStandardAction } from \"typesafe-actions\";\n\nimport { Currency } from \"@renex/react-components\";\nimport { _captureBackgroundException_, _captureInteractionException_ } from \"../../../lib/util/errors\";\nimport { XCSEvent } from \"../../types/general\";\n\nexport const setQuoteCurrency = createStandardAction(\"setQuoteCurrency\")<Currency>();\nexport const setEthereumAddress = createStandardAction(\"setEthereumAddress\")<string | undefined>();\n\nexport const setEvents = createStandardAction(\"addToRedeemedUTXOs\")<{ ethereumAddress: string, events: OrderedMap<string, XCSEvent> }>();\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  className: \"ren-logo\",\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M4.22832 6.51869L6.50289 5.20916L6.80925 5.73645L15.1936 0.889439L14.5809 0.535981L13.9653 0.176729L13.659 0L0 7.90935V8.2628L3.92197 5.9885L4.22832 6.51869Z\",\n  fill: \"#212122\"\n});\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  className: \"ren-logo\",\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M4.22832 11.4991L10.8006 7.69217L11.1069 8.22815L19.4913 3.37824L18.8786 3.01899L18.263 2.66553L17.9566 2.4917L0 12.8839V13.2374L3.92197 10.9631L4.22832 11.4991Z\",\n  fill: \"#212122\"\n});\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  className: \"ren-logo\",\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M4.22832 13.9875L12.948 8.9406L13.2572 9.47079L21.6387 4.61509L21.026 4.26743L20.4133 3.90817L20.104 3.73145L0 15.3666V15.7258L3.92197 13.4544L4.22832 13.9875Z\",\n  fill: \"#212122\"\n});\n\nvar _ref5 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  className: \"ren-logo\",\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M4.22832 16.4736L15.159 10.149L15.4682 10.6792L23.789 5.86405L23.1763 5.5048L22.5607 5.15134L22.2543 4.97461L0 17.8584V18.2119L3.92197 15.9376L4.22832 16.4736Z\",\n  fill: \"#212122\"\n});\n\nvar _ref6 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  className: \"ren-logo\",\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M4.22832 18.9563L17.3092 11.3888L17.6156 11.9248L25.9364 7.10383L25.3237 6.75327L24.711 6.39401L24.4017 6.21729L0 20.3411V20.6946L3.92197 18.4261L4.22832 18.9563Z\",\n  fill: \"#212122\"\n});\n\nvar _ref7 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  className: \"ren-logo\",\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M26.8584 7.64008L26.552 7.46045L0 22.833V23.1864L3.92197 20.9179L4.22832 21.4481L17.3092 13.8806L17.6156 14.4108L27.3179 8.79895V8.08624V7.90951L26.8584 7.64008Z\",\n  fill: \"#212122\"\n});\n\nvar _ref8 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  className: \"ren-logo\",\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M1.68241 24.6955L3.88184 23.4237L4.18819 23.9539L17.246 16.398L17.5524 16.9339L27.3183 11.2815V10.5688V9.8561V9.50293L1.38184 24.5191L1.68241 24.6955Z\",\n  fill: \"#212122\"\n});\n\nvar _ref9 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  className: \"ren-logo\",\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M17.2461 18.8895L17.5524 19.4257L27.3183 13.773V13.0603V12.3476V11.9941L3.5293 25.7619L3.83855 25.9383L6.06976 24.6433L6.37901 25.1793\",\n  fill: \"#212122\"\n});\n\nvar _ref10 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  className: \"ren-logo\",\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M5.98597 27.1845L8.22007 25.8865L8.52643 26.4222L17.2461 21.3724L17.5524 21.9087L27.3183 16.256V15.5433V14.8363V14.48L5.67383 27.0017L5.98597 27.1845Z\",\n  fill: \"#212122\"\n});\n\nvar _ref11 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  className: \"ren-logo\",\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M8.13351 28.4275L10.3676 27.135L10.6769 27.6652L17.2462 23.8644L17.5526 24.3943L27.3185 18.7418V18.0352V17.3225V16.9688L7.82715 28.2507L8.13351 28.4275Z\",\n  fill: \"#212122\"\n});\n\nvar _ref12 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  className: \"ren-logo\",\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M9.97656 29.4933L10.2829 29.6698L12.5228 28.375L12.8234 28.911L17.2453 26.347L17.5517 26.883L27.3176 21.2302V20.5178V19.8051V19.4517L9.97656 29.4933Z\",\n  fill: \"#212122\"\n});\n\nvar _ref13 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  className: \"ren-logo\",\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M12.4304 30.9189L14.6645 29.618L14.9708 30.154L17.2454 28.8329L17.5518 29.3689L27.3177 23.7222V23.0095V22.2968V21.9434L12.124 30.7421L12.4304 30.9189Z\",\n  fill: \"#212122\"\n});\n\nvar _ref14 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  className: \"ren-logo\",\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M17.3439 2.1326L16.7283 1.77915L16.1156 1.42569L15.8092 1.24316L0 10.3925V10.746L3.92197 8.48036L4.22832 9.00765L8.65029 6.44943L8.96532 6.98541L17.3439 2.1326Z\",\n  fill: \"#212122\"\n});\n\nvar SvgLogo = function SvgLogo(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: 31,\n    height: 31,\n    viewBox: \"0 0 31 31\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11, _ref12, _ref13, _ref14);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgLogo, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/logo.3e204930.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"title\", null, \"union-jack\");\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"desc\", null, \"Created with Sketch.\");\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"defs\", null);\n\nvar _ref5 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  id: \"Page-1\",\n  stroke: \"none\",\n  strokeWidth: 1,\n  fill: \"none\",\n  fillRule: \"evenodd\"\n}, React.createElement(\"g\", {\n  id: \"union-jack\"\n}, React.createElement(\"polygon\", {\n  id: \"Fill-1\",\n  fill: \"#FFFFFF\",\n  points: \"0 11 20.7878788 11 20.7878788 0 0 0\"\n}), React.createElement(\"polygon\", {\n  id: \"Fill-2\",\n  fill: \"#00247D\",\n  points: \"2.32431818 11 8.66165152 11 8.66165152 7.64657143\"\n}), React.createElement(\"polygon\", {\n  id: \"Fill-3\",\n  fill: \"#00247D\",\n  points: \"12.1261636 11 18.4641333 11 12.1261636 7.64657143\"\n}), React.createElement(\"polygon\", {\n  id: \"Fill-4\",\n  fill: \"#00247D\",\n  points: \"0 7.33316122 0 9.76999796 4.60515152 7.33316122\"\n}), React.createElement(\"polygon\", {\n  id: \"Fill-5\",\n  fill: \"#CF142B\",\n  points: \"6.92942727 7.33316122 6.36363636e-05 10.9999776 1.54960909 10.9999776 8.47854848 7.33316122\"\n}), React.createElement(\"polygon\", {\n  id: \"Fill-6\",\n  fill: \"#CF142B\",\n  points: \"13.8588545 7.33316122 20.7880061 10.9999776 20.7880061 10.1801408 15.4081879 7.33316122\"\n}), React.createElement(\"polygon\", {\n  id: \"Fill-7\",\n  fill: \"#00247D\",\n  points: \"16.1829818 7.33316122 20.7879212 9.76999796 20.7879212 7.33316122\"\n}), React.createElement(\"polygon\", {\n  id: \"Fill-8\",\n  fill: \"#00247D\",\n  points: \"0 3.66652449 4.60515152 3.66652449 0 1.22991224\"\n}), React.createElement(\"polygon\", {\n  id: \"Fill-9\",\n  fill: \"#00247D\",\n  points: \"16.1829818 3.66652449 20.7879212 3.66652449 20.7879212 1.22991224\"\n}), React.createElement(\"polygon\", {\n  id: \"Fill-10\",\n  fill: \"#CF142B\",\n  points: \"0 8.97959184e-05 0 0.819926531 5.37960606 3.66645714 6.92936364 3.66645714 0.000424242424 8.97959184e-05\"\n}), React.createElement(\"polygon\", {\n  id: \"Fill-11\",\n  fill: \"#00247D\",\n  points: \"2.3247 8.97959184e-05 8.66160909 3.35329388 8.66160909 8.97959184e-05\"\n}), React.createElement(\"polygon\", {\n  id: \"Fill-12\",\n  fill: \"#CF142B\",\n  points: \"9.35454545 8.97959184e-05 9.35454545 4.39986531 0 4.39986531 0 6.59986531 9.35454545 6.59986531 9.35454545 11.0000898 11.4331212 11.0000898 11.4331212 6.59964082 20.7878788 6.59964082 20.7878788 4.39964082 11.4331212 4.39964082 11.4331212 8.97959184e-05\"\n}), React.createElement(\"polygon\", {\n  id: \"Fill-13\",\n  fill: \"#00247D\",\n  points: \"12.1261636 8.97959184e-05 12.1261636 3.35329388 18.4637091 8.97959184e-05\"\n}), React.createElement(\"polygon\", {\n  id: \"Fill-14\",\n  fill: \"#CF142B\",\n  points: \"19.2379091 8.97959184e-05 12.3089697 3.66645714 13.8589394 3.66645714 20.7874545 8.97959184e-05\"\n})));\n\nvar SvgRpFlagUk = function SvgRpFlagUk(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: \"21px\",\n    height: \"11px\",\n    viewBox: \"0 0 21 11\",\n    ref: svgRef\n  }, props), _ref2, _ref3, _ref4, _ref5);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgRpFlagUk, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/rp-flag-uk.e021baf7.svg\";\nexport { ForwardRef as ReactComponent };","import { List, Map as ImmutableMap } from \"immutable\";\n\nimport BigNumber from \"bignumber.js\";\nimport Web3 from \"web3\";\n\nimport { Contract } from \"web3-eth-contract\";\n\nimport { getWeb3 } from \"../../components/controllers/SwapController\";\nimport { INFURA } from \"../util/environmentVariables\";\nimport { BitcoinUTXO, btcAddressToHex, createBTCTestnetAddress, getBTCTestnetUTXOs } from \"./btc/btc\";\nimport { createZECTestnetAddress, getZECTestnetUTXOs, ZcashUTXO, zecAddressToHex } from \"./btc/zec\";\nimport { bridgedToken, zBTCAddress, zZECAddress } from \"./eth/eth\";\n\nexport enum Currency {\n    BTC = \"btc\",\n    ZEC = \"zec\",\n    ETH = \"eth\"\n}\nexport const CurrencyList = [Currency.BTC, Currency.ZEC, Currency.ETH];\n\nexport const CurrencyDecimals = (currency: Currency): number => {\n    switch (currency) {\n        case Currency.BTC:\n            return 8;\n        case Currency.ZEC:\n            return 8;\n        case Currency.ETH:\n            return 18;\n    }\n};\n\nexport const CurrencyColor = (currency: Currency): string => {\n    switch (currency) {\n        case Currency.BTC:\n            return \"#F09242\";\n        case Currency.ZEC:\n            return \"rgb(244, 183, 40)\";\n        case Currency.ETH:\n            return \"#627eea\";\n    }\n};\n\nexport type UTXO = { currency: Currency.BTC, utxo: BitcoinUTXO } | { currency: Currency.ZEC, utxo: ZcashUTXO };\n\nexport class DepositAddresses {\n    public receiveAddress: string;\n\n    public depositAddresses: Map<Currency, string>;\n\n    private readonly web3: Web3 | undefined;\n    private readonly zBTC: Contract | undefined;\n    private readonly zZEC: Contract | undefined;\n\n    constructor(receiveAddress: string) {\n        this.receiveAddress = receiveAddress;\n\n        this.depositAddresses = (new Map<Currency, string>())\n            .set(Currency.ZEC, createZECTestnetAddress(receiveAddress))\n            .set(Currency.BTC, createBTCTestnetAddress(receiveAddress))\n            .set(Currency.ETH, receiveAddress)\n            ;\n\n        if (INFURA) {\n            this.web3 = new Web3(INFURA);\n            this.zBTC = bridgedToken(this.web3, zBTCAddress);\n            this.zZEC = bridgedToken(this.web3, zZECAddress);\n        }\n    }\n\n    public getUTXOs = async (limit = 10, confirmations = 0): Promise<List<UTXO>> => {\n        let utxos = List<UTXO>();\n\n        const btcDepositAddress = this.depositAddresses.get(Currency.BTC);\n        if (btcDepositAddress) {\n            try {\n                const newBitcoinUTXOs: Array<{ currency: Currency.BTC, utxo: BitcoinUTXO }> = (await getBTCTestnetUTXOs(btcDepositAddress, limit, confirmations)).map(utxo => ({ currency: Currency.BTC, utxo }));\n                utxos = utxos.concat(List(newBitcoinUTXOs));\n            } catch (error) {\n                console.error(error);\n            }\n        }\n\n        const zecDepositAddress = this.depositAddresses.get(Currency.ZEC);\n        if (zecDepositAddress) {\n            try {\n                const newZcashUTXOs: Array<{ currency: Currency.ZEC, utxo: ZcashUTXO }> = (await getZECTestnetUTXOs(zecDepositAddress, limit, confirmations)).map(utxo => ({ currency: Currency.ZEC, utxo }));\n                utxos = utxos.concat(List(newZcashUTXOs));\n            } catch (error) {\n                console.error(error);\n            }\n        }\n\n        return utxos;\n    }\n\n    public getBalances = async () => {\n        let balances = ImmutableMap<string, string>();\n\n        for (const { curr, contract } of [\n            { curr: Currency.BTC, contract: this.zBTC },\n            { curr: Currency.ZEC, contract: this.zZEC },\n        ]) {\n            if (this.web3 && contract) {\n                try {\n                    balances = balances.set(curr, this.web3.utils.fromWei(await contract.methods.balanceOf(this.receiveAddress).call()));\n                } catch (error) {\n                    console.error(error);\n                }\n            }\n        }\n\n        return balances;\n    }\n\n    public getBalance = async (currency: Currency): Promise<string> => {\n        switch (currency) {\n            case Currency.BTC:\n                return (this.web3 && this.zBTC) ?\n                    new BigNumber(await this.zBTC.methods.balanceOf(this.receiveAddress).call()).div(10 ** CurrencyDecimals(Currency.BTC)).toFixed() :\n                    \"0\";\n            case Currency.ZEC:\n                return (this.web3 && this.zZEC) ?\n                    new BigNumber(await this.zZEC.methods.balanceOf(this.receiveAddress).call()).div(10 ** CurrencyDecimals(Currency.BTC)).toFixed() :\n                    \"0\";\n            case Currency.ETH:\n                // return (this.web3) ?\n                // this.web3.utils.fromWei((await this.web3.eth.getBalance(this.receiveAddress)).toString()) :\n                return \"0\";\n        }\n    }\n\n    public burn = async (currency: Currency, to: string, amount: string) => {\n        let web3;\n        try {\n            web3 = await getWeb3();\n        } catch (error) {\n            throw new Error(\"Unable to connect to Web3 browser.\");\n        }\n        const network = await web3.eth.net.getNetworkType();\n        if (network !== \"kovan\") {\n            throw new Error(\"Please change your Web3 browser network to Kovan\");\n        }\n        const addresses = (await web3.eth.getAccounts()).map(a => a.toUpperCase());\n        if (addresses.indexOf(this.receiveAddress.toUpperCase()) === -1) {\n            throw new Error(\"Please switch to the selected address in your Web3 browser\");\n        }\n\n        const contract = currency === Currency.BTC ? bridgedToken(web3, zBTCAddress) :\n            currency === Currency.ZEC ? bridgedToken(web3, zZECAddress) :\n                undefined;\n\n        if (contract === undefined) {\n            throw new Error(\"Something went wrong, please reload and try again\");\n        }\n\n        const toHex = currency === Currency.BTC ? btcAddressToHex(to) :\n            currency === Currency.ZEC ? zecAddressToHex(to) :\n                to;\n\n        await contract.methods.burn(toHex, new BigNumber(amount).multipliedBy(10 ** CurrencyDecimals(currency)).toFixed()).send({ from: this.receiveAddress });\n        console.log(\"Returned from burn call.\");\n    }\n}\n","import * as React from \"react\";\n\nimport { connect, ConnectedReturnType } from \"react-redux\"; // Custom typings\nimport { Link } from \"react-router-dom\";\nimport { bindActionCreators, Dispatch } from \"redux\";\n\nimport { _captureBackgroundException_ } from \"../../lib/util/errors\";\nimport { setQuoteCurrency } from \"../../store/actions/general/generalActions\";\nimport { ApplicationData } from \"../../store/types/general\";\nimport { _catch_ } from \"../views/ErrorBoundary\";\n\nimport { currencies, Currency, CurrencyIcon, Dropdown, Header } from \"@renex/react-components\";\n\nimport { ReactComponent as Logo } from \"../../styles/images/logo.svg\";\nimport { ReactComponent as English } from \"../../styles/images/rp-flag-uk.svg\";\n\nconst getCurrencyOptions = () => {\n    const options = new Map<string, React.ReactNode>();\n\n    for (const currency of currencies) {\n        options.set(currency.currency, <>\n            <CurrencyIcon currency={currency.currency} />\n            {\" \"}{currency.description}\n        </>);\n    }\n\n    return options;\n};\n\nconst currencyOptions = getCurrencyOptions();\n\nconst languageOptions = new Map()\n    .set(\"EN\",\n        <><English /> English</>\n    );\n\nconst logo = <Link className=\"no-underline\" to=\"/\">\n    <Logo />\n    <span>beta</span>\n</Link>;\n\n/**\n * Header is a visual component providing page branding and navigation.\n */\nclass HeaderControllerClass extends React.Component<Props, State> {\n    public render = (): JSX.Element => {\n        const { store: { quoteCurrency } } = this.props;\n\n        const languageDropdown = <Dropdown\n            key=\"languageDropdown\"\n            selected={{\n                value: \"EN\",\n                render: \"English\",\n            }}\n            options={languageOptions}\n            setValue={this.setLanguage}\n        />;\n\n        const currencyDropdown = <Dropdown\n            key=\"currencyDropdown\"\n            selected={{\n                value: quoteCurrency,\n                render: <>\n                    <CurrencyIcon currency={quoteCurrency} />\n                    {\" \"}{quoteCurrency.toUpperCase()}\n                </>\n            }}\n            options={currencyOptions}\n            setValue={this.setCurrency}\n        />;\n\n        return (\n            <Header\n                logo={logo}\n                menu={[\n                    languageDropdown, currencyDropdown\n                ]}\n            />\n        );\n    }\n\n    private readonly setCurrency = (quoteCurrency: Currency): void => {\n        this.props.actions.setQuoteCurrency(quoteCurrency);\n    }\n\n    private readonly setLanguage = (language: string): void => {\n        // NOT IMPLEMENTED\n    }\n}\n\nconst mapStateToProps = (state: ApplicationData) => ({\n    store: {\n        quoteCurrency: state.general.quoteCurrency,\n    }\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n    actions: bindActionCreators({\n        setQuoteCurrency,\n    }, dispatch)\n});\n\ninterface Props extends ReturnType<typeof mapStateToProps>, ConnectedReturnType<typeof mapDispatchToProps> {\n}\n\ninterface State {\n}\n\nexport const HeaderController = connect(mapStateToProps, mapDispatchToProps)(HeaderControllerClass);\n","import Axios from \"axios\";\n\nexport const getUTXOs = <T>(endpoint: string) => async (address: string, limit: number, confirmations: number): Promise<T[]> => {\n    const resp = await Axios.get<T[]>(`${endpoint}/utxo/${address}?limit=${limit}&confirmations=${confirmations}`);\n    return resp.data;\n};\n","import { Networks, Opcode, Script } from \"bitcore-lib\";\nimport { decode as decode58 } from \"bs58\";\n\nimport { testnetMasterPKH } from \"../../darknode/publicKey\";\nimport { getUTXOs } from \"../mercury\";\nimport { createAddress } from \"./common\";\n\nexport const createBTCAddress = createAddress(Networks, Opcode, Script);\n\nconst testnetMercury = \"https://ren-mercury.herokuapp.com/btc-testnet3\";\n\nexport interface BitcoinUTXO {\n    txHash: string; // hex string without 0x prefix\n    amount: number; // satoshis\n    scriptPubKey: string; // hex string without 0x prefix\n    vout: number;\n}\n\n// tslint:disable-next-line: no-object-literal-type-assertion\n// export class BitcoinUTXO extends Record({\n//     txHash: \"\", // hex string without 0x prefix\n//     amount: 0, // satoshis\n//     scriptPubKey: \"\", // hex string without 0x prefix\n//     vout: 0,\n// } as RawUTXO) { }\n\nexport const getBTCTestnetUTXOs = getUTXOs<BitcoinUTXO>(testnetMercury);\n\n// async (address: string, limit: number, confirmations: number) => {\n//     return (await getUTXOs<RawUTXO>(testnetMercury)(address, limit, confirmations)).map(raw => new BitcoinUTXO(raw));\n// };\n\nexport const createBTCTestnetAddress = createBTCAddress({ mainnet: false, masterPKH: testnetMasterPKH });\n\nexport const btcAddressToHex = (address: string) => `0x${decode58(address).toString(\"hex\")}`;\n// `0x${(new Address(address)).toBuffer().toString(\"hex\")}`;\n","import { Networks, Opcode, Script } from \"bitcore-lib-zcash\";\n\nimport { decode as decode58 } from \"bs58\";\n\nimport { testnetMasterPKH } from \"../../darknode/publicKey\";\nimport { getUTXOs } from \"../mercury\";\nimport { createAddress } from \"./common\";\n\nexport const createZECAddress = createAddress(Networks, Opcode, Script);\n\nconst testnetMercury = \"https://ren-mercury.herokuapp.com/zec-testnet\";\n\nexport interface ZcashUTXO {\n    txHash: string; // hex string without 0x prefix\n    amount: number; // satoshis\n    scriptPubKey: string; // hex string without 0x prefix\n    vout: number;\n}\n\n// tslint:disable-next-line: no-object-literal-type-assertion\n// export class ZcashUTXO extends Record({\n//     txHash: \"\", // hex string without 0x prefix\n//     amount: 0, // satoshis\n//     scriptPubKey: \"\", // hex string without 0x prefix\n//     vout: 0,\n// } as RawUTXO) { }\n\nexport const getZECTestnetUTXOs = getUTXOs<ZcashUTXO>(testnetMercury);\n\n// export const getZECTestnetUTXOs = async (address: string, limit: number, confirmations: number) => {\n//     return (await getUTXOs<RawUTXO>(testnetMercury)(address, limit, confirmations)).map(raw => new ZcashUTXO(raw));\n// };\n\nexport const createZECTestnetAddress = createZECAddress({ mainnet: false, masterPKH: testnetMasterPKH });\n\nexport const zecAddressToHex = (address: string) => `0x${decode58(address).toString(\"hex\")}`;\n// `0x${(new Address(address)).toBuffer().toString(\"hex\")}`;\n","export type DarknodeID = { id: string };\nexport const NewDarknodeID = (id: string) => ({ id });\n\nexport type MultiAddress = { multiAddress: string };\nexport const NewMultiAddress = (multiAddress: string) => ({ multiAddress });\n\nexport const multiAddressToID = (multiAddress: MultiAddress): DarknodeID => {\n    const split = multiAddress.multiAddress.split(\"/\");\n    return { id: split[split.length - 1] };\n};\n","import Web3 from \"web3\";\n\nimport { Record } from \"@renex/react-components\";\nimport { List } from \"immutable\";\nimport { Contract } from \"web3-eth-contract/types\";\nimport { AbiItem } from \"web3-utils\";\n\nimport { DarknodeID, NewDarknodeID } from \"../../types/types\";\n\nimport BridgedTokenABI from \"./BridgedTokenABI.json\";\nimport DarknodeRegistryABI from \"./DarknodeRegistryABI.json\";\n\nconst NULL = \"0x0000000000000000000000000000000000000000\";\n\nexport const zBTCAddress = \"0x2a8368d2a983a0aeae8da0ebc5b7c03a0ea66b37\";\nexport const zZECAddress = \"0xd67256552f93b39ac30083b4b679718a061feae6\";\n\nexport class Pod extends Record({\n    id: \"\",\n    darknodes: List<string>(),\n}) { }\n\nexport const darknodeRegistry = (web3: Web3, address: string): Contract => {\n    return new web3.eth.Contract(DarknodeRegistryABI as AbiItem[], address);\n};\n\nexport const bridgedToken = (web3: Web3, address: string): Contract => {\n    return new web3.eth.Contract(BridgedTokenABI as AbiItem[], address);\n};\n\n/*\n * Retrieve all the darknodes registered in the current epoch.\n * The getDarknodes() function will always return an array of {count} with empty\n * values being the NULL address. These addresses must be filtered out.\n * When the {start} value is not the NULL address, it is always returned as the\n * first entry so it should not be re-added to the list of all darknodes.\n *\n * THROWS if there are no darknodes in the registry contract.\n */\nexport const getAllDarknodeIDs = async (darknodeRegistryContract: Contract): Promise<DarknodeID[]> => {\n    const batchSize = 50;\n\n    const allDarknodes = [];\n    let lastDarknode = NULL;\n    do {\n        const darknodes: string[] = await darknodeRegistryContract.methods.getDarknodes(lastDarknode, `0x${(batchSize).toString(16)}`).call();\n        allDarknodes.push(...darknodes.filter(addr => addr !== NULL && addr !== lastDarknode));\n        if (darknodes.length === 0) {\n            throw new Error(\"No darknodes in the darknode registry.\");\n        }\n        [lastDarknode] = darknodes.slice(-1);\n    } while (lastDarknode !== NULL);\n\n    return allDarknodes.map(NewDarknodeID);\n};\n\n// export const mintToken = (bridgedToken: Contract, to: string, amount: number, hash: string, signature: string) => {\n//     let signaturePrefix = 0;\n//     const await bridgedToken.methods.verifySig(to, amount, hash, signature);\n\n// }\n\n// /*\n//  * Calculate pod arrangement based on current epoch\n//  */\n// export const getAllPods = async (darknodeRegistryContract: Contract): Promise<List<Pod>> => {\n//     const darknodes = await getAllDarknodes(darknodeRegistryContract);\n//     const podSizeReturnValue = await darknodeRegistryContract.methods.minimumPodSize().call();\n//     const minimumPodSize = new BN(podSizeReturnValue.toString()).toNumber();\n//     console.log(`Using minimum pod size ${minimumPodSize}`);\n//     const epoch: [string, string] = await darknodeRegistryContract.methods.currentEpoch().call();\n\n//     if (!darknodes.length) {\n//         return Promise.reject(new Error(\"no darknodes in contract\"));\n//     }\n\n//     if (minimumPodSize === 0) {\n//         return Promise.reject(new Error(\"invalid minimum pod size (0)\"));\n//     }\n\n//     console.log(`epoch[0]: ${epoch[0]} (${epoch[0].toString()})`);\n//     const epochVal = new BN(epoch[0].toString());\n//     const numberOfDarknodes = new BN(darknodes.length);\n//     let x = epochVal.mod(numberOfDarknodes);\n//     let positionInOcean = List();\n//     for (let i = 0; i < darknodes.length; i++) {\n//         positionInOcean = positionInOcean.set(i, -1);\n//     }\n\n//     console.log(`Calculating pods`);\n\n//     let pods = List<Pod>();\n//     // FIXME: (setting to 1 if 0)\n//     const numberOfPods = Math.floor(darknodes.length / minimumPodSize) || 1;\n//     for (let i = 0; i < numberOfPods; i++) {\n//         pods = pods.push(new Pod());\n//     }\n\n//     for (let i = 0; i < numberOfPods * minimumPodSize; i++) {\n//         while (positionInOcean.get(x.toNumber()) !== -1) {\n//             x = x.add(new BN(1));\n//             x = x.mod(numberOfDarknodes);\n//         }\n\n//         positionInOcean = positionInOcean.set(x.toNumber(), i);\n//         const podIndex = i % numberOfPods;\n\n//         const pod = new Pod({\n//             darknodes: pods.get(podIndex, new Pod()).darknodes.push(darknodes[x.toNumber()])\n//         });\n//         pods = pods.set(podIndex, pod);\n\n//         x = x.add(epochVal);\n//         x = x.mod(numberOfDarknodes);\n//     }\n\n//     for (let i = 0; i < pods.size; i++) {\n//         let hashData = List<Buffer>();\n//         for (const darknode of pods.get(i, new Pod()).darknodes.toArray()) {\n//             hashData = hashData.push(Buffer.from(darknode.substring(2), \"hex\"));\n//         }\n\n//         const id = new EncodedData(keccak256(`0x${Buffer.concat(hashData.toArray()).toString(\"hex\")}`), Encodings.HEX);\n//         const pod = new Pod({\n//             id: id.toBase64(),\n//             darknodes: pods.get(i, new Pod()).darknodes\n//         });\n\n//         // console.log(pod.id, JSON.stringify(pod.darknodes.map((node: string) =>\n//         //     new EncodedData(\"0x1B20\" + node.slice(2), Encodings.HEX).toBase58()\n//         // ).toArray()));\n\n//         pods = pods.set(i, pod);\n//     }\n\n//     return pods;\n// };\n\n// // export const getPods = async (\n// //     darknodeRegistryContract: Contract,\n// //     marketID: string,\n// // ): Promise<List<Pod>> => {\n// //     // tslint:disable-next-line: no-unnecessary-local-variable\n// //     const allPods = await getAllPods(darknodeRegistryContract);\n// //     // return allPods.filter((pod: Pod) => podsForPair.includes(pod.id));\n// //     return allPods;\n// // };\n","import { Currency, Record } from \"@renex/react-components\";\nimport { List, Map as ImmutableMap, OrderedMap } from \"immutable\";\n\nimport { BitcoinUTXO } from \"../../lib/blockchain/btc/btc\";\nimport { ZcashUTXO } from \"../../lib/blockchain/btc/zec\";\nimport { Currency as XCSCurrency, UTXO } from \"../../lib/blockchain/depositAddresses\";\nimport { bootstrapNodes, WarpGateGroup } from \"../../lib/darknode/darknodeGroup\";\nimport { _captureBackgroundException_, _captureInteractionException_ } from \"../../lib/util/errors\";\nimport { validateType } from \"../../lib/util/persist\";\n\ninterface Serializable<T> {\n    serialize(): string;\n    deserialize(str: string): T;\n}\n\nexport interface ApplicationData {\n    general: GeneralData;\n    marketPrices: MarketPriceData;\n}\n\nexport enum UITheme {\n    Light = \"theme-light\", // light theme's CSS class\n    Dark = \"theme-dark\", // dark theme's CSS class\n}\n\nexport enum EventType {\n    Deposit = \"deposit\",\n    Mint = \"mint\",\n    Burn = \"burn\",\n}\n\nexport class Deposit extends Record({\n    id: \"\",\n    isXCSEvent: true,\n    type: EventType.Deposit,\n    // tslint:disable-next-line: no-object-literal-type-assertion\n    utxo: List<BitcoinUTXO | ZcashUTXO>(),\n    currency: XCSCurrency.BTC,\n}) { }\n\nexport class Mint extends Record({\n    id: \"\",\n    isXCSEvent: true,\n    type: EventType.Mint,\n    utxos: List<UTXO>(),\n    mintTransaction: undefined as string | undefined,\n    messageID: \"\",\n    messageIDs: List<string>(),\n}) { }\n\nexport class Burn extends Record({\n    id: \"\",\n    isXCSEvent: true,\n    type: EventType.Burn,\n    currency: XCSCurrency.BTC,\n    amount: \"0\",\n    to: \"\",\n    messageID: \"\",\n    burnTransaction: undefined as string | undefined,\n}) { }\n\nexport type XCSEvent = Deposit | Mint | Burn;\n\nconst GeneralDataInner = {\n    ethereumAddress: \"0x5Ea5F67cC958023F2da2ea92231d358F2a3BbA47\" as string | undefined,\n\n    allEvents: ImmutableMap<string, OrderedMap<string, XCSEvent>>(),\n\n    darknodeGroup: new WarpGateGroup(bootstrapNodes),\n\n    // UI\n    advanced: false,\n    theme: UITheme.Light,\n    advancedTheme: UITheme.Dark,\n\n    // address: null as string | null,\n    url: null as string | null,\n    quoteCurrency: Currency.USD,\n};\n\nconst syncedGeneralData = new Map<keyof typeof GeneralDataInner, string>()\n    .set(\"ethereumAddress\", \"string\")\n    .set(\"advanced\", \"boolean\")\n    .set(\"theme\", \"string\")\n    .set(\"advancedTheme\", \"string\")\n    .set(\"allEvents\", \"OrderedMap<string, object>\")\n    .set(\"quoteCurrency\", \"string\");\nexport class GeneralData extends Record(GeneralDataInner) implements Serializable<GeneralData> {\n\n    public serialize(): string {\n        const obj = {};\n        for (const key of Array.from(syncedGeneralData.keys())) {\n            obj[key] = this.get(key);\n        }\n        return JSON.stringify(obj);\n    }\n\n    public deserialize(str: string): GeneralData {\n        // tslint:disable-next-line:no-this-assignment\n        let next = this;\n        try {\n            const data = JSON.parse(str);\n            for (const key of Array.from(syncedGeneralData.keys())) {\n                try {\n                    const expectedType = syncedGeneralData.get(key);\n                    if (key === \"allEvents\") {\n                        const allEvents = data[key];\n                        if (!allEvents) {\n                            continue;\n                        }\n                        let nextAllEvents = ImmutableMap<string, OrderedMap<string, XCSEvent>>();\n                        for (const address of Object.keys(allEvents)) {\n                            const events = allEvents[address];\n                            if (!events) {\n                                continue;\n                            }\n                            let nextEvents = OrderedMap<string, XCSEvent>();\n                            for (const childKey of Object.keys(events)) {\n                                const child = events[childKey];\n                                let event;\n                                if (child.type === EventType.Deposit) {\n                                    event = new Deposit({ ...child, utxo: List(child.utxo) });\n                                } else if (child.type === EventType.Burn) {\n                                    event = new Burn(child);\n                                } else if (child.type === EventType.Mint) {\n                                    event = new Mint({ ...child, utxos: List(child.utxos) });\n                                } else {\n                                    throw new Error(\"Unknown XCSEvent type\");\n                                }\n                                nextEvents = nextEvents.set(event.id, event);\n                            }\n                            nextAllEvents = nextAllEvents.set(address, nextEvents);\n                        }\n                        next = next.set(key, nextAllEvents);\n                    } else if (expectedType) {\n                        next = next.set(\n                            key,\n                            // tslint:disable-next-line: no-any\n                            validateType(expectedType, data[key]) as any\n                        );\n                    }\n                } catch (error) {\n                    _captureInteractionException_(error, { description: \"Error in GeneralData.deserialize\", shownToUser: \"No\" });\n                }\n            }\n        } catch (error) {\n            _captureBackgroundException_(error, {\n                description: \"cannot deserialize local storage\",\n            });\n            // TODO: Remove me!!!\n            alert(\"Check console!\");\n        }\n        return next;\n    }\n}\n\nexport interface MarketPrice {\n    price: number;\n    percentChange: number;\n}\n\nexport const UnknownMarketPrice: MarketPrice = {\n    price: 0,\n    percentChange: 0,\n};\n\nexport type TokenPrices = ImmutableMap<string, ImmutableMap<Currency, number>>;\n\nexport class MarketPriceData extends Record({\n    updating: false,\n    marketPrices: OrderedMap<string, MarketPrice>(),\n    tokenPrices: null as TokenPrices | null,\n}) { }\n","import axios, { AxiosResponse } from \"axios\";\n\nimport { MultiAddress } from \"../types/types\";\nimport {\n    AddressesRequest,\n    AddressesResponse,\n    EpochResponse,\n    HealthResponse,\n    NumPeersResponse,\n    PeersResponse,\n    ReceiveMessageRequest,\n    ReceiveMessageResponse,\n    SendMessageRequest,\n    SendMessageResponse,\n} from \"./types\";\n\nexport class Darknode {\n    public multiAddress: MultiAddress;\n    private readonly url: string;\n\n    constructor(multiAddress: MultiAddress) {\n        this.multiAddress = multiAddress;\n        if (multiAddress.multiAddress.charAt(0) === \"/\") {\n            try {\n                const [_, _ip4, ip, _tcp, port, _ren, _id] = multiAddress.multiAddress.split(\"/\");\n                const fixedPort = port === \"18514\" ? \"18515\" : port;\n                // tslint:disable-next-line: no-http-string\n                this.url = `http://${ip}:${fixedPort}`;\n            } catch (error) {\n                throw new Error(`Malformatted multiAddress: ${multiAddress}`);\n            }\n        } else {\n            this.url = multiAddress.multiAddress;\n        }\n    }\n\n    public async getHealth(): Promise<HealthResponse> {\n        let resp;\n        try {\n            resp = await axios.post(`${this.url}`, this.generatePayload(\"ren_healthCheck\"));\n            if (resp.status !== 200) {\n                throw this.responseError(\"Unexpected status code returned by Darknode\", resp);\n            }\n        } catch (error) {\n            if (error.response) {\n                throw new Error(\n                    `Darknode returned status ${error.response.status} with reason: ${error.response.data}`,\n                );\n            } else {\n                throw error;\n            }\n        }\n        return resp.data as HealthResponse;\n    }\n\n    public async getPeers(): Promise<PeersResponse> {\n        let resp;\n        try {\n            resp = await axios.post(`${this.url}`, this.generatePayload(\"ren_queryPeers\"));\n            if (resp.status !== 200) {\n                throw this.responseError(\"Unexpected status code returned by Darknode\", resp);\n            }\n        } catch (error) {\n            if (error.response) {\n                throw new Error(\n                    `Darknode returned status ${error.response.status} with reason: ${error.response.data}`,\n                );\n            } else {\n                throw error;\n            }\n        }\n        return resp.data as PeersResponse;\n    }\n\n    public async getNumberOfPeers(): Promise<NumPeersResponse> {\n        let resp;\n        try {\n            resp = await axios.post(`${this.url}`, this.generatePayload(\"ren_queryNumPeers\"));\n            if (resp.status !== 200) {\n                throw this.responseError(\"Unexpected status code returned by Darknode\", resp);\n            }\n        } catch (error) {\n            if (error.response) {\n                throw new Error(\n                    `Darknode returned status ${error.response.status} with reason: ${error.response.data}`,\n                );\n            } else {\n                throw error;\n            }\n        }\n        return resp.data as NumPeersResponse;\n    }\n\n    public async getEpoch(): Promise<EpochResponse> {\n        let resp;\n        try {\n            resp = await axios.post(`${this.url}`, this.generatePayload(\"ren_queryEpoch\"));\n            if (resp.status !== 200) {\n                throw this.responseError(\"Unexpected status code returned by Darknode\", resp);\n            }\n        } catch (error) {\n            if (error.response) {\n                throw new Error(\n                    `Darknode returned status ${error.response.status} with reason: ${error.response.data}`,\n                );\n            } else {\n                throw error;\n            }\n        }\n        return resp.data as EpochResponse;\n    }\n\n    public async getAddresses(request: AddressesRequest): Promise<AddressesResponse> {\n        let resp;\n        try {\n            resp = await axios.post(`${this.url}`, this.generatePayload(\"ren_queryAddresses\", request));\n            if (resp.status !== 200) {\n                throw this.responseError(\"Unexpected status code returned by Darknode\", resp);\n            }\n        } catch (error) {\n            if (error.response) {\n                throw new Error(\n                    `Darknode returned status ${error.response.status} with reason: ${error.response.data}`,\n                );\n            } else {\n                throw error;\n            }\n        }\n        return resp.data as AddressesResponse;\n    }\n\n    public async sendMessage(request: SendMessageRequest): Promise<SendMessageResponse> {\n        let resp;\n        try {\n            resp = await axios.post(`${this.url}`, this.generatePayload(\"ren_sendMessage\", request));\n            if (resp.status !== 200) {\n                throw this.responseError(\"Unexpected status code returned by Darknode\", resp);\n            }\n        } catch (error) {\n            if (error.response) {\n                throw new Error(\n                    `Darknode returned status ${error.response.status} with reason: ${error.response.data}`,\n                );\n            } else {\n                throw error;\n            }\n        }\n        return resp.data as SendMessageResponse;\n    }\n\n    public async receiveMessage(request: ReceiveMessageRequest): Promise<ReceiveMessageResponse> {\n        let resp;\n        try {\n            resp = await axios.post(`${this.url}`, this.generatePayload(\"ren_receiveMessage\", request));\n            if (resp.status !== 200) {\n                throw this.responseError(\"Unexpected status code returned by Darknode\", resp);\n            }\n        } catch (error) {\n            if (error.response) {\n                throw new Error(\n                    `Darknode returned status ${error.response.status} with reason: ${error.response.data}`,\n                );\n            } else {\n                throw error;\n            }\n        }\n        return resp.data as ReceiveMessageResponse;\n    }\n\n    private generatePayload(method: string, params?: unknown) {\n        return {\n            id: 1,\n            jsonrpc: \"2.0\",\n            method,\n            params,\n            version: \"0.0\",\n        };\n    }\n\n    private responseError(msg: string, response: AxiosResponse): ResponseError {\n        const error = new Error(msg) as ResponseError;\n        error.response = response;\n        return error;\n    }\n}\n\ninterface ResponseError extends Error {\n    response: AxiosResponse;\n}\n","import { List, Map } from \"immutable\";\n\nimport { Mint } from \"../../store/types/general\";\nimport { Currency, UTXO } from \"../blockchain/depositAddresses\";\nimport { MultiAddress, multiAddressToID, NewMultiAddress } from \"../types/types\";\nimport { Darknode } from \"./darknode\";\nimport {\n    HealthResponse,\n    ReceiveMessageRequest,\n    ReceiveMessageResponse,\n    RenVMReceiveMessageResponse,\n    SendMessageRequest,\n    SendMessageResponse,\n} from \"./types\";\n\nconst bootStrapNode0 = NewMultiAddress(\"/ip4/18.234.163.143/tcp/18515/8MJpA1rXYMPTeJoYjsFBHJcuYBe7zP\");\nconst bootStrapNode1 = NewMultiAddress(\"/ip4/34.213.51.170/tcp/18515/8MH9zGoDLJKiXrhqWLXTzHp1idfxte\");\nconst bootStrapNode2 = NewMultiAddress(\"/ip4/34.205.143.11/tcp/18515/8MGJGnGLdYF6x5YuhkAmgfj6kknJBb\");\nconst bootStrapNode3 = NewMultiAddress(\"/ip4/99.79.61.64/tcp/18515/8MJppC57CkHzDQVAAPTotQGGyzqJ2r\");\nconst bootStrapNode4 = NewMultiAddress(\"/ip4/35.154.42.26/tcp/18515/8MHdUqYXcEhisZipM3hXPsFxHfM3VH\");\nconst bootStrapNode5 = NewMultiAddress(\"/ip4/34.220.215.156/tcp/18515/8MJd7zB9GXsvpm2cSECFP4Bof5G3i8\");\nconst bootStrapNode6 = NewMultiAddress(\"/ip4/18.196.15.243/tcp/18515/8MJN1hHhdcJwzDoj35zRLL3zE3yk45\");\nconst bootStrapNode7 = NewMultiAddress(\"/ip4/18.231.179.161/tcp/18515/8MKYusXyZAGVRn76vTmnK9FWmmPbJj\");\n\nexport const bootstrapNodes = [\n    bootStrapNode0,\n    bootStrapNode1,\n    bootStrapNode2,\n    bootStrapNode3,\n    bootStrapNode4,\n    bootStrapNode5,\n    bootStrapNode6,\n    bootStrapNode7,\n];\n\nconst promiseAll = async <a>(list: List<Promise<a>>, defaultValue: a): Promise<List<a>> => {\n    let newList = List<a>();\n    for (const entryP of list.toArray()) {\n        try {\n            newList = newList.push(await entryP);\n        } catch (error) {\n            newList = newList.push(defaultValue);\n        }\n    }\n    return newList;\n};\n\n/**\n * DarknodeGroup allows sending messages to multiple darknodes\n */\nexport class DarknodeGroup {\n    public bootstraps = List<MultiAddress>();\n    public darknodes = Map<string, Darknode>();\n\n    constructor(multiAddresses: MultiAddress[] | MultiAddress) {\n        if (Array.isArray(multiAddresses)) {\n            this.bootstraps = this.bootstraps.concat(multiAddresses);\n            this.addDarknodes(multiAddresses);\n        } else {\n            this.addDarknodes([multiAddresses]);\n        }\n        this.bootstraps = this.bootstraps.concat(multiAddresses);\n    }\n\n    public bootstrap = async (): Promise<this> => {\n        let success = false;\n        let lastError;\n        for (const multiAddress of this.bootstraps.toArray()) {\n            try {\n                const result: Darknode | undefined = this.darknodes.get(multiAddressToID(multiAddress).id);\n                if (!result) {\n                    throw new Error(\"No darknode provided\");\n                }\n                const peers = await result.getPeers();\n                if (peers.result) {\n                    this.addDarknodes(peers.result.peers.map(NewMultiAddress));\n                    success = true;\n                } else if (peers.error) {\n                    throw peers.error;\n                }\n            } catch (error) {\n                lastError = error;\n            }\n        }\n        if (!success) {\n            throw lastError;\n        }\n        return this;\n    }\n\n    public getHealth = async (): Promise<List<HealthResponse | null>> => {\n        return promiseAll<HealthResponse | null>(\n            this.darknodes.valueSeq().map(darknode => darknode.getHealth()).toList(),\n            null,\n        );\n    }\n\n    public sendMessage = async (request: SendMessageRequest): Promise<List<{ result: SendMessageResponse, multiAddress: MultiAddress } | null>> => {\n        return promiseAll<{ result: SendMessageResponse, multiAddress: MultiAddress } | null>(\n            this.darknodes.valueSeq().map(async (darknode) => ({\n                multiAddress: darknode.multiAddress,\n                result: await darknode.sendMessage(request),\n            })).toList(),\n            null,\n        );\n    }\n\n    public receiveMessage = async (request: ReceiveMessageRequest): Promise<List<ReceiveMessageResponse | null>> => {\n        return promiseAll<ReceiveMessageResponse | null>(\n            this.darknodes.valueSeq().map(darknode => darknode.receiveMessage(request)).toList(),\n            null,\n        );\n    }\n\n    private readonly addDarknodes = (multiAddresses: MultiAddress[]): this => {\n        for (const multiAddress of multiAddresses) {\n            this.darknodes = this.darknodes.set(multiAddressToID(multiAddress).id, new Darknode(multiAddress));\n        }\n        return this;\n    }\n}\n\nexport class WarpGateGroup extends DarknodeGroup {\n    constructor(multiAddresses: MultiAddress[] | MultiAddress) {\n        super(multiAddresses);\n        // this.getHealth();\n    }\n\n    public submitDeposits = async (address: string, utxo: UTXO): Promise<List<{ messageID: string, multiAddress: MultiAddress }>> => {\n        // TODO: If one fails, still return the other.\n\n        const method = utxo.currency === Currency.BTC ? \"MintZBTC\"\n            : utxo.currency === Currency.ZEC ? \"MintZZEC\" : undefined;\n\n        if (!method) {\n            throw new Error(`Minting ${utxo.currency} not supported`);\n        }\n\n        const results = await this.sendMessage({\n            nonce: 0,\n            to: \"WarpGate\",\n            signature: \"\",\n            payload: {\n                method,\n                args: [\n                    {\n                        value: address.slice(0, 2) === \"0x\" ? address.slice(2) : address,\n                    }\n                ],\n            },\n        });\n\n        if (results.filter(x => x !== null).size < 1) {\n            throw new Error(\"Unable to send message to enough darknodes.\");\n        }\n\n        return results.filter(x => x !== null).map((result) => ({\n            // tslint:disable: no-non-null-assertion no-unnecessary-type-assertion\n            multiAddress: result!.multiAddress,\n            messageID: result!.result.result!.messageID,\n            // tslint:enable: no-non-null-assertion no-unnecessary-type-assertion\n        })).toList();\n    }\n\n    public checkForResponse = async (mintEvent: Mint): Promise<string> => {\n        for (const node of this.darknodes.valueSeq().toArray()) {\n            if (node) {\n                try {\n                    const signature = await node.receiveMessage({ messageID: mintEvent.messageID }) as RenVMReceiveMessageResponse;\n                    // Error:\n                    // { \"jsonrpc\": \"2.0\", \"version\": \"0.1\", \"error\": { \"code\": -32603, \"message\": \"result not available\", \"data\": null }, \"id\": null }\n                    // Success:\n                    // (TODO)\n                    if (signature.result) {\n                        return signature.result.result[0].value;\n                    } else if (signature.error) {\n                        throw signature.error;\n                    }\n                } catch (error) {\n                    console.error(error);\n                }\n            }\n        }\n        throw new Error(`Signature not available`);\n    }\n}\n","import { List, Map, Set } from \"immutable\";\n\n/**\n * TYPE can be (recursively defined):\n *\n * 1) result of `typeof` (\"object\", \"number\", \"string\")\n * 2) TYPE[]\n * 3) List<TYPE>\n * 4) Set<TYPE>\n */\ntype TYPE = string;\n\nconst isArrayType = (type: TYPE) => type.slice(-2) === \"[]\";\nconst isListType = (type: TYPE) => type.slice(0, 5) === \"List<\" && type.slice(-1) === \">\";\nconst isSetType = (type: TYPE) => type.slice(0, 4) === \"Set<\" && type.slice(-1) === \">\";\nconst isMapType = (type: TYPE) => type.slice(0, 12) === \"Map<string, \" && type.slice(-1) === \">\";\n\n/**\n * validateType takes two parameters - a target type and a value, and checks\n * that the value can be converted to that type, returning the converted value\n * or throwing an error. Only List/Set conversions are supported.\n *\n * It is used for for deserializing JSON to Immutable types.\n *\n * Example:\n *      validateType(\"string\", \"abc\") => \"abc\"\n *      validateType(\"number\", 1) => 1\n *      validateType(\"string\", 1) => Err\n *      validateType(\"List<string>\", [ \"abc\" ]) => List [ \"abc\" ]\n *      validateType(\"Set<string>\", [ \"abc\" ]) => Set { \"abc\" }\n *\n * @param type The expected type as either X or X[] (etc.) where X is the output\n * of `typeof`\n * @param object The value to check the type of\n */\nexport const validateType = (type: TYPE, object: unknown): unknown => {\n    if (isArrayType(type)) {\n        const subtype = type.slice(0, -2);\n        return (object as unknown[]).map((e) => validateType(subtype, e));\n    } else if (isListType(type)) {\n        const subtype = type.slice(5, -1);\n        return List((object as unknown[]).map((e) => validateType(subtype, e)));\n    } else if (isSetType(type)) {\n        const subtype = type.slice(4, -1);\n        return Set((object as unknown[]).map((e) => validateType(subtype, e)));\n    } else if (isMapType(type)) {\n        const subtype = type.slice(12, -1);\n        return Map(object as { [key: string]: {}; }).map(e => validateType(subtype, e));\n    }\n    if (typeof object === type) {\n        return object;\n    }\n    throw new Error(`Unexpected value of type ${typeof object} (expected ${type})`);\n};\n","import * as React from \"react\";\n\nimport { TokenIcon } from \"@renex/react-components\";\nimport { Currency, DepositAddresses } from \"../../lib/blockchain/depositAddresses\";\n\ninterface Props {\n    currency: Currency;\n    index: number;\n    depositAddresses: DepositAddresses;\n    burn: (currency: Currency, amount: string) => Promise<void>;\n}\n\nexport const ShowCurrency = ({ currency, index, depositAddresses, burn }: Props): JSX.Element => {\n    const [expanded, setExpanded] = React.useState(false);\n    const [error, setError] = React.useState<string | undefined>(undefined);\n    // tslint:disable-next-line: prefer-const\n    let [balance, setBalance] = React.useState<string | undefined>(undefined);\n    const ref = React.useRef(null as HTMLDivElement | null);\n\n    const clickAway: EventListener = (event) => {\n        if ((ref.current && !ref.current.contains(event.target as Node))) {\n            setExpanded(false);\n            setError(undefined);\n            document.removeEventListener(\"mousedown\", clickAway, false);\n        }\n    };\n\n    const showDeposit = async (e: React.MouseEvent<HTMLDivElement>) => {\n        if (!expanded) {\n            setExpanded(true);\n            document.addEventListener(\"mousedown\", clickAway);\n            const parent = e.currentTarget.parentElement;\n            if (parent) {\n                parent.scrollTo({ left: (150 + 20) * index - 10 });\n            }\n            setTimeout(() => {\n                if (parent) {\n                    parent.scrollTo({ left: (150 + 20) * index - 10 });\n                }\n            }, 300);\n            balance = await depositAddresses.getBalance(currency);\n            setBalance(balance);\n        }\n    };\n\n    const handleBurn = async (e: React.MouseEvent<HTMLAnchorElement>) => {\n        e.preventDefault();\n        await burn(currency, balance || \"0\");\n    };\n\n    return <div ref={ref} className={`currency ${currency} ${expanded ? \"active\" : \"\"}`} data-id={currency} data-index={index} onMouseDown={showDeposit} role=\"button\" key={currency}>\n        <TokenIcon token={currency.toUpperCase()} />\n        {expanded ?\n            <div className={`deposit-address ${currency}`}>\n                <div>\n                    <span>Balance: {balance} {currency.toUpperCase()}{balance && balance !== \"0\" ? <>{\" \"}(<a role=\"button\" href=\"null\" onClick={handleBurn}>Burn</a>)</> : null}</span><br />\n                    {error ? <><span className=\"red\">{error}</span><br /></> : null}\n                    <span>Deposit to <b>{depositAddresses.depositAddresses.get(currency)}</b></span>\n                </div>\n            </div>\n            : null}\n    </div>;\n};\n","import * as React from \"react\";\n\nimport { Currency, CurrencyList, DepositAddresses } from \"../../lib/blockchain/depositAddresses\";\nimport { ShowCurrency } from \"./ShowCurrency\";\n\nexport const CurrenciesBlock = ({ burn, depositAddresses }: { burn: (currency: Currency, amount: string) => Promise<void>, depositAddresses: DepositAddresses }) => {\n    return <div className=\"block\">\n        <h3>Currencies</h3>\n        <div className=\"currencies\">\n            {CurrencyList.map((currency, index) => {\n                return <ShowCurrency burn={burn} key={currency} currency={currency} index={index} depositAddresses={depositAddresses} />;\n            })}\n        </div>\n    </div >;\n};\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"style\", {\n  type: \"text/css\"\n}, \"\\n\\t.st0{fill:#161616;stroke:#161616;}\\n\\t.st1{fill:#E4761B;stroke:#E4761B;stroke-linecap:round;stroke-linejoin:round;}\\n\\t.st2{fill:#763D16;stroke:#763D16;stroke-linecap:round;stroke-linejoin:round;}\\n\\t.st3{fill:#F6851B;stroke:#F6851B;stroke-linecap:round;stroke-linejoin:round;}\\n\\t.st4{fill:#E2761B;stroke:#E2761B;stroke-linecap:round;stroke-linejoin:round;}\\n\\t.st5{fill:#CD6116;stroke:#CD6116;stroke-linecap:round;stroke-linejoin:round;}\\n\\t.st6{fill:#C0AD9E;stroke:#C0AD9E;stroke-linecap:round;stroke-linejoin:round;}\\n\\t.st7{fill:#D7C1B3;stroke:#D7C1B3;stroke-linecap:round;stroke-linejoin:round;}\\n\\t.st8{fill:#E4751F;stroke:#E4751F;stroke-linecap:round;stroke-linejoin:round;}\\n\\t.st9{fill:#233447;stroke:#233447;stroke-linecap:round;stroke-linejoin:round;}\\n\\t.st10{fill:#161616;stroke:#161616;stroke-linecap:round;stroke-linejoin:round;}\\n\");\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"polygon\", {\n  className: \"st0\",\n  points: \"277.3,145.6 272.3,142 280.3,134.7 274.2,129.9 282.2,123.8 276.9,119.8 285.3,79 272.7,41.1  191.6,71.4 124.1,71.4 43,41.1 30.4,79 38.9,119.8 33.5,123.8 41.5,129.9 35.4,134.7 43.4,142 38.4,145.6 49.9,159.1 32.5,213.3  48.6,268.6 105.3,253 116.3,262 138.7,277.5 177,277.5 199.4,262 210.4,253 267.1,268.6 283.3,213.3 265.8,159.1 \"\n});\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"g\", null, React.createElement(\"polygon\", {\n  className: \"st1\",\n  points: \"105.3,253 48.6,268.6 32.5,213.3  \"\n}), React.createElement(\"polygon\", {\n  className: \"st1\",\n  points: \"283.3,213.3 267.1,268.6 210.4,253  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"265.8,159.1 213.5,143.8 231.8,139  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"49.9,159.1 84,139 102.2,143.8  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"43.4,142 41.5,129.9 84,139  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"272.3,142 231.8,139 274.2,129.9  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"272.3,142 265.8,159.1 231.8,139  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"43.4,142 84,139 49.9,159.1  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"231.8,139 276.9,119.8 274.2,129.9  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"84,139 41.5,129.9 38.9,119.8  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"124.1,71.4 191.6,71.4 176.5,112.5  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"176.5,112.5 139.2,112.5 124.1,71.4  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"276.9,119.8 231.8,139 231,87.4  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"102.2,143.8 84,139 84.7,87.4  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"84.7,87.4 84,139 38.9,119.8  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"231,87.4 231.8,139 213.5,143.8  \"\n}), React.createElement(\"polygon\", {\n  className: \"st1\",\n  points: \"139.2,112.5 43,41.1 124.1,71.4  \"\n}), React.createElement(\"polygon\", {\n  className: \"st4\",\n  points: \"272.7,41.1 176.5,112.5 191.6,71.4  \"\n}), React.createElement(\"polygon\", {\n  className: \"st1\",\n  points: \"210.4,253 236.9,213.3 283.3,213.3  \"\n}), React.createElement(\"polygon\", {\n  className: \"st1\",\n  points: \"32.5,213.3 78.9,213.3 105.3,253  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"229.3,167.7 283.3,213.3 236.9,213.3  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"86.4,167.7 32.5,213.3 49.9,159.1  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"78.9,213.3 32.5,213.3 86.4,167.7  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"229.3,167.7 265.8,159.1 283.3,213.3  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"84.7,87.4 139.2,112.5 102.2,143.8  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"213.5,143.8 176.5,112.5 231,87.4  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"265.8,159.1 272.3,142 277.3,145.6  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"49.9,159.1 38.4,145.6 43.4,142  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"272.3,142 274.2,129.9 280.3,134.7  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"43.4,142 35.4,134.7 41.5,129.9  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"33.5,123.8 38.9,119.8 41.5,129.9  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"282.2,123.8 274.2,129.9 276.9,119.8  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"49.9,159.1 102.2,143.8 86.4,167.7  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"265.8,159.1 229.3,167.7 213.5,143.8  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"38.9,119.8 30.4,79 84.7,87.4  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"231,87.4 285.3,79 276.9,119.8  \"\n}), React.createElement(\"polygon\", {\n  className: \"st1\",\n  points: \"102.2,143.8 139.2,112.5 142.6,170.2  \"\n}), React.createElement(\"polygon\", {\n  className: \"st1\",\n  points: \"213.5,143.8 229.3,167.7 173.1,170.2  \"\n}), React.createElement(\"polygon\", {\n  className: \"st1\",\n  points: \"173.1,170.2 176.5,112.5 213.5,143.8  \"\n}), React.createElement(\"polygon\", {\n  className: \"st1\",\n  points: \"142.6,170.2 86.4,167.7 102.2,143.8  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"272.7,41.1 285.3,79 231,87.4  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"43,41.1 139.2,112.5 84.7,87.4  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"231,87.4 176.5,112.5 272.7,41.1  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"84.7,87.4 30.4,79 43,41.1  \"\n}), React.createElement(\"polygon\", {\n  className: \"st5\",\n  points: \"105.3,253 78.9,213.3 110,213.7  \"\n}), React.createElement(\"polygon\", {\n  className: \"st5\",\n  points: \"210.4,253 205.7,213.7 236.9,213.3  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"173.1,170.2 142.6,170.2 139.2,112.5  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"139.2,112.5 176.5,112.5 173.1,170.2  \"\n}), React.createElement(\"polygon\", {\n  className: \"st6\",\n  points: \"116.3,262 105.3,253 136.8,267.9  \"\n}), React.createElement(\"polygon\", {\n  className: \"st6\",\n  points: \"178.9,267.9 210.4,253 199.4,262  \"\n}), React.createElement(\"polygon\", {\n  className: \"st7\",\n  points: \"136.6,258.6 136.8,267.9 105.3,253  \"\n}), React.createElement(\"polygon\", {\n  className: \"st7\",\n  points: \"179.2,258.6 210.4,253 178.9,267.9  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"86.4,167.7 110,213.7 78.9,213.3  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"236.9,213.3 205.7,213.7 229.3,167.7  \"\n}), React.createElement(\"polygon\", {\n  className: \"st8\",\n  points: \"86.4,167.7 109.2,190.8 110,213.7  \"\n}), React.createElement(\"polygon\", {\n  className: \"st8\",\n  points: \"229.3,167.7 205.7,213.7 206.6,190.8  \"\n}), React.createElement(\"polygon\", {\n  className: \"st7\",\n  points: \"105.3,253 139.2,236.5 136.6,258.6  \"\n}), React.createElement(\"polygon\", {\n  className: \"st7\",\n  points: \"210.4,253 179.2,258.6 176.5,236.5  \"\n}), React.createElement(\"polygon\", {\n  className: \"st1\",\n  points: \"139.2,236.5 105.3,253 110,213.7  \"\n}), React.createElement(\"polygon\", {\n  className: \"st1\",\n  points: \"176.5,236.5 205.7,213.7 210.4,253  \"\n}), React.createElement(\"polygon\", {\n  className: \"st5\",\n  points: \"173.1,170.2 229.3,167.7 206.6,190.8  \"\n}), React.createElement(\"polygon\", {\n  className: \"st5\",\n  points: \"109.2,190.8 86.4,167.7 142.6,170.2  \"\n}), React.createElement(\"polygon\", {\n  className: \"st5\",\n  points: \"142.6,170.2 129.1,181.7 109.2,190.8  \"\n}), React.createElement(\"polygon\", {\n  className: \"st5\",\n  points: \"206.6,190.8 186.6,181.7 173.1,170.2  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"205.7,213.7 178.3,199.1 206.6,190.8  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"110,213.7 109.2,190.8 137.4,199.1  \"\n}), React.createElement(\"polygon\", {\n  className: \"st9\",\n  points: \"137.4,199.1 109.2,190.8 129.1,181.7  \"\n}), React.createElement(\"polygon\", {\n  className: \"st9\",\n  points: \"178.3,199.1 186.6,181.7 206.6,190.8  \"\n}), React.createElement(\"polygon\", {\n  className: \"st5\",\n  points: \"186.6,181.7 178.3,199.1 173.1,170.2  \"\n}), React.createElement(\"polygon\", {\n  className: \"st5\",\n  points: \"129.1,181.7 142.6,170.2 137.4,199.1  \"\n}), React.createElement(\"polygon\", {\n  className: \"st6\",\n  points: \"199.4,262 177,277.5 178.9,267.9  \"\n}), React.createElement(\"polygon\", {\n  className: \"st6\",\n  points: \"136.8,267.9 138.7,277.5 116.3,262  \"\n}), React.createElement(\"polygon\", {\n  className: \"st4\",\n  points: \"178.3,199.1 171.8,188.4 173.1,170.2  \"\n}), React.createElement(\"polygon\", {\n  className: \"st8\",\n  points: \"137.4,199.1 142.6,170.2 143.9,188.4  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"173.1,170.2 171.8,188.4 143.9,188.4  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"143.9,188.4 142.6,170.2 173.1,170.2  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"178.3,199.1 205.7,213.7 176.5,236.5  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"139.2,236.5 110,213.7 137.4,199.1  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"137.4,199.1 144,233.2 139.2,236.5  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"176.5,236.5 171.7,233.2 178.3,199.1  \"\n}), React.createElement(\"polygon\", {\n  className: \"st8\",\n  points: \"171.8,188.4 178.3,199.1 171.7,233.2  \"\n}), React.createElement(\"polygon\", {\n  className: \"st8\",\n  points: \"143.9,188.4 144,233.2 137.4,199.1  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"143.9,188.4 171.8,188.4 171.7,233.2  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"171.7,233.2 144,233.2 143.9,188.4  \"\n}), React.createElement(\"polygon\", {\n  className: \"st6\",\n  points: \"179.2,258.6 178.9,267.9 177,277.5  \"\n}), React.createElement(\"polygon\", {\n  className: \"st6\",\n  points: \"138.7,277.5 136.8,267.9 136.6,258.6  \"\n}), React.createElement(\"polygon\", {\n  className: \"st6\",\n  points: \"136.6,258.6 139,256.4 138.7,277.5  \"\n}), React.createElement(\"polygon\", {\n  className: \"st6\",\n  points: \"177,277.5 176.7,256.4 179.2,258.6  \"\n}), React.createElement(\"polygon\", {\n  className: \"st6\",\n  points: \"138.7,277.5 139,256.4 176.7,256.4  \"\n}), React.createElement(\"polygon\", {\n  className: \"st6\",\n  points: \"176.7,256.4 177,277.5 138.7,277.5  \"\n}), React.createElement(\"polygon\", {\n  className: \"st10\",\n  points: \"176.5,236.5 179.2,258.6 176.7,256.4  \"\n}), React.createElement(\"polygon\", {\n  className: \"st10\",\n  points: \"139,256.4 136.6,258.6 139.2,236.5  \"\n}), React.createElement(\"polygon\", {\n  className: \"st10\",\n  points: \"139.2,236.5 140.7,241.2 139,256.4  \"\n}), React.createElement(\"polygon\", {\n  className: \"st10\",\n  points: \"176.7,256.4 175,241.2 176.5,236.5  \"\n}), React.createElement(\"polygon\", {\n  className: \"st10\",\n  points: \"143.7,237.7 140.7,241.2 139.2,236.5  \"\n}), React.createElement(\"polygon\", {\n  className: \"st10\",\n  points: \"176.5,236.5 175,241.2 172,237.7  \"\n}), React.createElement(\"polygon\", {\n  className: \"st10\",\n  points: \"172,237.7 171.7,233.2 176.5,236.5  \"\n}), React.createElement(\"polygon\", {\n  className: \"st10\",\n  points: \"139.2,236.5 144,233.2 143.7,237.7  \"\n}), React.createElement(\"polygon\", {\n  className: \"st10\",\n  points: \"171.7,233.2 172,237.7 143.7,237.7  \"\n}), React.createElement(\"polygon\", {\n  className: \"st10\",\n  points: \"143.7,237.7 144,233.2 171.7,233.2  \"\n}), React.createElement(\"polygon\", {\n  className: \"st10\",\n  points: \"140.7,241.2 175,241.2 176.7,256.4  \"\n}), React.createElement(\"polygon\", {\n  className: \"st10\",\n  points: \"176.7,256.4 139,256.4 140.7,241.2  \"\n}), React.createElement(\"polygon\", {\n  className: \"st10\",\n  points: \"140.7,241.2 143.7,237.7 172,237.7  \"\n}), React.createElement(\"polygon\", {\n  className: \"st10\",\n  points: \"172,237.7 175,241.2 140.7,241.2  \"\n}));\n\nvar SvgMetamask = function SvgMetamask(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 318.6 318.6\",\n    style: {\n      enableBackground: \"new 0 0 318.6 318.6\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), _ref2, _ref3, _ref4);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgMetamask, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/metamask.035b2edd.svg\";\nexport { ForwardRef as ReactComponent };","import thunk from \"redux-thunk\";\n\nimport { Action, applyMiddleware, createStore, Middleware, Reducer } from \"redux\";\nimport { PersistConfig, persistReducer } from \"redux-persist\";\n\nimport { environment } from \"../lib/util/environmentVariables\";\nimport { rootReducer } from \"../store/reducers/rootReducer\";\nimport { persistConfig } from \"./persistConfig\";\n\nconst middlewares: Middleware[] = [\n    thunk,\n];\n\n// Log Redux actions (only in development)\nif (environment === \"local\") {\n    // middlewares.push(createLogger({ collapsed: true }));\n}\n\n// Workaround createStore not liking type of persistReducer\nconst typedPersistReducer = <S, A extends Action>(config: PersistConfig, reducer: Reducer<S, A>) => {\n    return persistReducer<S, A>(\n        config,\n        reducer\n    );\n};\n\nconst persistedReducer = typedPersistReducer(persistConfig, rootReducer);\n\nexport const configureStore = () => createStore(\n    persistedReducer,\n    applyMiddleware(...middlewares),\n);\n","import * as React from \"react\";\n\nimport { ReactComponent as MetaMask } from \"../../styles/images/metamask.svg\";\n\ninterface Props {\n    // tslint:disable-next-line: no-any\n    onGenerateAddress: () => void;\n    ethereumAddress: string | undefined;\n    onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n    getMetaMaskAddress: () => Promise<void>;\n}\n\nexport const ReceiveAddress = ({ onGenerateAddress, ethereumAddress, onChange, getMetaMaskAddress }: Props) => {\n    const ref = React.useRef(null as HTMLButtonElement | null);\n\n    const onGetMM = async () => {\n        if (ref.current) {\n            ref.current.focus();\n        }\n        await getMetaMaskAddress();\n    };\n\n    const onSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        onGenerateAddress();\n    };\n\n    return <div className=\"block\">\n        <form onSubmit={onSubmit} className=\"swap--eth--form\">\n            <div className=\"swap--eth--input\">\n                <input type=\"text\" value={ethereumAddress} onChange={onChange} placeholder=\"Enter Ethereum address for receiving\" />\n                <button type=\"button\" className=\"metamask-logo\" onClick={onGetMM}><MetaMask /></button>\n                <button ref={ref} type=\"submit\" className=\"button--white swap--eth--submit\" disabled={!ethereumAddress}>Go</button>\n            </div>\n        </form>\n    </div>;\n};\n","import * as React from \"react\";\n\nimport CircularProgressBar from \"react-circular-progressbar\";\n\nimport { Loading } from \"@renex/react-components\";\nimport { Map } from \"immutable\";\n\nimport { Currency, CurrencyDecimals } from \"../../lib/blockchain/depositAddresses\";\nimport { Burn, Deposit, EventType, Mint, XCSEvent } from \"../../store/types/general\";\n\nimport \"react-circular-progressbar/dist/styles.css\";\n\nconst showCircle = (percentage: number, color?: string) => {\n    return <CircularProgressBar\n        className=\"circle--progress\"\n        percentage={percentage}\n        strokeWidth={18}\n        styles={{\n            path: {\n                stroke: color || \"#006FE8\",\n                strokeLinecap: \"butt\",\n                // strokeOpacity: 0.6,\n            },\n            trail: {\n                stroke: color || \"#006FE8\",\n                strokeOpacity: 0.2,\n            },\n        }}\n    />;\n};\n\nexport interface Props {\n    event: XCSEvent;\n    redeeming: boolean;\n    checkingResponse: Map<string, boolean>;\n    oldestDeposit: boolean;\n\n    onRedeem: (deposit: Deposit) => void;\n    checkForResponse: (id: string) => Promise<void>;\n}\n\nexport const ShowUTXO = (props: Props) => {\n    if (props.event.type === EventType.Deposit) {\n        const event = props.event as Deposit;\n        const { oldestDeposit, redeeming, onRedeem } = props;\n        const onClick = () => {\n            onRedeem(event);\n        };\n        const utxo = event.utxo.first(undefined);\n        if (!utxo) {\n            return <div className=\"utxo\">Invalid deposit: {JSON.stringify(props.event, null, \"    \")}</div>;\n        }\n        const value = utxo.amount;\n        return <div className=\"utxo\">\n            {showCircle(33)}\n            <div className=\"utxo--right\">\n                <span>Deposited <b>{value / (10 ** CurrencyDecimals(event.currency))} {event.currency.toUpperCase()}</b></span>\n                <a rel=\"noreferrer\" target=\"_blank\" href={`https://live.blockcypher.com/btc-testnet/tx/${event.id}`}>\n                    <span className=\"utxo--txid\">{event.id}</span>\n                </a>\n            </div>\n            <div className=\"utxo--buttons\">\n                {oldestDeposit ? <button disabled={redeeming} className=\"button--blue\" onClick={onClick}>{redeeming ? <Loading alt={true} /> : <>Send to darknodes</>}</button> : null}\n            </div>\n        </div>;\n    } else if (props.event.type === EventType.Mint) {\n        const event = props.event as Mint;\n        const { checkingResponse, checkForResponse } = props;\n        // const first = renVMMessage.first(undefined);\n        const loading = checkingResponse.get(event.id);\n        let values = Map<Currency, number>();\n        event.utxos.map(utxo => {\n            const value = utxo.utxo.amount;\n            const previousValue = values.get(utxo.currency) || 0;\n            values = values.set(utxo.currency, previousValue + value);\n        });\n        const valuesString = values.map((value, currency) => {\n            return `${value / (10 ** CurrencyDecimals(currency))} ${currency.toUpperCase()}`;\n        }).join(\", \");\n        return <div className={`utxo ${event.mintTransaction ? \"done\" : \"\"}`}>\n            {showCircle(event.mintTransaction ? 100 : 66)}\n            <div className=\"utxo--right\">\n                <span>Deposited <b>{valuesString}</b></span>\n                <span className=\"utxo--txid\">{event.mintTransaction ? <>Redeemed ({event.mintTransaction}).</> : <>Sent to <b>{event.messageIDs.size} darknodes</b>. Awaiting response.</>}</span>\n                {/* <span>\n                                    {messageUtxos ? messageUtxos.map(utxo => <span key={utxo.txHash} className=\"utxo--txid\">{utxo.txHash.slice(0, 8)}...</span>).toArray() : null}\n                                </span> */}\n                {/* <span className=\"utxo--txid\">{first ? first.messageID : \"\"}</span> */}\n                {/* <span className=\"utxo--txid\">{time}</span> */}\n            </div>\n            {event.mintTransaction ?\n                <div className=\"utxo--buttons\">\n                    {/* tslint:disable-next-line: react-this-binding-issue jsx-no-lambda */}\n                    {/* <button className=\"button--blue\" onClick={() => { redeemOnEthereum(time).catch(console.error); }} disabled={loading}>{loading ? <Loading /> : <>Redeem on Ethereum</>}</button> */}\n                </div>\n                :\n                <>\n                    <div className=\"utxo--buttons\">\n                        {/* tslint:disable-next-line: react-this-binding-issue jsx-no-lambda */}\n                        <button className=\"button--white\" onClick={() => { checkForResponse(event.id).catch(console.error); }} disabled={loading}>{loading ? <Loading /> : <>Check for response</>}</button>\n                    </div>\n                </>\n            }\n        </div>;\n    } else if (props.event.type === EventType.Burn) {\n        const event = props.event as Burn;\n        return <div className={`utxo done`} >\n            {showCircle(100, \"#F16262\")}\n            <div className=\"utxo--right\">\n                <span>Burned <b>{event.amount} {event.currency.toUpperCase()}</b></span>\n                {/* <a rel=\"noreferrer\" target=\"_blank\" href={`https://live.blockcypher.com/btc-testnet/tx/${event.id}`}>\n                    <span className=\"utxo--txid\">{event.id}</span>\n                </a> */}\n            </div>\n        </div>;\n    } else {\n        return <div className=\"utxo\">\n            Invalid event: {JSON.stringify(props.event, null, \"    \")}\n        </div>;\n    }\n};\n","import * as React from \"react\";\n\nimport { Loading } from \"@renex/react-components\";\nimport { Map, OrderedMap } from \"immutable\";\n\nimport { Currency, CurrencyList } from \"../../lib/blockchain/depositAddresses\";\nimport { Deposit, EventType, XCSEvent } from \"../../store/types/general\";\nimport { ShowUTXO } from \"./ShowUTXO\";\n\n// TODO: Refactor props\ninterface Props {\n    checking: boolean;\n    redeeming: Map<string, boolean>;\n    events: OrderedMap<string, XCSEvent>;\n    checkingResponse: Map<string, boolean>;\n    onRefresh: () => Promise<void>;\n    onRedeem: (deposit: Deposit) => Promise<void>;\n    checkForResponse: (id: string) => Promise<void>;\n}\n\nexport const ShowUTXOs = ({ checking, onRefresh, events, redeeming, onRedeem, checkingResponse, checkForResponse }: Props) => {\n    let redeemable = Map<Currency, string>();\n    for (const currency of CurrencyList) {\n        const first = events.filter(utxo => utxo.type === EventType.Deposit && (utxo as Deposit).currency === currency).first(undefined);\n        if (first) {\n            redeemable = redeemable.set(currency, first.id);\n        }\n    }\n    return <div className=\"block deposits\">\n        <div className=\"deposits--title\">\n            <h3>History (all addresses)</h3>\n            <button disabled={checking} className=\"button--white\" onClick={onRefresh}>{checking ? <div className=\"checking\"><Loading /></div> : <>Refresh</>}</button>\n        </div>\n\n        {events.reverse().map(event => {\n            // const last = redeemable.contains(utxo.utxo.txHash);\n            return <ShowUTXO event={event} key={event.id} oldestDeposit={redeemable.contains(event.id)} redeeming={redeeming.get(event.id) || false} onRedeem={onRedeem} checkingResponse={checkingResponse} checkForResponse={checkForResponse} />;\n        }).toList()}\n    </div>;\n};\n","import * as React from \"react\";\n\nimport Web3 from \"web3\";\n\nimport { List, Map, OrderedMap } from \"immutable\";\nimport { connect, ConnectedReturnType } from \"react-redux\";\nimport { bindActionCreators, Dispatch } from \"redux\";\nimport { HttpProvider } from \"web3-providers\";\n\nimport { BitcoinUTXO } from \"../../lib/blockchain/btc/btc\";\nimport { ZcashUTXO } from \"../../lib/blockchain/btc/zec\";\nimport { Currency, DepositAddresses, UTXO } from \"../../lib/blockchain/depositAddresses\";\nimport { setEthereumAddress, setEvents } from \"../../store/actions/general/generalActions\";\nimport { ApplicationData, Burn, Deposit, EventType, Mint, XCSEvent } from \"../../store/types/general\";\nimport { CurrenciesBlock } from \"../views/CurrenciesBlock\";\nimport { ReceiveAddress } from \"../views/ReceiveAddress\";\nimport { ShowUTXOs } from \"../views/ShowUTXOs\";\n\ninterface InjectedEthereum extends HttpProvider {\n    enable: () => Promise<void>;\n}\n\ndeclare global {\n    interface Window {\n        ethereum?: InjectedEthereum;\n        web3?: Web3;\n    }\n}\n\nexport const getWeb3 = async () => new Promise<Web3>(async (resolve, reject) => {\n    // Modern dApp browsers...\n    if (window.ethereum) {\n        window.web3 = new Web3(window.ethereum);\n        try {\n            // Request account access if needed\n            await window.ethereum.enable();\n            resolve(new Web3(window.web3.currentProvider));\n\n        } catch (error) {\n            reject(error);\n        }\n    } else if (window.web3) {\n        // Legacy dApp browsers...\n        window.web3 = new Web3(window.web3.currentProvider);\n        // Accounts always exposed\n        resolve(new Web3(window.web3.currentProvider));\n    } else {\n        // Non-dApp browsers...\n        reject(\"Non-Ethereum browser detected. You should consider trying MetaMask!\");\n    }\n});\n\nconst SwapControllerClass = (props: Props) => {\n    const { store: { ethereumAddress, darknodeGroup } } = props;\n    let events = props.store.events;\n\n    // tslint:disable: prefer-const\n    const [blur, setBlur] = React.useState(false);\n    const [error, setError] = React.useState<string | undefined>(undefined);\n    const [mounted, setMounted] = React.useState(false);\n    const [checking, setChecking] = React.useState(false);\n\n    let [redeeming, setRedeeming] = React.useState(Map<string, boolean>());\n    let [depositAddresses, setDepositAddresses] = React.useState<DepositAddresses | undefined>(undefined);\n    let [checkingResponse, setCheckingResponse] = React.useState(Map<string, boolean>());\n    // tslint:enable: prefer-const\n\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const element = (event.target as HTMLInputElement);\n        const value = element.value;\n        props.actions.setEthereumAddress(value);\n        // setDepositAddresses(undefined);\n        // setUTXOs(List());\n        setBlur(true);\n    };\n\n    const checkForResponse = async (id: string) => {\n        const event = events.get(id);\n        if (!event || event.type !== EventType.Mint) {\n            return;\n        }\n        const mintEvent: Mint = event as Mint;\n        checkingResponse = checkingResponse.set(id, true);\n        setCheckingResponse(checkingResponse);\n        try {\n            const signature = await darknodeGroup.checkForResponse(mintEvent);\n            events = events.set(id, mintEvent.set(\"mintTransaction\", signature));\n            if (ethereumAddress) {\n                props.actions.setEvents({ ethereumAddress, events });\n            }\n        } catch (error) {\n            console.error(error);\n        }\n        checkingResponse = checkingResponse.remove(id);\n        setCheckingResponse(checkingResponse);\n    };\n\n    const onSubmit = async () => {\n        if (!depositAddresses) {\n            setError(`No deposit address defined.`);\n            return;\n        }\n\n        setBlur(false);\n        setChecking(true);\n        setError(undefined);\n\n        // const promises = renVMMessages.map(async (_, time) => {\n        //     // tslint:disable-next-line: no-console\n        //     return checkForResponse(time).catch(console.error);\n        // }).valueSeq().toArray();\n\n        const newUtxos = await depositAddresses.getUTXOs();\n        newUtxos.map(utxo => {\n            const txHash = utxo.utxo.txHash;\n            if (!events.has(txHash)) {\n                events = events.set(txHash, new Deposit({\n                    id: txHash,\n                    utxo: List([utxo.utxo]),\n                    currency: utxo.currency,\n                }));\n                if (ethereumAddress) {\n                    props.actions.setEvents({ ethereumAddress, events });\n                }\n            }\n        });\n\n        // try {\n        //     await Promise.all(promises);\n        // } catch (error) {\n        //     // tslint:disable-next-line: no-console\n        //     console.error(error);\n        // }\n\n        setChecking(false);\n    };\n\n    // Call onSubmit without passing in click-event parameters\n    const onRefresh = () => onSubmit();\n\n    // tslint:disable-next-line: no-any\n    const onGenerateAddress = () => {\n        setError(undefined);\n\n        if (ethereumAddress) {\n            if (depositAddresses && depositAddresses.receiveAddress === ethereumAddress) {\n                // do nothing\n            } else {\n                try {\n                    depositAddresses = new DepositAddresses(ethereumAddress);\n                    setDepositAddresses(depositAddresses);\n                } catch (error) {\n                    setError(`${error && error.toString ? error.toString() : error}`);\n                    return;\n                }\n            }\n            // tslint:disable-next-line: no-console\n            onSubmit().catch(console.error);\n        }\n    };\n\n    if (!mounted && ethereumAddress && ethereumAddress.length === 42 && !depositAddresses) {\n        onGenerateAddress();\n    }\n\n    if (!mounted) {\n        setMounted(true);\n    }\n\n    const onRedeem = async (deposit: Deposit) => {\n        const id = deposit.id;\n\n        redeeming = redeeming.set(id, true);\n        setRedeeming(redeeming);\n        if (!ethereumAddress) {\n            return;\n        }\n\n        try {\n            const utxo = deposit.utxo.first(undefined);\n            const utxoWithCurrency: UTXO | undefined = (deposit.currency === Currency.BTC) ? { currency: Currency.BTC, utxo: utxo as BitcoinUTXO } :\n                (deposit.currency === Currency.ZEC) ? { currency: Currency.ZEC, utxo: utxo as ZcashUTXO } : undefined;\n            if (!utxoWithCurrency) {\n                throw new Error(`Unsupported deposit token: ${deposit.currency}`);\n            }\n\n            const messages = await darknodeGroup.submitDeposits(ethereumAddress, utxoWithCurrency);\n            // TODO: Get messageID from majority\n            events = events.set(id, new Mint({\n                id,\n                utxos: List<UTXO>([utxoWithCurrency]),\n                messageID: messages.first({ messageID: \"\" }).messageID,\n                messageIDs: messages.map(x => x.messageID),\n            }));\n            if (ethereumAddress) {\n                props.actions.setEvents({ ethereumAddress, events });\n            }\n        } catch (error) {\n            console.error(error);\n            setError(`${error && error.toString ? error.toString() : error}`);\n        }\n\n        redeeming = redeeming.remove(id);\n        setRedeeming(redeeming);\n    };\n\n    const getMetaMaskAddress = async () => {\n        try {\n            const web3 = await getWeb3();\n            const addresses = await web3.eth.getAccounts();\n            props.actions.setEthereumAddress(addresses[0]);\n            setBlur(true);\n        } catch (error) {\n            console.error(error);\n            setError(`${error && error.toString ? error.toString() : error}`);\n        }\n    };\n\n    const burn = async (currency: Currency, amount: string) => {\n        setError(undefined);\n        if (depositAddresses && amount !== \"0\") {\n            try {\n                const to = prompt(`Enter recipient ${currency.toUpperCase()} address`);\n                if (!to) {\n                    return;\n                }\n                const id: string = Date();\n                events = events.set(id, new Burn({\n                    id,\n                    currency,\n                    amount,\n                    to,\n                    messageID: \"\",\n                    burnTransaction: undefined,\n                }));\n                if (ethereumAddress) {\n                    props.actions.setEvents({ ethereumAddress, events });\n                }\n                try {\n                    await depositAddresses.burn(currency, to, amount);\n                } catch (error) {\n                    events = events.delete(id);\n                    if (ethereumAddress) {\n                        props.actions.setEvents({ ethereumAddress, events });\n                    }\n                }\n            } catch (error) {\n                console.error(error);\n                setError(`${error && error.toString ? error.toString() : error}`);\n            }\n        }\n    };\n\n    return <div className=\"swap container\">\n        <ReceiveAddress onGenerateAddress={onGenerateAddress} ethereumAddress={ethereumAddress} onChange={onChange} getMetaMaskAddress={getMetaMaskAddress} />\n        {error ? <p className=\"red\">{error}</p> : null}\n        {depositAddresses ?\n            <div className={`swap--bottom ${blur ? \"blur\" : \"\"}`}>\n                <CurrenciesBlock burn={burn} depositAddresses={depositAddresses} />\n                <ShowUTXOs checking={checking} onRefresh={onRefresh} events={events} redeeming={redeeming} onRedeem={onRedeem} checkingResponse={checkingResponse} checkForResponse={checkForResponse} />\n            </div> : null}\n    </div >;\n};\n\nconst mapStateToProps = (state: ApplicationData) => ({\n    store: {\n        ethereumAddress: state.general.ethereumAddress,\n        darknodeGroup: state.general.darknodeGroup,\n        events: state.general.allEvents.get(state.general.ethereumAddress || \"\") || OrderedMap<string, XCSEvent>(),\n    }\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n    actions: bindActionCreators({\n        setEthereumAddress,\n        setEvents,\n    }, dispatch)\n});\n\ninterface Props extends ReturnType<typeof mapStateToProps>, ConnectedReturnType<typeof mapDispatchToProps> {\n}\n\nexport const SwapController = connect(mapStateToProps, mapDispatchToProps)(SwapControllerClass);\n","import * as React from \"react\";\n\nimport { connect, ConnectedReturnType } from \"react-redux\"; // Custom typings\nimport { Router, withRouter } from \"react-router-dom\";\nimport { bindActionCreators, Dispatch } from \"redux\";\n\nimport { FeedbackButton, ScrollToTop as ScrollToTopWithoutRouter } from \"@renex/react-components\";\n\nimport { _captureBackgroundException_ } from \"../../lib/util/errors\";\nimport { history } from \"../../lib/util/history\";\nimport { ApplicationData } from \"../../store/types/general\";\nimport { _catch_ } from \"../views/ErrorBoundary\";\nimport { BackgroundTasks } from \"./BackgroundTasks\";\nimport { HeaderController } from \"./HeaderController\";\nimport { SwapController } from \"./SwapController\";\n\nconst ScrollToTop = withRouter(ScrollToTopWithoutRouter);\n\n/**\n * App is the main visual component responsible for displaying different routes\n * and running background app loops\n */\nclass AppClass extends React.Component<Props, State> {\n    /**\n     * The main render function.\n     * @dev Should have minimal computation, loops and anonymous functions.\n     */\n    public render(): React.ReactNode {\n        return (\n            <Router history={history}>\n                <main className=\"theme-light\">\n                    <div className=\"themed-app\">\n                        {_catch_(<BackgroundTasks />)}\n                        <ScrollToTop />\n\n                        <div>\n                            {_catch_(<HeaderController />)}\n                            {_catch_(<SwapController />)}\n                            {_catch_(<FeedbackButton url=\"#\" />)}\n                        </div>\n                    </div>\n                </main>\n            </Router>\n        );\n    }\n}\n\nconst mapStateToProps = (state: ApplicationData) => ({\n    store: {\n    }\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n    actions: bindActionCreators({\n    }, dispatch)\n});\n\ninterface Props extends ReturnType<typeof mapStateToProps>, ConnectedReturnType<typeof mapDispatchToProps> {\n}\n\ninterface State {\n}\n\nexport const App = connect(mapStateToProps, mapDispatchToProps)(AppClass);\n","import { combineReducers } from \"redux\";\n\nimport { generalReducer } from \"./general/generalReducer\";\nimport { marketReducer } from \"./market/marketReducer\";\n\nimport { ApplicationData } from \"../types/general\";\n\nexport const rootReducer = combineReducers<ApplicationData>({\n    general: generalReducer,\n    marketPrices: marketReducer,\n});\n","import { ActionType, getType } from \"typesafe-actions\";\n\nimport * as generalActions from \"../../../store/actions/general/generalActions\";\n\nimport { GeneralData } from \"../../types/general\";\n\ntype GeneralActions = ActionType<typeof generalActions>;\n\n// tslint:disable-next-line: cyclomatic-complexity\nexport const generalReducer = (state: GeneralData = new GeneralData(), action: GeneralActions) => {\n    switch (action.type) {\n        case getType(generalActions.setQuoteCurrency):\n            return state.set(\"quoteCurrency\", action.payload);\n\n        case getType(generalActions.setEthereumAddress):\n            return state.set(\"ethereumAddress\", action.payload);\n\n        case getType(generalActions.setEvents):\n            return state.set(\"allEvents\", state.allEvents.set(action.payload.ethereumAddress, action.payload.events));\n\n        default:\n            return state;\n    }\n};\n","import { ActionType, getType } from \"typesafe-actions\";\n\nimport * as marketActions from \"../../../store/actions/market/marketActions\";\n\nimport { MarketPrice, MarketPriceData } from \"../../types/general\";\n\ntype MarketAction = ActionType<typeof marketActions>;\n\nexport const marketReducer = (state: MarketPriceData = new MarketPriceData(), action: MarketAction) => {\n    switch (action.type) {\n        case getType(marketActions.updatePrices):\n            const { price, percentChange } = action.payload;\n            const marketPrice: MarketPrice = { price, percentChange };\n            return state.set(\"marketPrices\", state.marketPrices.set(action.payload.pair, marketPrice));\n\n        case getType(marketActions.pricesUpdating):\n            return state.set(\"updating\", action.payload);\n\n        case getType(marketActions.setTokenPrices):\n            return state.set(\"tokenPrices\", action.payload.tokenPrices);\n\n        default:\n            return state;\n    }\n};\n","import storage from \"redux-persist/lib/storage\";\n\nimport { createTransform, PersistConfig } from \"redux-persist\";\n\nimport { _captureBackgroundException_ } from \"../lib/util/errors\";\nimport { ApplicationData, GeneralData } from \"./types/general\";\n\n// Local Storage:\n\nconst generalTransform = createTransform<GeneralData, string>(\n    (inboundState: GeneralData, key: string): string => {\n        try {\n            return inboundState.serialize();\n        } catch (error) {\n            // tslint:disable-next-line: no-console\n            console.error(`Error serializing ${key} (${JSON.stringify(inboundState)}): ${error}`);\n            _captureBackgroundException_(error, { description: \"Error serializing local storage\" });\n            throw error;\n        }\n    },\n    (outboundState: string, key: string): GeneralData => {\n        try {\n            return new GeneralData().deserialize(outboundState);\n        } catch (error) {\n            // tslint:disable-next-line: no-console\n            console.error(`Error deserializing ${key} (${JSON.stringify(outboundState)}): ${error}`);\n            _captureBackgroundException_(error, { description: \"Error deserializing local storage\" });\n            throw error;\n        }\n    },\n    { whitelist: [\"general\"] as Array<keyof ApplicationData>, },\n);\n\nexport const persistConfig: PersistConfig = {\n    storage,\n    key: \"renxcs\",\n    whitelist: [\"general\"] as Array<keyof ApplicationData>,\n    transforms: [generalTransform],\n};\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\n\nimport { Provider } from \"react-redux\";\nimport { persistStore } from \"redux-persist\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nimport { App } from \"./components/controllers/App\";\nimport { _catch_ } from \"./components/views/ErrorBoundary\";\nimport { onLoad } from \"./lib/util/onLoad\";\nimport { configureStore } from \"./store/configureStore\";\n\nimport \"./styles/index.scss\";\n\nexport const store = configureStore();\n\nonLoad(\"RenXCS\");\n\nReactDOM.render(\n    _catch_(<Provider store={store}>\n        <PersistGate loading={null} persistor={persistStore(store)}>\n            <App />\n        </PersistGate>\n    </Provider>),\n    document.getElementById(\"root\") as HTMLElement\n);\n","import * as Sentry from \"@sentry/browser\";\n\nimport { _catch_ } from \"../../components/views/ErrorBoundary\";\nimport { environment, NETWORK, SENTRY_DSN, SOURCE_VERSION } from \"./environmentVariables\";\nimport { pageLoadedAt } from \"./errors\";\n\nexport const onLoad = (title: string) => {\n\n    // Initialize Sentry error logging\n    Sentry.init({\n        // Used to define the project to log errors to\n        dsn: SENTRY_DSN,\n\n        // Used to separate testnet and mainnet errors\n        environment,\n\n        // Used to track errors across versions\n        release: SOURCE_VERSION || \"local\",\n\n        // Only throw errors generated from scripts at these URLs\n        whitelistUrls: [\n            /.*republicprotocol.*/i,\n            /.*renproject.*/i,\n\n            // Local testing (localhost and IPv4 addresses)\n            /.*localhost.*/i,\n            /.*(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).*/\n        ],\n    });\n\n    Sentry.configureScope((scope) => {\n        scope.setExtra(\"loggedIn\", false);\n\n        // We set this to false when logging to Sentry explicitly.\n        scope.setExtra(\"caught\", false);\n\n        scope.setExtra(\"release\", SOURCE_VERSION || \"local\");\n\n        scope.setExtra(\"pageLoadedAt\", pageLoadedAt());\n    });\n\n    // Update document title to show network\n    if (NETWORK && NETWORK !== \"mainnet\") {\n        document.title = `${title} (${NETWORK})`;\n    } else {\n        document.title = title; // Also set in index.html\n    }\n\n    // tslint:disable-next-line: no-console\n    console.log(`${title} version hash: ${SOURCE_VERSION || \"local\"}`);\n};\n"],"sourceRoot":""}