{"version":3,"sources":["lib/btc/btc.ts","lib/errors.ts","lib/market.ts","lib/history.ts","lib/environmentVariables.ts","components/views/ErrorBoundary.tsx","store/actions/market/marketActions.ts","components/controllers/BackgroundTasks.tsx","store/actions/general/generalActions.ts","styles/images/logo.svg","styles/images/rp-flag-uk.svg","components/controllers/HeaderController.tsx","styles/images/metamask.svg","store/types/general.ts","components/controllers/SwapController.tsx","components/controllers/App.tsx","lib/types/types.ts","lib/darknode/darknode.ts","lib/darknode/darknodeGroup.ts","lib/persist.ts","store/configureStore.ts","store/reducers/rootReducer.ts","store/reducers/general/generalReducer.ts","store/reducers/market/marketReducer.ts","store/persistConfig.ts","index.tsx","lib/onLoad.ts"],"names":["endpoint","createTestnetAddress","_ref","mainnet","masterPKH","address","Script","add","Buffer","substring","slice","Opcode","OP_DROP","OP_DUP","OP_HASH160","OP_EQUALVERIFY","OP_CHECKSIG","toScriptHashOut","toAddress","Networks","livenet","testnet","toString","createAddress","getTestnetUTXOs","_ref2","Object","_home_noah_github_renproject_renxcs_ts_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_noah_github_renproject_renxcs_ts_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","limit","confirmations","resp","wrap","_context","prev","next","Axios","get","concat","sent","t0","abrupt","data","stop","_x","_x2","_x3","apply","this","arguments","pageLoaded","Token","history","createBrowserHistory","environment","process","pageLoadedAt","naturalTime","Math","floor","getTime","message","suffix","countDown","Date","toUTCString","_captureException_","error","details","_noCapture_","Sentry","scope","setExtra","category","setTag","level","setLevel","keys","forEach","key","response","status","errorObject","cache","rawErrorJSON","JSON","stringify","value","indexOf","parse","push","rawError","console","toUpperCase","_unused","ignoreNetwork","match","isNetworkError","_captureBackgroundException_","objectSpread","_captureInteractionException_","_captureComponentException_","errorInfo","description","ErrorBoundary","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","componentDidCatch","setState","reportFeedback","state","react","style","whiteSpace","role","cursor","onClick","componentStack","children","React","_catch_","ErrorBoundary_ErrorBoundary","CoinGeckoIDs","Map","set","DAI","BTC","ETH","REN","TUSD","ZEC","WBTC","fetchDetails","asyncToGenerator","regenerator_default","geckoID","url","fetch","json","getTokenPricesInCurrencies","_ref3","_callee3","prices","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","tokenAndDetails","_tokenAndDetails","token","coinGeckoID","price","_context3","undefined","toSeq","toArray","Symbol","iterator","done","slicedToArray","market_data","current_price","return","finish","updatePrices","createStandardAction","pricesUpdating","setTokenPrices","updateTokenPrices","_callee2","dispatch","_context2","Promise","resolve","reject","setTimeout","tokenPrices","BackgroundTasksClass","context","callBootstrapTimeout","callUpdatePricesTimeout","callUpdateMarketPricesTimeout","callUpdatePrices","delay","actions","clearTimeout","callBootstrap","callUpdateMarketPrices","setupLoops","catch","BackgroundTasks","connect","store","darknodeGroup","general","bindActionCreators","setQuoteCurrency","setEthereumAddress","addToRedeemedUTXOs","addToRenVMMessages","addToSignatures","addToUtxoToMessage","addToMessageToUtxos","_extends","assign","target","i","length","source","prototype","hasOwnProperty","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","logo_ref2","react_default","createElement","className","fillRule","clipRule","d","fill","logo_ref3","logo_ref4","logo_ref5","logo_ref6","logo_ref7","logo_ref8","_ref9","logo_ref10","_ref11","_ref12","_ref13","_ref14","logo_SvgLogo","svgRef","width","height","viewBox","ref","ForwardRef","forwardRef","__webpack_require__","p","rp_flag_uk_extends","rp_flag_uk_objectWithoutProperties","rp_flag_uk_objectWithoutPropertiesLoose","rp_flag_uk_ref2","rp_flag_uk_ref3","rp_flag_uk_ref4","rp_flag_uk_ref5","id","stroke","strokeWidth","points","rp_flag_uk_SvgRpFlagUk","rp_flag_uk_ForwardRef","currencyOptions","options","currencies","currency","lib_es","err","getCurrencyOptions","languageOptions","logo","react_router_dom","to","HeaderControllerClass","render","quoteCurrency","languageDropdown","selected","setValue","setLanguage","currencyDropdown","setCurrency","menu","language","HeaderController","metamask_extends","metamask_objectWithoutProperties","metamask_objectWithoutPropertiesLoose","UITheme","metamask_ref2","type","metamask_ref3","metamask_ref4","metamask_SvgMetamask","x","y","enableBackground","xmlSpace","metamask_ForwardRef","showCircle","percentage","dist_default","styles","path","strokeLinecap","trail","strokeOpacity","getWeb3","window","ethereum","web3","Web3","enable","currentProvider","SwapController","ethereumAddress","redeemedUTXOs","renVMMessages","utxoToMessage","messageToUtxos","signatures","_props$store","_React$useState","_React$useState2","mounted","setMounted","_React$useState3","_React$useState4","setError","_React$useState5","_React$useState6","depositAddress","setDepositAddress","_React$useState7","_React$useState8","checking","setChecking","_React$useState9","_React$useState10","utxos","setUTXOs","_React$useState11","_React$useState12","redeeming","setRedeeming","_React$useState13","_React$useState14","showingDeposit","setShowingDeposit","_React$useState15","_React$useState16","checkingResponse","setCheckingResponse","_React$useState17","_React$useState18","redeemingOnEthereum","setRedeemingOnEthereum","checkForResponse","renVMMessage","signature","utxo","remove","onSubmit","_ref4","_callee5","altDepositAddress","promises","newUTXOs","_context5","btc","map","_ref5","_callee4","_","time","_context4","_x5","_x6","valueSeq","all","t1","_x4","onGenerateAddress","e","preventDefault","btcAddress","zec","eth","onRedeem","_ref6","_callee6","messages","_context6","submitDeposits","List","txHash","getMetaMaskAddress","_ref7","_callee7","addresses","_context7","getAccounts","showDeposit","currentTarget","dataset","redeemOnEthereum","_ref8","_callee8","_context8","_x7","onChange","event","placeholder","disabled","data-id","filter","has","redeemingUTXO","contains","amount","pow","rel","href","alt","loading","messageUtxos","reduce","sum","size","toList","ScrollToTop","withRouter","ScrollToTopWithoutRouter","AppClass","react_router","App","NewMultiAddress","multiAddress","multiAddressToID","split","Darknode","charAt","_multiAddress$multiAd","_multiAddress$multiAd2","ip","port","fixedPort","Error","createClass","_getHealth","axios","post","generatePayload","responseError","_getPeers","_getNumberOfPeers","_getEpoch","_getAddresses","request","_sendMessage","_receiveMessage","method","params","jsonrpc","version","msg","bootstrapNodes","promiseAll","list","defaultValue","newList","entryP","t2","t3","WarpGateGroup","_DarknodeGroup","multiAddresses","_this2","results","sendMessage","nonce","payload","args","result","messageID","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_iterator4","_step4","_ref10","node","darknodes","receiveMessage","log","inherits","DarknodeGroup","bootstraps","bootstrap","success","lastError","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","peers","getPeers","addDarknodes","getHealth","darknode","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","Array","isArray","validateType","object","isArrayType","subtype","isListType","isSetType","Set","isMapType","config","reducer","syncedGeneralData","GeneralData","_Record","obj","_i","_Array$from","from","str","_i2","_Array$from2","shownToUser","alert","Record","ImmutableMap","advanced","theme","Light","advancedTheme","Dark","Currency","USD","MarketPriceData","_Record2","updating","marketPrices","OrderedMap","rootReducer","combineReducers","action","getType","generalActions","marketActions","_action$payload","marketPrice","percentChange","pair","generalTransform","createTransform","inboundState","serialize","outboundState","deserialize","whitelist","persistConfig","storage","transforms","middlewares","thunk","persistedReducer","persistReducer","__webpack_exports__","title","createStore","applyMiddleware","dsn","release","whitelistUrls","document","ReactDOM","es","integration_react","persistor","persistStore","getElementById"],"mappings":"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","file":"static/js/main.2e045cc2.chunk.js","sourcesContent":["import Axios from \"axios\";\n\nimport { encoding, Networks, Opcode, Script } from \"bitcore-lib\";\n\nconst testnetMasterPKH = new Buffer(\"be8d41d9e47170a33d7d758ebf853551dea63ab8\", \"hex\");\n\nconst createAddress = ({ mainnet, masterPKH }: { mainnet: boolean, masterPKH: Buffer }) =>\n    (address: string) =>\n        new Script()\n            .add(new Buffer(address.substring(0, 2) === \"0x\" ? address.slice(2) : address, \"hex\"))\n            .add(Opcode.OP_DROP)\n            .add(Opcode.OP_DUP)\n            .add(Opcode.OP_HASH160)\n            .add(masterPKH)\n            .add(Opcode.OP_EQUALVERIFY)\n            .add(Opcode.OP_CHECKSIG)\n            .toScriptHashOut().toAddress(mainnet ? Networks.livenet : Networks.testnet).toString();\n\nexport const createTestnetAddress = createAddress({ mainnet: false, masterPKH: testnetMasterPKH });\n\nconst testnetMercury = \"https://ren-mercury.herokuapp.com/btc-testnet3\";\n\nexport interface UTXO {\n    txHash: string; // hex string without 0x prefix\n    amount: number; // satoshis\n    scriptPubKey: string; // hex string without 0x prefix\n    vout: number;\n}\n\nconst getUTXOs = (endpoint: string) => async (address: string, limit: number, confirmations: number) => {\n    let resp;\n    try {\n        resp = await Axios.get(`${endpoint}/utxo/${address}?limit=${limit}&confirmations=${confirmations}`);\n    } catch (err) {\n        throw err;\n        // respErr:= MercuryError{ }\n        // if err := json.NewDecoder(resp.Body).Decode(& respErr); err != nil {\n        //     return utxos, err\n        // }\n        // return utxos, fmt.Errorf(\"request failed with (%d): %s\", resp.StatusCode, respErr.Error)\n    }\n\n    return resp.data;\n};\n\nexport const getTestnetUTXOs = getUTXOs(testnetMercury);\n\nexport interface FormattedUTXO extends UTXO {\n    formatted: true;\n}\n\n// const shift = 10 ** 8;\n\n// export const formatUTXO = (utxo: UTXO): FormattedUTXO => {\n//     return {\n//         ...utxo,\n//         scriptPubKey: new Address(new Buffer(utxo.scriptPubKey, \"hex\")).toString(),\n//         amount: utxo.amount / shift,\n//         formatted: true,\n//     };\n// };\n\nexport const toBase58 = (hex: string): string =>\n    (new encoding.Base58({ buf: Buffer.from(hex, \"hex\") })).toString();\n","import * as Sentry from \"@sentry/browser\";\n\nimport { naturalTime } from \"@renex/react-components\";\n\nimport { environment } from \"./environmentVariables\";\n\n// tslint:disable-next-line: no-any\ntype AnyError = Error | any;\n\ninterface Details {\n    description?: string;\n    category?: string;\n    level?: Sentry.Severity;\n    ignoreNetwork?: boolean;\n}\n\ninterface Described {\n    description: string;\n}\n\ninterface ShownToUser {\n    shownToUser: string;\n}\n\nlet pageLoaded: Date;\nexport const pageLoadedAt = (): string => {\n    if (!pageLoaded) {\n        pageLoaded = new Date();\n        return pageLoaded.toUTCString();\n    } else {\n        return naturalTime(Math.floor(pageLoaded.getTime() / 1000), {\n            message: \"Just now\",\n            suffix: \"ago\",\n            countDown: false,\n        });\n    }\n};\n\n// Determines whether or not this is a common network error (too many of these\n// are being logged to Sentry)\nconst isNetworkError = (error: AnyError): boolean => {\n    const message: string = ((error || {}).message || error).toString();\n\n    if (\n        message.match(/Network ?Error/i) ||\n        message.match(/Failed to fetch/i) ||\n        message.match(/Network request failed/i) ||\n        message.match(/Wrong response id/i) ||\n        message.match(/Request failed or timed out/i) ||\n        message.match(/Returned values aren't valid, did it run Out of Gas\\?/i) ||\n        message.match(/Invalid JSON RPC response/i) ||\n        message.match(/timeout of 0ms exceeded/i)\n    ) {\n        return true;\n    }\n\n    return false;\n};\n\nconst rawError = (errorObject: Error) => {\n    // https://stackoverflow.com/questions/11616630/json-stringify-avoid-typeerror-converting-circular-structure-to-json/11616993#11616993\n\n    // Note: cache should not be re-used by repeated calls to JSON.stringify.\n    let cache: Array<{}> | null = [];\n    const rawErrorJSON = JSON.stringify(errorObject, (key, value) => {\n        if (key === \"request\") {\n            return \"... omitted\";\n        }\n        if (cache && typeof value === \"object\" && value !== null) {\n            if (cache.indexOf(value) !== -1) {\n                // Duplicate reference found\n                try {\n                    // If this value does not reference a parent it can be deduped\n                    return JSON.parse(JSON.stringify(value));\n                } catch (error) {\n                    // discard key if value cannot be deduped\n                    return;\n                }\n            }\n            // Store value in our collection\n            cache.push(value);\n        }\n        return value;\n    });\n    cache = null; // Enable garbage collection\n\n    return rawErrorJSON;\n};\n\nconst _captureException_ = <X extends Details>(error: AnyError, details: X) => {\n    if (error._noCapture_) {\n        return;\n    }\n\n    Sentry.withScope(scope => {\n        // How long ago the page was loaded at\n        scope.setExtra(\"pageLoadedAt\", pageLoadedAt());\n\n        // Category\n        if (details.category) {\n            scope.setTag(\"category\", details.category);\n        }\n\n        // Level\n        if (details.level) {\n            scope.setLevel(details.level);\n        }\n\n        // Extra information\n        Object.keys(details)\n            .forEach(key => {\n                scope.setExtra(key, details[key]);\n            });\n\n        if (error && error.response) {\n            scope.setExtra(\"responseData\", error.response.data);\n            scope.setExtra(\"responseStatus\", error.response.status);\n        }\n\n        scope.setExtra(\"caught\", true);\n        scope.setExtra(\"zRawError\", rawError(error));\n\n        // tslint:disable-next-line: no-console\n        console.error(error);\n\n        if (environment !== \"mainnet\") {\n            if (typeof error === \"string\") {\n                // tslint:disable-next-line: no-parameter-reassignment\n                error = `[${environment.toUpperCase()}] ${error}`;\n            } else {\n                try {\n                    error.message = `[${environment.toUpperCase()}] ${error.message || error}`;\n                } catch {\n                    // Ignore: Unable to overwrite message (may be read-only)\n                }\n            }\n        }\n\n        // Check if we should ignore the error\n        if (details.ignoreNetwork && isNetworkError(error)) {\n            return;\n        }\n\n        Sentry.captureException(error);\n\n    });\n};\n\n// Background exceptions are thrown in background loops and actions\nexport const _captureBackgroundException_ = <X extends Details & Described>(error: AnyError, details?: X) => {\n    _captureException_(error, { ignoreNetwork: true, ...details, category: \"background_exception\" });\n};\n\n// Interaction exceptions are thrown as a direct result of a user interaction\nexport const _captureInteractionException_ = <X extends Details & Described & ShownToUser>(error: AnyError, details?: X) => {\n    _captureException_(error, { ...details, category: \"interaction_exception\" });\n};\n\n// Component exceptions are thrown from an ErrorBoundary\nexport const _captureComponentException_ = (error: AnyError, errorInfo: React.ErrorInfo) => {\n    _captureException_(error, { ...errorInfo, description: \"Error caught in Error Boundary. See Component stack trace.\", category: \"component_exception\" });\n};\n\n// _noCapture_ is to mark errors that should not be reported to Sentry.\nexport const _noCapture_ = (error: Error): Error => {\n    (error as AnyError)._noCapture_ = true;\n    return error;\n};\n","import { Currency } from \"@renex/react-components\";\nimport { Map } from \"immutable\";\n\nimport { TokenPrices } from \"../store/types/general\";\n\nexport enum Token {\n    DAI = \"DAI\",\n    BTC = \"BTC\",\n    ETH = \"ETH\",\n    REN = \"REN\",\n    TUSD = \"TUSD\",\n    ZEC = \"ZEC\",\n    WBTC = \"WBTC\",\n}\n// export type MarketPair = string;\n\nconst CoinGeckoIDs = Map<Token, string>()\n    .set(Token.DAI, \"dai\")\n    .set(Token.BTC, \"bitcoin\")\n    .set(Token.ETH, \"ethereum\")\n    .set(Token.REN, \"republic-protocol\")\n    .set(Token.TUSD, \"true-usd\")\n    .set(Token.ZEC, \"zcash\")\n    .set(Token.WBTC, \"bitcoin\");\n\n/**\n * Retrieves the current pricepoint for two currencies.\n * @param fstCode The first currency.\n * @param sndCode The second currency.\n * @returns An array containing the price with respect to the currencies, and the 24 hour percent change.\n */\nconst fetchDetails = async (geckoID: string) => {\n    const url = `https://api.coingecko.com/api/v3/coins/${geckoID}?localization=false&tickers=false&market_data=true&community_data=false&developer_data=false&sparkline=false`;\n    const response = await fetch(url);\n    return response.json();\n};\n\nexport const getMarketPrice = async (quoteCode: Token, baseCode: Token): Promise<[number, number]> => {\n    const baseCoinGeckoID = CoinGeckoIDs.get(baseCode, undefined);\n    if (baseCoinGeckoID === undefined) {\n        return [0, 0];\n    }\n\n    const baseData = await fetchDetails(baseCoinGeckoID);\n    const basePrice: number | null | undefined = baseData.market_data.current_price[quoteCode.toLowerCase()];\n    const basePercentChange: number | null | undefined = baseData.market_data.price_change_percentage_24h_in_currency[quoteCode.toLowerCase()];\n\n    if (basePrice !== undefined && basePrice !== null) {\n        return [basePrice || 0, basePercentChange || 0];\n    }\n\n    // If the pairing isn't available, use BTC as a conversion bridge.\n    const bridge = Token.BTC;\n\n    const quoteCoinGeckoID = CoinGeckoIDs.get(quoteCode, undefined);\n    if (quoteCoinGeckoID === undefined) {\n        return [0, 0];\n    }\n\n    const basePriceInBridge: number = (baseData.market_data.current_price[bridge.toLowerCase()] || 0);\n    const basePercentChangeInBridge: number = (baseData.market_data.price_change_percentage_24h_in_currency[bridge.toLowerCase()] || 0);\n\n    const quoteData = await fetchDetails(quoteCoinGeckoID);\n    const quotePriceInBridge: number = quoteData.market_data.current_price[bridge.toLowerCase()] || 0;\n    const quotePercentChangeInBridge: number = quoteData.market_data.price_change_percentage_24h_in_currency[bridge.toLowerCase()] || 0;\n    return [\n        quotePriceInBridge ? basePriceInBridge / quotePriceInBridge : 0,\n        quotePercentChangeInBridge ? basePercentChangeInBridge / quotePercentChangeInBridge : 0\n    ];\n};\n\nexport const getTokenPricesInCurrencies = async (): Promise<TokenPrices> => {\n    let prices: TokenPrices = Map();\n\n    for (const tokenAndDetails of CoinGeckoIDs.toSeq().toArray()) {\n        const [token, coinGeckoID] = tokenAndDetails;\n\n        // tslint:disable-next-line:max-line-length\n        const data = await fetchDetails(coinGeckoID);\n        const price = Map<Currency, number>(data.market_data.current_price);\n\n        prices = prices.set(token, price);\n    }\n\n    return prices;\n};\n","import { createBrowserHistory } from \"history\";\n\nexport const history = createBrowserHistory();\n","export const SENTRY_DSN = process.env.REACT_APP_SENTRY_DSN;\n\nexport const NETWORK = process.env.REACT_APP_NETWORK;\n\nexport const SOURCE_VERSION = process.env.REACT_APP_SOURCE_VERSION;\n\n// export const BACKEND_URL = process.env.REACT_APP_BACKEND_URL || \"\";\n\nexport const environment = ((process.env.NODE_ENV === \"development\") ? \"local\" : NETWORK) || \"unknown\";\n","import * as Sentry from \"@sentry/browser\";\nimport * as React from \"react\";\n\nimport { _captureComponentException_ } from \"../../lib/errors\";\n\nclass ErrorBoundary extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = { error: null, errorInfo: null };\n    }\n\n    public componentDidCatch = (error: Error, errorInfo: React.ErrorInfo) => {\n        this.setState({\n            error,\n            errorInfo,\n        });\n        _captureComponentException_(error, errorInfo);\n    }\n\n    /**\n     * The main render function.\n     * @dev Should have minimal computation, loops and anonymous functions.\n     */\n    public render(): React.ReactNode {\n        if (this.state.errorInfo) {\n            // Error path\n            return (\n                <div>\n                    <h2>Something went wrong.</h2>\n                    <details style={{ whiteSpace: \"pre-wrap\" }}>\n                        <p role=\"button\" style={{ cursor: \"pointer\" }} onClick={this.reportFeedback}>\n                            Click to report feedback\n                        </p>\n                        {this.state.error && this.state.error.toString()}\n                        <br />\n                        {this.state.errorInfo.componentStack}\n                    </details>\n                </div>\n            );\n        }\n        // Normally, just render children\n        return this.props.children;\n    }\n\n    private readonly reportFeedback = () => {\n        Sentry.showReportDialog();\n    }\n}\n\ninterface Props {\n}\n\ninterface State {\n    error: null | Error;\n    errorInfo: null | React.ErrorInfo;\n}\n\nexport const _catch_ = (\n    children: React.ReactNode,\n) => <ErrorBoundary>\n        {children}\n    </ErrorBoundary>;\n","import { Dispatch } from \"redux\";\nimport { createStandardAction } from \"typesafe-actions\";\n\nimport { getTokenPricesInCurrencies } from \"../../../lib/market\";\nimport { TokenPrices } from \"../../types/general\";\n\n/**\n * Updates the market price for a specific token\n */\nexport const updatePrices = createStandardAction(\"UPDATE_PRICES\")<{\n    price: number;\n    percentChange: number;\n    pair: string;\n}>();\n\nexport const pricesUpdating = createStandardAction(\"PRICES_UPDATING\")<boolean>();\n\nexport const setTokenPrices = createStandardAction(\"STORE_TOKEN_PRICES\")<{ tokenPrices: TokenPrices }>();\n\nexport const updateTokenPrices = () => async (dispatch: Dispatch) => new Promise((resolve, reject) => {\n    dispatch(pricesUpdating(true));\n    setTimeout(async () => {\n        try {\n            const tokenPrices = await getTokenPricesInCurrencies();\n            dispatch(pricesUpdating(false));\n            dispatch(setTokenPrices({ tokenPrices }));\n        } catch (error) {\n            dispatch(pricesUpdating(false));\n            reject(error);\n        }\n        resolve();\n    }, 1000);\n});\n","import * as React from \"react\";\n\nimport { connect, ConnectedReturnType } from \"react-redux\"; // Custom typings\nimport { bindActionCreators, Dispatch } from \"redux\";\n\nimport { _captureBackgroundException_, _captureInteractionException_ } from \"../../lib/errors\";\n// import { getMarketPrice } from \"../lib/market\";\nimport { updatePrices, updateTokenPrices } from \"../../store/actions/market/marketActions\";\nimport { ApplicationData } from \"../../store/types/general\";\nimport { _catch_ } from \"../views/ErrorBoundary\";\n\n/**\n * BackgroundTasks is responsible for running background loops like updating\n * balances and prices\n */\nclass BackgroundTasksClass extends React.Component<Props, State> {\n\n    /**\n     * The following timeouts are used to run the various background tasks.\n     * setTimeout is used instead of setInterval so the interval between calls\n     * includes the time it takes to run the task.\n     */\n    // tslint:disable: completed-docs\n    private callBootstrapTimeout: NodeJS.Timer | undefined;\n    private callUpdatePricesTimeout: NodeJS.Timer | undefined;\n    private callUpdateMarketPricesTimeout: NodeJS.Timer | undefined;\n    // tslint:enable: completed-docs\n\n    public constructor(props: Props, context: object) {\n        super(props, context);\n        this.state = {\n        };\n    }\n\n    public async componentDidMount(): Promise<void> {\n        this.setupLoops();\n    }\n\n    public componentWillUnmount() {\n        // Clear timeouts\n        if (this.callBootstrapTimeout) { clearTimeout(this.callBootstrapTimeout); }\n        if (this.callUpdatePricesTimeout) { clearTimeout(this.callUpdatePricesTimeout); }\n        if (this.callUpdateMarketPricesTimeout) { clearTimeout(this.callUpdateMarketPricesTimeout); }\n    }\n\n    /**\n     * The main render function.\n     * @dev Should have minimal computation, loops and anonymous functions.\n     */\n    public render(): React.ReactNode {\n        return <></>;\n    }\n\n    // Update token prices every 60 seconds\n    private readonly callUpdatePrices = async (): Promise<void> => {\n        let delay = 60;\n        try {\n            // tslint:disable-next-line: await-promise\n            await this.props.actions.updateTokenPrices();\n        } catch (error) {\n            _captureBackgroundException_(error, {\n                description: \"Error thrown in callUpdatePrices background task\",\n            });\n            delay = 5;\n        }\n        if (this.callUpdatePricesTimeout) { clearTimeout(this.callUpdatePricesTimeout); }\n        this.callUpdatePricesTimeout = setTimeout(this.callUpdatePrices, delay * 1000);\n    }\n\n    // Bootstrap every hour\n    private readonly callBootstrap = async (): Promise<void> => {\n        let delay = 60 * 60;\n        try {\n            // await this.props.store.darknodeGroup.bootstrap();\n        } catch (error) {\n            _captureBackgroundException_(error, {\n                description: \"Error thrown in callBootstrap background task\",\n            });\n            delay = 20;\n        }\n        if (this.callBootstrapTimeout) { clearTimeout(this.callBootstrapTimeout); }\n        this.callBootstrapTimeout = setTimeout(this.callBootstrap, delay * 1000);\n    }\n\n    // Retrieve market prices every minute\n    private readonly callUpdateMarketPrices = async () => {\n        // const { supportedMarkets } = this.props;\n        const delay = 60;\n        // if (supportedMarkets) {\n        //     try {\n        //         await Promise.all(supportedMarkets.map(async (pair, marketID) => {\n        //             const [price, percentChange] = await getMarketPrice(pair.quote, pair.base);\n        //             this.props.actions.updatePrices({ price, percentChange, pair: marketID });\n        //         }).toArray());\n        //     } catch (error) {\n        //         _captureBackgroundException_(error, {\n        //             description: \"Error in BackgroundTasks.callUpdateMarketPrices\",\n        //         });\n        //         delay = 10;\n        //     }\n        // } else {\n        //     delay = 1;\n        // }\n        if (this.callUpdateMarketPricesTimeout) { clearTimeout(this.callUpdateMarketPricesTimeout); }\n        this.callUpdateMarketPricesTimeout = setTimeout(this.callUpdateMarketPrices, delay * 1000);\n    }\n\n    /**\n     * setupLoops is called once to start the timeouts\n     */\n    private readonly setupLoops = () => {\n        this.callBootstrap().catch(error => {\n            _captureBackgroundException_(error, {\n                description: \"Error in callBootstrap in BackgroundTasks\",\n            });\n        });\n\n        this.callUpdatePrices().catch(error => {\n            _captureBackgroundException_(error, {\n                description: \"Error in callUpdatePrices in BackgroundTasks\",\n            });\n        });\n\n        this.callUpdateMarketPrices().catch(error => {\n            _captureBackgroundException_(error, {\n                description: \"Error in callUpdatePrices in BackgroundTasks\",\n            });\n        });\n\n    }\n}\n\nconst mapStateToProps = (state: ApplicationData) => ({\n    store: {\n        darknodeGroup: state.general.darknodeGroup,\n    }\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n    actions: bindActionCreators({\n        updatePrices,\n        updateTokenPrices,\n    }, dispatch)\n});\n\ninterface Props extends ReturnType<typeof mapStateToProps>, ConnectedReturnType<typeof mapDispatchToProps> {\n}\n\ninterface State {\n}\n\nexport const BackgroundTasks = connect(mapStateToProps, mapDispatchToProps)(BackgroundTasksClass);\n","import { List } from \"immutable\";\nimport { createStandardAction } from \"typesafe-actions\";\n\nimport { Currency } from \"@renex/react-components\";\nimport { UTXO } from \"../../../lib/btc/btc\";\nimport { _captureBackgroundException_, _captureInteractionException_ } from \"../../../lib/errors\";\nimport { MultiAddress } from \"../../../lib/types/types\";\n\nexport const setQuoteCurrency = createStandardAction(\"setQuoteCurrency\")<Currency>();\nexport const setEthereumAddress = createStandardAction(\"setEthereumAddress\")<string | undefined>();\nexport const addToRedeemedUTXOs = createStandardAction(\"addToRedeemedUTXOs\")<string>();\nexport const addToRenVMMessages = createStandardAction(\"addToRenVMMessages\")<{ utxo: string, messages: List<{ messageID: string, multiAddress: MultiAddress }> }>();\nexport const addToSignatures = createStandardAction(\"addToSignatures\")<{ utxo: string, signature: string }>();\nexport const addToUtxoToMessage = createStandardAction(\"addToUtxoToMessage\")<{ utxo: string, message: string }>();\nexport const addToMessageToUtxos = createStandardAction(\"addToMessageToUtxos\")<{ message: string, utxos: List<UTXO> }>();\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  className: \"ren-logo\",\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M4.22832 6.51869L6.50289 5.20916L6.80925 5.73645L15.1936 0.889439L14.5809 0.535981L13.9653 0.176729L13.659 0L0 7.90935V8.2628L3.92197 5.9885L4.22832 6.51869Z\",\n  fill: \"#212122\"\n});\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  className: \"ren-logo\",\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M4.22832 11.4991L10.8006 7.69217L11.1069 8.22815L19.4913 3.37824L18.8786 3.01899L18.263 2.66553L17.9566 2.4917L0 12.8839V13.2374L3.92197 10.9631L4.22832 11.4991Z\",\n  fill: \"#212122\"\n});\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  className: \"ren-logo\",\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M4.22832 13.9875L12.948 8.9406L13.2572 9.47079L21.6387 4.61509L21.026 4.26743L20.4133 3.90817L20.104 3.73145L0 15.3666V15.7258L3.92197 13.4544L4.22832 13.9875Z\",\n  fill: \"#212122\"\n});\n\nvar _ref5 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  className: \"ren-logo\",\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M4.22832 16.4736L15.159 10.149L15.4682 10.6792L23.789 5.86405L23.1763 5.5048L22.5607 5.15134L22.2543 4.97461L0 17.8584V18.2119L3.92197 15.9376L4.22832 16.4736Z\",\n  fill: \"#212122\"\n});\n\nvar _ref6 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  className: \"ren-logo\",\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M4.22832 18.9563L17.3092 11.3888L17.6156 11.9248L25.9364 7.10383L25.3237 6.75327L24.711 6.39401L24.4017 6.21729L0 20.3411V20.6946L3.92197 18.4261L4.22832 18.9563Z\",\n  fill: \"#212122\"\n});\n\nvar _ref7 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  className: \"ren-logo\",\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M26.8584 7.64008L26.552 7.46045L0 22.833V23.1864L3.92197 20.9179L4.22832 21.4481L17.3092 13.8806L17.6156 14.4108L27.3179 8.79895V8.08624V7.90951L26.8584 7.64008Z\",\n  fill: \"#212122\"\n});\n\nvar _ref8 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  className: \"ren-logo\",\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M1.68241 24.6955L3.88184 23.4237L4.18819 23.9539L17.246 16.398L17.5524 16.9339L27.3183 11.2815V10.5688V9.8561V9.50293L1.38184 24.5191L1.68241 24.6955Z\",\n  fill: \"#212122\"\n});\n\nvar _ref9 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  className: \"ren-logo\",\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M17.2461 18.8895L17.5524 19.4257L27.3183 13.773V13.0603V12.3476V11.9941L3.5293 25.7619L3.83855 25.9383L6.06976 24.6433L6.37901 25.1793\",\n  fill: \"#212122\"\n});\n\nvar _ref10 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  className: \"ren-logo\",\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M5.98597 27.1845L8.22007 25.8865L8.52643 26.4222L17.2461 21.3724L17.5524 21.9087L27.3183 16.256V15.5433V14.8363V14.48L5.67383 27.0017L5.98597 27.1845Z\",\n  fill: \"#212122\"\n});\n\nvar _ref11 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  className: \"ren-logo\",\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M8.13351 28.4275L10.3676 27.135L10.6769 27.6652L17.2462 23.8644L17.5526 24.3943L27.3185 18.7418V18.0352V17.3225V16.9688L7.82715 28.2507L8.13351 28.4275Z\",\n  fill: \"#212122\"\n});\n\nvar _ref12 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  className: \"ren-logo\",\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M9.97656 29.4933L10.2829 29.6698L12.5228 28.375L12.8234 28.911L17.2453 26.347L17.5517 26.883L27.3176 21.2302V20.5178V19.8051V19.4517L9.97656 29.4933Z\",\n  fill: \"#212122\"\n});\n\nvar _ref13 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  className: \"ren-logo\",\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M12.4304 30.9189L14.6645 29.618L14.9708 30.154L17.2454 28.8329L17.5518 29.3689L27.3177 23.7222V23.0095V22.2968V21.9434L12.124 30.7421L12.4304 30.9189Z\",\n  fill: \"#212122\"\n});\n\nvar _ref14 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  className: \"ren-logo\",\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M17.3439 2.1326L16.7283 1.77915L16.1156 1.42569L15.8092 1.24316L0 10.3925V10.746L3.92197 8.48036L4.22832 9.00765L8.65029 6.44943L8.96532 6.98541L17.3439 2.1326Z\",\n  fill: \"#212122\"\n});\n\nvar SvgLogo = function SvgLogo(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: 31,\n    height: 31,\n    viewBox: \"0 0 31 31\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11, _ref12, _ref13, _ref14);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgLogo, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/logo.3e204930.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"title\", null, \"union-jack\");\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"desc\", null, \"Created with Sketch.\");\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"defs\", null);\n\nvar _ref5 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  id: \"Page-1\",\n  stroke: \"none\",\n  strokeWidth: 1,\n  fill: \"none\",\n  fillRule: \"evenodd\"\n}, React.createElement(\"g\", {\n  id: \"union-jack\"\n}, React.createElement(\"polygon\", {\n  id: \"Fill-1\",\n  fill: \"#FFFFFF\",\n  points: \"0 11 20.7878788 11 20.7878788 0 0 0\"\n}), React.createElement(\"polygon\", {\n  id: \"Fill-2\",\n  fill: \"#00247D\",\n  points: \"2.32431818 11 8.66165152 11 8.66165152 7.64657143\"\n}), React.createElement(\"polygon\", {\n  id: \"Fill-3\",\n  fill: \"#00247D\",\n  points: \"12.1261636 11 18.4641333 11 12.1261636 7.64657143\"\n}), React.createElement(\"polygon\", {\n  id: \"Fill-4\",\n  fill: \"#00247D\",\n  points: \"0 7.33316122 0 9.76999796 4.60515152 7.33316122\"\n}), React.createElement(\"polygon\", {\n  id: \"Fill-5\",\n  fill: \"#CF142B\",\n  points: \"6.92942727 7.33316122 6.36363636e-05 10.9999776 1.54960909 10.9999776 8.47854848 7.33316122\"\n}), React.createElement(\"polygon\", {\n  id: \"Fill-6\",\n  fill: \"#CF142B\",\n  points: \"13.8588545 7.33316122 20.7880061 10.9999776 20.7880061 10.1801408 15.4081879 7.33316122\"\n}), React.createElement(\"polygon\", {\n  id: \"Fill-7\",\n  fill: \"#00247D\",\n  points: \"16.1829818 7.33316122 20.7879212 9.76999796 20.7879212 7.33316122\"\n}), React.createElement(\"polygon\", {\n  id: \"Fill-8\",\n  fill: \"#00247D\",\n  points: \"0 3.66652449 4.60515152 3.66652449 0 1.22991224\"\n}), React.createElement(\"polygon\", {\n  id: \"Fill-9\",\n  fill: \"#00247D\",\n  points: \"16.1829818 3.66652449 20.7879212 3.66652449 20.7879212 1.22991224\"\n}), React.createElement(\"polygon\", {\n  id: \"Fill-10\",\n  fill: \"#CF142B\",\n  points: \"0 8.97959184e-05 0 0.819926531 5.37960606 3.66645714 6.92936364 3.66645714 0.000424242424 8.97959184e-05\"\n}), React.createElement(\"polygon\", {\n  id: \"Fill-11\",\n  fill: \"#00247D\",\n  points: \"2.3247 8.97959184e-05 8.66160909 3.35329388 8.66160909 8.97959184e-05\"\n}), React.createElement(\"polygon\", {\n  id: \"Fill-12\",\n  fill: \"#CF142B\",\n  points: \"9.35454545 8.97959184e-05 9.35454545 4.39986531 0 4.39986531 0 6.59986531 9.35454545 6.59986531 9.35454545 11.0000898 11.4331212 11.0000898 11.4331212 6.59964082 20.7878788 6.59964082 20.7878788 4.39964082 11.4331212 4.39964082 11.4331212 8.97959184e-05\"\n}), React.createElement(\"polygon\", {\n  id: \"Fill-13\",\n  fill: \"#00247D\",\n  points: \"12.1261636 8.97959184e-05 12.1261636 3.35329388 18.4637091 8.97959184e-05\"\n}), React.createElement(\"polygon\", {\n  id: \"Fill-14\",\n  fill: \"#CF142B\",\n  points: \"19.2379091 8.97959184e-05 12.3089697 3.66645714 13.8589394 3.66645714 20.7874545 8.97959184e-05\"\n})));\n\nvar SvgRpFlagUk = function SvgRpFlagUk(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: \"21px\",\n    height: \"11px\",\n    viewBox: \"0 0 21 11\",\n    ref: svgRef\n  }, props), _ref2, _ref3, _ref4, _ref5);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgRpFlagUk, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/rp-flag-uk.e021baf7.svg\";\nexport { ForwardRef as ReactComponent };","import * as React from \"react\";\n\nimport { connect, ConnectedReturnType } from \"react-redux\"; // Custom typings\nimport { Link } from \"react-router-dom\";\nimport { bindActionCreators, Dispatch } from \"redux\";\n\nimport { _captureBackgroundException_ } from \"../../lib/errors\";\nimport { setQuoteCurrency } from \"../../store/actions/general/generalActions\";\nimport { ApplicationData } from \"../../store/types/general\";\nimport { _catch_ } from \"../views/ErrorBoundary\";\n\nimport { currencies, Currency, CurrencyIcon, Dropdown, Header } from \"@renex/react-components\";\n\nimport { ReactComponent as Logo } from \"../../styles/images/logo.svg\";\nimport { ReactComponent as English } from \"../../styles/images/rp-flag-uk.svg\";\n\nconst getCurrencyOptions = () => {\n    const options = new Map<string, React.ReactNode>();\n\n    for (const currency of currencies) {\n        options.set(currency.currency, <>\n            <CurrencyIcon currency={currency.currency} />\n            {\" \"}{currency.description}\n        </>);\n    }\n\n    return options;\n};\n\nconst currencyOptions = getCurrencyOptions();\n\nconst languageOptions = new Map()\n    .set(\"EN\",\n        <><English /> English</>\n    );\n\nconst logo = <Link className=\"no-underline\" to=\"/\">\n    <Logo />\n    <span>beta</span>\n</Link>;\n\n/**\n * Header is a visual component providing page branding and navigation.\n */\nclass HeaderControllerClass extends React.Component<Props, State> {\n    public render = (): JSX.Element => {\n        const { store: { quoteCurrency } } = this.props;\n\n        const languageDropdown = <Dropdown\n            selected={{\n                value: \"EN\",\n                render: \"English\",\n            }}\n            options={languageOptions}\n            setValue={this.setLanguage}\n        />;\n\n        const currencyDropdown = <Dropdown\n            selected={{\n                value: quoteCurrency,\n                render: <>\n                    <CurrencyIcon currency={quoteCurrency} />\n                    {\" \"}{quoteCurrency.toUpperCase()}\n                </>\n            }}\n            options={currencyOptions}\n            setValue={this.setCurrency}\n        />;\n\n        return (\n            <Header\n                logo={logo}\n                menu={[\n                    languageDropdown, currencyDropdown\n                ]}\n            />\n        );\n    }\n\n    private readonly setCurrency = (quoteCurrency: Currency): void => {\n        this.props.actions.setQuoteCurrency(quoteCurrency);\n    }\n\n    private readonly setLanguage = (language: string): void => {\n        // NOT IMPLEMENTED\n    }\n}\n\nconst mapStateToProps = (state: ApplicationData) => ({\n    store: {\n        quoteCurrency: state.general.quoteCurrency,\n    }\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n    actions: bindActionCreators({\n        setQuoteCurrency,\n    }, dispatch)\n});\n\ninterface Props extends ReturnType<typeof mapStateToProps>, ConnectedReturnType<typeof mapDispatchToProps> {\n}\n\ninterface State {\n}\n\nexport const HeaderController = connect(mapStateToProps, mapDispatchToProps)(HeaderControllerClass);\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"style\", {\n  type: \"text/css\"\n}, \"\\n\\t.st0{fill:#161616;stroke:#161616;}\\n\\t.st1{fill:#E4761B;stroke:#E4761B;stroke-linecap:round;stroke-linejoin:round;}\\n\\t.st2{fill:#763D16;stroke:#763D16;stroke-linecap:round;stroke-linejoin:round;}\\n\\t.st3{fill:#F6851B;stroke:#F6851B;stroke-linecap:round;stroke-linejoin:round;}\\n\\t.st4{fill:#E2761B;stroke:#E2761B;stroke-linecap:round;stroke-linejoin:round;}\\n\\t.st5{fill:#CD6116;stroke:#CD6116;stroke-linecap:round;stroke-linejoin:round;}\\n\\t.st6{fill:#C0AD9E;stroke:#C0AD9E;stroke-linecap:round;stroke-linejoin:round;}\\n\\t.st7{fill:#D7C1B3;stroke:#D7C1B3;stroke-linecap:round;stroke-linejoin:round;}\\n\\t.st8{fill:#E4751F;stroke:#E4751F;stroke-linecap:round;stroke-linejoin:round;}\\n\\t.st9{fill:#233447;stroke:#233447;stroke-linecap:round;stroke-linejoin:round;}\\n\\t.st10{fill:#161616;stroke:#161616;stroke-linecap:round;stroke-linejoin:round;}\\n\");\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"polygon\", {\n  className: \"st0\",\n  points: \"277.3,145.6 272.3,142 280.3,134.7 274.2,129.9 282.2,123.8 276.9,119.8 285.3,79 272.7,41.1  191.6,71.4 124.1,71.4 43,41.1 30.4,79 38.9,119.8 33.5,123.8 41.5,129.9 35.4,134.7 43.4,142 38.4,145.6 49.9,159.1 32.5,213.3  48.6,268.6 105.3,253 116.3,262 138.7,277.5 177,277.5 199.4,262 210.4,253 267.1,268.6 283.3,213.3 265.8,159.1 \"\n});\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"g\", null, React.createElement(\"polygon\", {\n  className: \"st1\",\n  points: \"105.3,253 48.6,268.6 32.5,213.3  \"\n}), React.createElement(\"polygon\", {\n  className: \"st1\",\n  points: \"283.3,213.3 267.1,268.6 210.4,253  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"265.8,159.1 213.5,143.8 231.8,139  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"49.9,159.1 84,139 102.2,143.8  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"43.4,142 41.5,129.9 84,139  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"272.3,142 231.8,139 274.2,129.9  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"272.3,142 265.8,159.1 231.8,139  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"43.4,142 84,139 49.9,159.1  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"231.8,139 276.9,119.8 274.2,129.9  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"84,139 41.5,129.9 38.9,119.8  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"124.1,71.4 191.6,71.4 176.5,112.5  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"176.5,112.5 139.2,112.5 124.1,71.4  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"276.9,119.8 231.8,139 231,87.4  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"102.2,143.8 84,139 84.7,87.4  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"84.7,87.4 84,139 38.9,119.8  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"231,87.4 231.8,139 213.5,143.8  \"\n}), React.createElement(\"polygon\", {\n  className: \"st1\",\n  points: \"139.2,112.5 43,41.1 124.1,71.4  \"\n}), React.createElement(\"polygon\", {\n  className: \"st4\",\n  points: \"272.7,41.1 176.5,112.5 191.6,71.4  \"\n}), React.createElement(\"polygon\", {\n  className: \"st1\",\n  points: \"210.4,253 236.9,213.3 283.3,213.3  \"\n}), React.createElement(\"polygon\", {\n  className: \"st1\",\n  points: \"32.5,213.3 78.9,213.3 105.3,253  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"229.3,167.7 283.3,213.3 236.9,213.3  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"86.4,167.7 32.5,213.3 49.9,159.1  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"78.9,213.3 32.5,213.3 86.4,167.7  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"229.3,167.7 265.8,159.1 283.3,213.3  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"84.7,87.4 139.2,112.5 102.2,143.8  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"213.5,143.8 176.5,112.5 231,87.4  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"265.8,159.1 272.3,142 277.3,145.6  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"49.9,159.1 38.4,145.6 43.4,142  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"272.3,142 274.2,129.9 280.3,134.7  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"43.4,142 35.4,134.7 41.5,129.9  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"33.5,123.8 38.9,119.8 41.5,129.9  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"282.2,123.8 274.2,129.9 276.9,119.8  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"49.9,159.1 102.2,143.8 86.4,167.7  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"265.8,159.1 229.3,167.7 213.5,143.8  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"38.9,119.8 30.4,79 84.7,87.4  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"231,87.4 285.3,79 276.9,119.8  \"\n}), React.createElement(\"polygon\", {\n  className: \"st1\",\n  points: \"102.2,143.8 139.2,112.5 142.6,170.2  \"\n}), React.createElement(\"polygon\", {\n  className: \"st1\",\n  points: \"213.5,143.8 229.3,167.7 173.1,170.2  \"\n}), React.createElement(\"polygon\", {\n  className: \"st1\",\n  points: \"173.1,170.2 176.5,112.5 213.5,143.8  \"\n}), React.createElement(\"polygon\", {\n  className: \"st1\",\n  points: \"142.6,170.2 86.4,167.7 102.2,143.8  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"272.7,41.1 285.3,79 231,87.4  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"43,41.1 139.2,112.5 84.7,87.4  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"231,87.4 176.5,112.5 272.7,41.1  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"84.7,87.4 30.4,79 43,41.1  \"\n}), React.createElement(\"polygon\", {\n  className: \"st5\",\n  points: \"105.3,253 78.9,213.3 110,213.7  \"\n}), React.createElement(\"polygon\", {\n  className: \"st5\",\n  points: \"210.4,253 205.7,213.7 236.9,213.3  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"173.1,170.2 142.6,170.2 139.2,112.5  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"139.2,112.5 176.5,112.5 173.1,170.2  \"\n}), React.createElement(\"polygon\", {\n  className: \"st6\",\n  points: \"116.3,262 105.3,253 136.8,267.9  \"\n}), React.createElement(\"polygon\", {\n  className: \"st6\",\n  points: \"178.9,267.9 210.4,253 199.4,262  \"\n}), React.createElement(\"polygon\", {\n  className: \"st7\",\n  points: \"136.6,258.6 136.8,267.9 105.3,253  \"\n}), React.createElement(\"polygon\", {\n  className: \"st7\",\n  points: \"179.2,258.6 210.4,253 178.9,267.9  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"86.4,167.7 110,213.7 78.9,213.3  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"236.9,213.3 205.7,213.7 229.3,167.7  \"\n}), React.createElement(\"polygon\", {\n  className: \"st8\",\n  points: \"86.4,167.7 109.2,190.8 110,213.7  \"\n}), React.createElement(\"polygon\", {\n  className: \"st8\",\n  points: \"229.3,167.7 205.7,213.7 206.6,190.8  \"\n}), React.createElement(\"polygon\", {\n  className: \"st7\",\n  points: \"105.3,253 139.2,236.5 136.6,258.6  \"\n}), React.createElement(\"polygon\", {\n  className: \"st7\",\n  points: \"210.4,253 179.2,258.6 176.5,236.5  \"\n}), React.createElement(\"polygon\", {\n  className: \"st1\",\n  points: \"139.2,236.5 105.3,253 110,213.7  \"\n}), React.createElement(\"polygon\", {\n  className: \"st1\",\n  points: \"176.5,236.5 205.7,213.7 210.4,253  \"\n}), React.createElement(\"polygon\", {\n  className: \"st5\",\n  points: \"173.1,170.2 229.3,167.7 206.6,190.8  \"\n}), React.createElement(\"polygon\", {\n  className: \"st5\",\n  points: \"109.2,190.8 86.4,167.7 142.6,170.2  \"\n}), React.createElement(\"polygon\", {\n  className: \"st5\",\n  points: \"142.6,170.2 129.1,181.7 109.2,190.8  \"\n}), React.createElement(\"polygon\", {\n  className: \"st5\",\n  points: \"206.6,190.8 186.6,181.7 173.1,170.2  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"205.7,213.7 178.3,199.1 206.6,190.8  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"110,213.7 109.2,190.8 137.4,199.1  \"\n}), React.createElement(\"polygon\", {\n  className: \"st9\",\n  points: \"137.4,199.1 109.2,190.8 129.1,181.7  \"\n}), React.createElement(\"polygon\", {\n  className: \"st9\",\n  points: \"178.3,199.1 186.6,181.7 206.6,190.8  \"\n}), React.createElement(\"polygon\", {\n  className: \"st5\",\n  points: \"186.6,181.7 178.3,199.1 173.1,170.2  \"\n}), React.createElement(\"polygon\", {\n  className: \"st5\",\n  points: \"129.1,181.7 142.6,170.2 137.4,199.1  \"\n}), React.createElement(\"polygon\", {\n  className: \"st6\",\n  points: \"199.4,262 177,277.5 178.9,267.9  \"\n}), React.createElement(\"polygon\", {\n  className: \"st6\",\n  points: \"136.8,267.9 138.7,277.5 116.3,262  \"\n}), React.createElement(\"polygon\", {\n  className: \"st4\",\n  points: \"178.3,199.1 171.8,188.4 173.1,170.2  \"\n}), React.createElement(\"polygon\", {\n  className: \"st8\",\n  points: \"137.4,199.1 142.6,170.2 143.9,188.4  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"173.1,170.2 171.8,188.4 143.9,188.4  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"143.9,188.4 142.6,170.2 173.1,170.2  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"178.3,199.1 205.7,213.7 176.5,236.5  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"139.2,236.5 110,213.7 137.4,199.1  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"137.4,199.1 144,233.2 139.2,236.5  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"176.5,236.5 171.7,233.2 178.3,199.1  \"\n}), React.createElement(\"polygon\", {\n  className: \"st8\",\n  points: \"171.8,188.4 178.3,199.1 171.7,233.2  \"\n}), React.createElement(\"polygon\", {\n  className: \"st8\",\n  points: \"143.9,188.4 144,233.2 137.4,199.1  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"143.9,188.4 171.8,188.4 171.7,233.2  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"171.7,233.2 144,233.2 143.9,188.4  \"\n}), React.createElement(\"polygon\", {\n  className: \"st6\",\n  points: \"179.2,258.6 178.9,267.9 177,277.5  \"\n}), React.createElement(\"polygon\", {\n  className: \"st6\",\n  points: \"138.7,277.5 136.8,267.9 136.6,258.6  \"\n}), React.createElement(\"polygon\", {\n  className: \"st6\",\n  points: \"136.6,258.6 139,256.4 138.7,277.5  \"\n}), React.createElement(\"polygon\", {\n  className: \"st6\",\n  points: \"177,277.5 176.7,256.4 179.2,258.6  \"\n}), React.createElement(\"polygon\", {\n  className: \"st6\",\n  points: \"138.7,277.5 139,256.4 176.7,256.4  \"\n}), React.createElement(\"polygon\", {\n  className: \"st6\",\n  points: \"176.7,256.4 177,277.5 138.7,277.5  \"\n}), React.createElement(\"polygon\", {\n  className: \"st10\",\n  points: \"176.5,236.5 179.2,258.6 176.7,256.4  \"\n}), React.createElement(\"polygon\", {\n  className: \"st10\",\n  points: \"139,256.4 136.6,258.6 139.2,236.5  \"\n}), React.createElement(\"polygon\", {\n  className: \"st10\",\n  points: \"139.2,236.5 140.7,241.2 139,256.4  \"\n}), React.createElement(\"polygon\", {\n  className: \"st10\",\n  points: \"176.7,256.4 175,241.2 176.5,236.5  \"\n}), React.createElement(\"polygon\", {\n  className: \"st10\",\n  points: \"143.7,237.7 140.7,241.2 139.2,236.5  \"\n}), React.createElement(\"polygon\", {\n  className: \"st10\",\n  points: \"176.5,236.5 175,241.2 172,237.7  \"\n}), React.createElement(\"polygon\", {\n  className: \"st10\",\n  points: \"172,237.7 171.7,233.2 176.5,236.5  \"\n}), React.createElement(\"polygon\", {\n  className: \"st10\",\n  points: \"139.2,236.5 144,233.2 143.7,237.7  \"\n}), React.createElement(\"polygon\", {\n  className: \"st10\",\n  points: \"171.7,233.2 172,237.7 143.7,237.7  \"\n}), React.createElement(\"polygon\", {\n  className: \"st10\",\n  points: \"143.7,237.7 144,233.2 171.7,233.2  \"\n}), React.createElement(\"polygon\", {\n  className: \"st10\",\n  points: \"140.7,241.2 175,241.2 176.7,256.4  \"\n}), React.createElement(\"polygon\", {\n  className: \"st10\",\n  points: \"176.7,256.4 139,256.4 140.7,241.2  \"\n}), React.createElement(\"polygon\", {\n  className: \"st10\",\n  points: \"140.7,241.2 143.7,237.7 172,237.7  \"\n}), React.createElement(\"polygon\", {\n  className: \"st10\",\n  points: \"172,237.7 175,241.2 140.7,241.2  \"\n}));\n\nvar SvgMetamask = function SvgMetamask(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 318.6 318.6\",\n    style: {\n      enableBackground: \"new 0 0 318.6 318.6\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), _ref2, _ref3, _ref4);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgMetamask, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/metamask.035b2edd.svg\";\nexport { ForwardRef as ReactComponent };","import { Currency, Record } from \"@renex/react-components\";\nimport { List, Map as ImmutableMap, OrderedMap, Set } from \"immutable\";\n\nimport { UTXO } from \"../../lib/btc/btc\";\nimport { bootstrapNodes, WarpGateGroup } from \"../../lib/darknode/darknodeGroup\";\nimport { _captureBackgroundException_, _captureInteractionException_ } from \"../../lib/errors\";\nimport { validateType } from \"../../lib/persist\";\nimport { MultiAddress } from \"../../lib/types/types\";\n\ninterface Serializable<T> {\n    serialize(): string;\n    deserialize(str: string): T;\n}\n\nexport interface ApplicationData {\n    general: GeneralData;\n    marketPrices: MarketPriceData;\n}\n\nexport enum UITheme {\n    Light = \"theme-light\", // light theme's CSS class\n    Dark = \"theme-dark\", // dark theme's CSS class\n}\n\nconst syncedGeneralData = new Map()\n    .set(\"ethereumAddress\", \"string\")\n    .set(\"advanced\", \"boolean\")\n    .set(\"theme\", \"string\")\n    .set(\"advancedTheme\", \"string\")\n    .set(\"redeemedUTXOs\", \"Set<string>\")\n    .set(\"renVMMessages\", \"Map<string, List<object>>\")\n    .set(\"utxoToMessage\", \"Map<string, string>\")\n    .set(\"messageToUtxos\", \"Map<string, List<object>>\")\n    .set(\"signatures\", \"Map<string, string>\")\n    .set(\"quoteCurrency\", \"string\");\nexport class GeneralData extends Record({\n    ethereumAddress: \"0x5Ea5F67cC958023F2da2ea92231d358F2a3BbA47\" as string | undefined,\n    redeemedUTXOs: Set<string>(),\n    renVMMessages: ImmutableMap<string, List<{ messageID: string, multiAddress: MultiAddress }>>(),\n    signatures: ImmutableMap<string, string>(),\n    utxoToMessage: ImmutableMap<string, string>(),\n    messageToUtxos: ImmutableMap<string, List<UTXO>>(),\n\n    darknodeGroup: new WarpGateGroup(bootstrapNodes),\n\n    // UI\n    advanced: false,\n    theme: UITheme.Light,\n    advancedTheme: UITheme.Dark,\n\n    // address: null as string | null,\n    url: null as string | null,\n    quoteCurrency: Currency.USD,\n}) implements Serializable<GeneralData> {\n\n    public serialize(): string {\n        const obj = {};\n        for (const key of Array.from(syncedGeneralData.keys())) {\n            obj[key] = this.get(key);\n        }\n        return JSON.stringify(obj);\n    }\n\n    public deserialize(str: string): GeneralData {\n        // tslint:disable-next-line:no-this-assignment\n        let next = this;\n        try {\n            const data = JSON.parse(str);\n            for (const key of Array.from(syncedGeneralData.keys())) {\n                try {\n                    next = next.set(\n                        key,\n                        validateType(syncedGeneralData.get(key), data[key])\n                    );\n                } catch (error) {\n                    _captureInteractionException_(error, { description: \"Error in GeneralData.deserialize\", shownToUser: \"No\" });\n                }\n            }\n        } catch (error) {\n            _captureBackgroundException_(error, {\n                description: \"cannot deserialize local storage\",\n            });\n            // TODO: Remove me!!!\n            alert(\"Check console!\");\n        }\n        return next;\n    }\n}\n\nexport interface MarketPrice {\n    price: number;\n    percentChange: number;\n}\n\nexport const UnknownMarketPrice: MarketPrice = {\n    price: 0,\n    percentChange: 0,\n};\n\nexport type TokenPrices = ImmutableMap<string, ImmutableMap<Currency, number>>;\n\nexport class MarketPriceData extends Record({\n    updating: false,\n    marketPrices: OrderedMap<string, MarketPrice>(),\n    tokenPrices: null as TokenPrices | null,\n}) { }\n","import * as React from \"react\";\n\nimport CircularProgressBar from \"react-circular-progressbar\";\nimport Web3 from \"web3\";\n\nimport { Loading, TokenIcon } from \"@renex/react-components\";\nimport { connect, ConnectedReturnType } from \"react-redux\";\nimport { bindActionCreators, Dispatch } from \"redux\";\nimport { HttpProvider } from \"web3-providers\";\n\nimport { createTestnetAddress, getTestnetUTXOs, UTXO } from \"../../lib/btc/btc\";\nimport { addToMessageToUtxos, addToRedeemedUTXOs, addToRenVMMessages, addToSignatures, addToUtxoToMessage, setEthereumAddress } from \"../../store/actions/general/generalActions\";\nimport { ApplicationData } from \"../../store/types/general\";\n\nimport { List, Map } from \"immutable\";\nimport { ReactComponent as MetaMask } from \"../../styles/images/metamask.svg\";\n\nimport \"react-circular-progressbar/dist/styles.css\";\n\ninterface InjectedEthereum extends HttpProvider {\n    enable: () => Promise<void>;\n}\n\ndeclare global {\n    interface Window {\n        ethereum?: InjectedEthereum;\n        web3?: Web3;\n    }\n}\n\nconst showCircle = (percentage: number) => {\n    return <CircularProgressBar\n        className=\"circle--progress\"\n        percentage={percentage}\n        strokeWidth={18}\n        styles={{\n            path: {\n                stroke: \"#006FE8\",\n                strokeLinecap: \"butt\",\n                // strokeOpacity: 0.6,\n            },\n            trail: {\n                stroke: \"#006FE8\",\n                strokeOpacity: 0.2,\n            },\n        }}\n    />;\n};\n\nconst getWeb3 = async () => new Promise<Web3>(async (resolve, reject) => {\n    // Modern dApp browsers...\n    if (window.ethereum) {\n        window.web3 = new Web3(window.ethereum);\n        try {\n            // Request account access if needed\n            await window.ethereum.enable();\n            resolve(window.web3);\n\n        } catch (error) {\n            reject(error);\n        }\n    } else if (window.web3) {\n        // Legacy dApp browsers...\n        window.web3 = new Web3(window.web3.currentProvider);\n        // Accounts always exposed\n        resolve(window.web3);\n    } else {\n        // Non-dApp browsers...\n        reject(\"Non-Ethereum browser detected. You should consider trying MetaMask!\");\n    }\n});\n\nconst SwapControllerClass = (props: Props) => {\n    const { store: { ethereumAddress, redeemedUTXOs, darknodeGroup, renVMMessages, signatures, utxoToMessage, messageToUtxos } } = props;\n\n    const [mounted, setMounted] = React.useState(false);\n\n    const [error, setError] = React.useState<string | undefined>(undefined);\n    const [depositAddress, setDepositAddress] = React.useState<{ zec: string; btc: string; eth: string } | undefined>(undefined);\n    const [checking, setChecking] = React.useState(false);\n    const [utxos, setUTXOs] = React.useState<UTXO[]>([]);\n    const [redeeming, setRedeeming] = React.useState(false);\n    const [showingDeposit, setShowingDeposit] = React.useState<string | undefined>();\n    const [checkingResponse, setCheckingResponse] = React.useState(Map<string, boolean>());\n    const [redeemingOnEthereum, setRedeemingOnEthereum] = React.useState(Map<string, boolean>());\n\n    const onChange = (event: React.FormEvent<HTMLInputElement>) => {\n        const element = (event.target as HTMLInputElement);\n        const value = element.value;\n        props.actions.setEthereumAddress(value);\n        setDepositAddress(undefined);\n        setUTXOs([]);\n    };\n\n    const checkForResponse = async (id: string) => {\n        const renVMMessage = renVMMessages.get(id);\n        if (!renVMMessage) {\n            return;\n        }\n        setCheckingResponse(checkingResponse.set(id, true));\n        try {\n            const signature = await darknodeGroup.checkForResponse(renVMMessage);\n            props.actions.addToSignatures({ utxo: id, signature });\n        } catch (error) {\n            console.error(error);\n        }\n        setCheckingResponse(checkingResponse.remove(id));\n    };\n\n    const onSubmit = async (altDepositAddress?: string) => {\n        altDepositAddress = altDepositAddress || (depositAddress && depositAddress.btc) || \"\";\n        if (!altDepositAddress) {\n            setError(`No deposit address defined.`);\n            return;\n        }\n\n        setChecking(true);\n        setError(undefined);\n\n        const promises = renVMMessages.map(async (_, time) => {\n            // tslint:disable-next-line: no-console\n            return checkForResponse(time).catch(console.error);\n        }).valueSeq().toArray();\n\n        try {\n            const newUTXOs = await getTestnetUTXOs(altDepositAddress, 10, 0);\n            setUTXOs(newUTXOs);\n        } catch (error) {\n            setError(`${error && error.toString ? error.toString() : error}`);\n        }\n\n        try {\n            await Promise.all(promises);\n        } catch (error) {\n            // tslint:disable-next-line: no-console\n            console.error(error);\n        }\n\n        setChecking(false);\n    };\n\n    // Call onSubmit without passing in click-event parameters\n    const onRefresh = () => onSubmit();\n\n    // tslint:disable-next-line: no-any\n    const onGenerateAddress = (e?: any) => {\n        if (e && e.preventDefault) {\n            e.preventDefault();\n        }\n        setError(undefined);\n        setUTXOs([]);\n        if (ethereumAddress) {\n            let btcAddress: string;\n            try {\n                btcAddress = createTestnetAddress(ethereumAddress);\n            } catch (error) {\n                setError(`${error && error.toString ? error.toString() : error}`);\n                return;\n            }\n            setDepositAddress({ btc: btcAddress, zec: \"NO ZCASH PLS\", eth: ethereumAddress });\n            // tslint:disable-next-line: no-console\n            onSubmit(btcAddress).catch(console.error);\n        }\n    };\n\n    if (!mounted && ethereumAddress && ethereumAddress.length === 42 && !depositAddress) {\n        onGenerateAddress();\n    }\n\n    if (!mounted) {\n        setMounted(true);\n    }\n\n    const onRedeem = async () => {\n        setRedeeming(true);\n        if (!ethereumAddress) {\n            return;\n        }\n\n        const id = Date().toString();\n\n        try {\n            const messages = await darknodeGroup.submitDeposits(ethereumAddress);\n            props.actions.addToRenVMMessages({ utxo: id, messages });\n            props.actions.addToMessageToUtxos({ message: id, utxos: List(utxos) });\n        } catch (error) {\n            console.error(error);\n            setRedeeming(false);\n            setError(`${error && error.toString ? error.toString() : error}`);\n            return;\n        }\n        for (const utxo of utxos) {\n            props.actions.addToRedeemedUTXOs(utxo.txHash);\n            props.actions.addToUtxoToMessage({ utxo: utxo.txHash, message: id });\n        }\n        setRedeeming(false);\n    };\n\n    const getMetaMaskAddress = async () => {\n        try {\n            const web3 = await getWeb3();\n            const addresses = await web3.eth.getAccounts();\n            props.actions.setEthereumAddress(addresses[0]);\n        } catch (error) {\n            setError(`${error && error.toString ? error.toString() : error}`);\n        }\n    };\n\n    const hideDeposit = (): void => {\n        setShowingDeposit(undefined);\n    };\n\n    const showDeposit = (e: React.MouseEvent<HTMLDivElement>): void => {\n        const id = e.currentTarget.dataset ? e.currentTarget.dataset.id : undefined;\n        if (id) {\n            if (id === showingDeposit) {\n                hideDeposit();\n            } else {\n                setShowingDeposit(id);\n            }\n        }\n    };\n\n    const redeemOnEthereum = async (id: string) => {\n        const signature = signatures.get(id);\n        if (!signature) {\n            return;\n        }\n        setRedeemingOnEthereum(redeemingOnEthereum.set(id, true));\n        try {\n            // const web3 = await getWeb3();\n        } catch (error) {\n            setError(`${error && error.toString ? error.toString() : error}`);\n        }\n        setRedeemingOnEthereum(redeemingOnEthereum.remove(id));\n    };\n\n    return <div className=\"swap container\">\n        <div className=\"block\">\n            <form onSubmit={onGenerateAddress} className=\"swap--eth--form\">\n                <div className=\"swap--eth--input\">\n                    <input type=\"text\" value={ethereumAddress} onChange={onChange} placeholder=\"Enter Ethereum address for receiving\" />\n                    <button className=\"metamask-logo\" onClick={getMetaMaskAddress}><MetaMask /></button>\n                    <input type=\"submit\" className=\"button--white swap--eth--submit\" disabled={!ethereumAddress} value=\"Go\" />\n                </div>\n            </form>\n        </div>\n        {depositAddress ?\n            <>\n                <div className=\"block\">\n                    <h3>Currencies</h3>\n                    <div className=\"currencies\">\n                        {[\"btc\", \"zec\", \"eth\"].map((currency) => {\n                            return <div\n                                className={`currency ${currency}`}\n                                data-id={currency}\n                                onClick={showDeposit}\n                                role=\"button\"\n                                key={currency}\n                            >\n                                <TokenIcon token={currency.toUpperCase()} />\n                            </div>;\n                        })}\n                    </div>\n\n                    <div className={`deposit-address ${showingDeposit}`}>\n                        <div>\n                            {showingDeposit ? <>Deposit {showingDeposit.toUpperCase()} to <b>{depositAddress[showingDeposit]}</b></> : null}\n                        </div>\n                    </div>\n                </div>\n\n                {error ? <p className=\"red\">{error}</p> : null}\n\n                <div className=\"block deposits\">\n                    <div className=\"deposits--title\">\n                        <h3>Deposits</h3>\n                        <button disabled={checking} className=\"button--white\" onClick={onRefresh}>{checking ? <div className=\"checking\"><Loading /></div> : <>Refresh</>}</button>\n                    </div>\n                    {utxos.filter(utxo => !utxoToMessage.has(utxo.txHash)).map((utxo) => {\n                        const redeemingUTXO = redeemedUTXOs.contains(utxo.txHash);\n                        return <div key={utxo.txHash} className={`utxo ${redeemingUTXO ? \"utxo--redeemed\" : \"\"}`} >\n                            {showCircle(33)}\n                            <div className=\"utxo--right\">\n                                <span>Deposited <b>{utxo.amount / (10 ** 8)} BTC</b>{redeemingUTXO ? <>{\" \"}<span className=\"tag\">REDEEMING</span></> : null}</span>\n                                <a rel=\"noreferrer\" target=\"_blank\" href={`https://live.blockcypher.com/btc-testnet/tx/${utxo.txHash}`}>\n                                    <span className=\"utxo--txid\">{utxo.txHash}</span>\n                                </a>\n                            </div>\n                            <div className=\"utxo--buttons\">\n                                {!redeemingUTXO ? <button disabled={redeeming} className=\"button\" onClick={onRedeem}>{redeeming ? <Loading alt={true} /> : <>Send to darknodes</>}</button> : null}\n                            </div>\n                        </div>;\n                    })}\n                    {renVMMessages.map((renVMMessage, time) => {\n                        // const first = renVMMessage.first(undefined);\n                        const loading = signatures.has(time) ? redeemingOnEthereum.get(time) : checkingResponse.get(time);\n                        const messageUtxos = messageToUtxos.get(time);\n                        const value = messageUtxos ? messageUtxos.reduce((sum, utxo) => utxo.amount + sum, 0) : 0;\n                        return <div className=\"utxo\" key={time}>\n                            {showCircle(66)}\n                            <div className=\"utxo--right\">\n                                <span>Deposited <b>{value / (10 ** 8)} BTC</b></span>\n                                <span className=\"utxo--txid\">Sent to <b>{renVMMessage.size} darknodes</b></span>\n                                {/* <span className=\"utxo--txid\">{first ? first.messageID : \"\"}</span> */}\n                                <span className=\"utxo--txid\">{time}</span>\n                            </div>\n                            <div className=\"utxo--buttons\">\n                                {signatures.has(time) ?\n                                    <>\n                                        {/* tslint:disable-next-line: react-this-binding-issue jsx-no-lambda */}\n                                        <button className=\"button\" onClick={() => { redeemOnEthereum(time).catch(console.error); }} disabled={loading}>{loading ? <Loading /> : <>Redeem on Ethereum</>}</button>\n                                    </>\n                                    :\n                                    <>\n                                        {/* tslint:disable-next-line: react-this-binding-issue jsx-no-lambda */}\n                                        <button className=\"button--white\" onClick={() => { checkForResponse(time).catch(console.error); }} disabled={loading}>{loading ? <Loading /> : <>Check for response</>}</button>\n                                    </>\n                                }\n                            </div>\n                        </div>;\n                    }).toList()}\n                </div>\n            </> : null}\n    </div >;\n};\n\nconst mapStateToProps = (state: ApplicationData) => ({\n    store: {\n        ethereumAddress: state.general.ethereumAddress,\n        redeemedUTXOs: state.general.redeemedUTXOs,\n        darknodeGroup: state.general.darknodeGroup,\n        renVMMessages: state.general.renVMMessages,\n        utxoToMessage: state.general.utxoToMessage,\n        messageToUtxos: state.general.messageToUtxos,\n        signatures: state.general.signatures,\n    }\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n    actions: bindActionCreators({\n        setEthereumAddress,\n        addToRedeemedUTXOs,\n        addToRenVMMessages,\n        addToSignatures,\n        addToUtxoToMessage,\n        addToMessageToUtxos,\n    }, dispatch)\n});\n\ninterface Props extends ReturnType<typeof mapStateToProps>, ConnectedReturnType<typeof mapDispatchToProps> {\n}\n\nexport const SwapController = connect(mapStateToProps, mapDispatchToProps)(SwapControllerClass);\n","import * as React from \"react\";\n\nimport { connect, ConnectedReturnType } from \"react-redux\"; // Custom typings\nimport { Router, withRouter } from \"react-router-dom\";\nimport { bindActionCreators, Dispatch } from \"redux\";\n\nimport { FeedbackButton, ScrollToTop as ScrollToTopWithoutRouter } from \"@renex/react-components\";\n\nimport { _captureBackgroundException_ } from \"../../lib/errors\";\nimport { history } from \"../../lib/history\";\nimport { ApplicationData } from \"../../store/types/general\";\nimport { _catch_ } from \"../views/ErrorBoundary\";\nimport { BackgroundTasks } from \"./BackgroundTasks\";\nimport { HeaderController } from \"./HeaderController\";\nimport { SwapController } from \"./SwapController\";\n\nconst ScrollToTop = withRouter(ScrollToTopWithoutRouter);\n\n/**\n * App is the main visual component responsible for displaying different routes\n * and running background app loops\n */\nclass AppClass extends React.Component<Props, State> {\n    /**\n     * The main render function.\n     * @dev Should have minimal computation, loops and anonymous functions.\n     */\n    public render(): React.ReactNode {\n        return (\n            <Router history={history}>\n                <main className=\"theme-light\">\n                    <div className=\"themed-app\">\n                        {_catch_(<BackgroundTasks />)}\n                        <ScrollToTop />\n\n                        <div>\n                            {_catch_(<HeaderController />)}\n                            {_catch_(<SwapController />)}\n                            {_catch_(<FeedbackButton url=\"#\" />)}\n                        </div>\n                    </div>\n                </main>\n            </Router>\n        );\n    }\n}\n\nconst mapStateToProps = (state: ApplicationData) => ({\n    store: {\n    }\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n    actions: bindActionCreators({\n    }, dispatch)\n});\n\ninterface Props extends ReturnType<typeof mapStateToProps>, ConnectedReturnType<typeof mapDispatchToProps> {\n}\n\ninterface State {\n}\n\nexport const App = connect(mapStateToProps, mapDispatchToProps)(AppClass);\n","export type DarknodeID = { id: string };\nexport const NewDarknodeID = (id: string) => ({ id });\n\nexport type MultiAddress = { multiAddress: string };\nexport const NewMultiAddress = (multiAddress: string) => ({ multiAddress });\n\nexport const multiAddressToID = (multiAddress: MultiAddress): DarknodeID => {\n    const split = multiAddress.multiAddress.split(\"/\");\n    return { id: split[split.length - 1] };\n};\n","import axios, { AxiosResponse } from \"axios\";\n\nimport { MultiAddress } from \"../types/types\";\nimport {\n    AddressesRequest,\n    AddressesResponse,\n    EpochResponse,\n    HealthResponse,\n    NumPeersResponse,\n    PeersResponse,\n    ReceiveMessageRequest,\n    ReceiveMessageResponse,\n    SendMessageRequest,\n    SendMessageResponse,\n} from \"./types\";\n\nexport class Darknode {\n    public multiAddress: MultiAddress;\n    private readonly url: string;\n\n    constructor(multiAddress: MultiAddress) {\n        this.multiAddress = multiAddress;\n        if (multiAddress.multiAddress.charAt(0) === \"/\") {\n            try {\n                const [_, _ip4, ip, _tcp, port, _ren, _id] = multiAddress.multiAddress.split(\"/\");\n                const fixedPort = port === \"18514\" ? \"18515\" : port;\n                // tslint:disable-next-line: no-http-string\n                this.url = `http://${ip}:${fixedPort}`;\n            } catch (error) {\n                throw new Error(`Malformatted multiAddress: ${multiAddress}`);\n            }\n        } else {\n            this.url = multiAddress.multiAddress;\n        }\n    }\n\n    public async getHealth(): Promise<HealthResponse> {\n        let resp;\n        try {\n            resp = await axios.post(`${this.url}`, this.generatePayload(\"ren_healthCheck\"));\n            if (resp.status !== 200) {\n                throw this.responseError(\"Unexpected status code returned by Darknode\", resp);\n            }\n        } catch (error) {\n            if (error.response) {\n                throw new Error(\n                    `Darknode returned status ${error.response.status} with reason: ${error.response.data}`,\n                );\n            } else {\n                throw error;\n            }\n        }\n        return resp.data as HealthResponse;\n    }\n\n    public async getPeers(): Promise<PeersResponse> {\n        let resp;\n        try {\n            resp = await axios.post(`${this.url}`, this.generatePayload(\"ren_queryPeers\"));\n            if (resp.status !== 200) {\n                throw this.responseError(\"Unexpected status code returned by Darknode\", resp);\n            }\n        } catch (error) {\n            if (error.response) {\n                throw new Error(\n                    `Darknode returned status ${error.response.status} with reason: ${error.response.data}`,\n                );\n            } else {\n                throw error;\n            }\n        }\n        return resp.data as PeersResponse;\n    }\n\n    public async getNumberOfPeers(): Promise<NumPeersResponse> {\n        let resp;\n        try {\n            resp = await axios.post(`${this.url}`, this.generatePayload(\"ren_queryNumPeers\"));\n            if (resp.status !== 200) {\n                throw this.responseError(\"Unexpected status code returned by Darknode\", resp);\n            }\n        } catch (error) {\n            if (error.response) {\n                throw new Error(\n                    `Darknode returned status ${error.response.status} with reason: ${error.response.data}`,\n                );\n            } else {\n                throw error;\n            }\n        }\n        return resp.data as NumPeersResponse;\n    }\n\n    public async getEpoch(): Promise<EpochResponse> {\n        let resp;\n        try {\n            resp = await axios.post(`${this.url}`, this.generatePayload(\"ren_queryEpoch\"));\n            if (resp.status !== 200) {\n                throw this.responseError(\"Unexpected status code returned by Darknode\", resp);\n            }\n        } catch (error) {\n            if (error.response) {\n                throw new Error(\n                    `Darknode returned status ${error.response.status} with reason: ${error.response.data}`,\n                );\n            } else {\n                throw error;\n            }\n        }\n        return resp.data as EpochResponse;\n    }\n\n    public async getAddresses(request: AddressesRequest): Promise<AddressesResponse> {\n        let resp;\n        try {\n            resp = await axios.post(`${this.url}`, this.generatePayload(\"ren_queryAddresses\", request));\n            if (resp.status !== 200) {\n                throw this.responseError(\"Unexpected status code returned by Darknode\", resp);\n            }\n        } catch (error) {\n            if (error.response) {\n                throw new Error(\n                    `Darknode returned status ${error.response.status} with reason: ${error.response.data}`,\n                );\n            } else {\n                throw error;\n            }\n        }\n        return resp.data as AddressesResponse;\n    }\n\n    public async sendMessage(request: SendMessageRequest): Promise<SendMessageResponse> {\n        let resp;\n        try {\n            resp = await axios.post(`${this.url}`, this.generatePayload(\"ren_sendMessage\", request));\n            if (resp.status !== 200) {\n                throw this.responseError(\"Unexpected status code returned by Darknode\", resp);\n            }\n        } catch (error) {\n            if (error.response) {\n                throw new Error(\n                    `Darknode returned status ${error.response.status} with reason: ${error.response.data}`,\n                );\n            } else {\n                throw error;\n            }\n        }\n        return resp.data as SendMessageResponse;\n    }\n\n    public async receiveMessage(request: ReceiveMessageRequest): Promise<ReceiveMessageResponse> {\n        let resp;\n        try {\n            resp = await axios.post(`${this.url}`, this.generatePayload(\"ren_receiveMessage\", request));\n            if (resp.status !== 200) {\n                throw this.responseError(\"Unexpected status code returned by Darknode\", resp);\n            }\n        } catch (error) {\n            if (error.response) {\n                throw new Error(\n                    `Darknode returned status ${error.response.status} with reason: ${error.response.data}`,\n                );\n            } else {\n                throw error;\n            }\n        }\n        return resp.data as ReceiveMessageResponse;\n    }\n\n    private generatePayload(method: string, params?: unknown) {\n        return {\n            id: 1,\n            jsonrpc: \"2.0\",\n            method,\n            params,\n            version: \"0.0\",\n        };\n    }\n\n    private responseError(msg: string, response: AxiosResponse): ResponseError {\n        const error = new Error(msg) as ResponseError;\n        error.response = response;\n        return error;\n    }\n}\n\ninterface ResponseError extends Error {\n    response: AxiosResponse;\n}\n","import { List, Map } from \"immutable\";\n\nimport { MultiAddress, multiAddressToID, NewMultiAddress } from \"../types/types\";\nimport { Darknode } from \"./darknode\";\nimport {\n    HealthResponse,\n    ReceiveMessageRequest,\n    ReceiveMessageResponse,\n    SendMessageRequest,\n    SendMessageResponse,\n} from \"./types\";\n\nconst bootStrapNode0 = NewMultiAddress(\"/ip4/3.88.22.140/tcp/18515/8MJpA1rXYMPTeJoYjsFBHJcuYBe7zP\");\nconst bootStrapNode1 = NewMultiAddress(\"/ip4/34.219.91.31/tcp/18515/8MH9zGoDLJKiXrhqWLXTzHp1idfxte\");\nconst bootStrapNode2 = NewMultiAddress(\"/ip4/3.92.234.171/tcp/18515/8MGJGnGLdYF6x5YuhkAmgfj6kknJBb\");\nconst bootStrapNode3 = NewMultiAddress(\"/ip4/35.183.181.45/tcp/18515/8MJppC57CkHzDQVAAPTotQGGyzqJ2r\");\nconst bootStrapNode4 = NewMultiAddress(\"/ip4/13.233.251.189/tcp/18515/8MHdUqYXcEhisZipM3hXPsFxHfM3VH\");\nconst bootStrapNode5 = NewMultiAddress(\"/ip4/34.221.196.212/tcp/18515/8MJd7zB9GXsvpm2cSECFP4Bof5G3i8\");\nconst bootStrapNode6 = NewMultiAddress(\"/ip4/35.158.105.90/tcp/18515/8MJN1hHhdcJwzDoj35zRLL3zE3yk45\");\nconst bootStrapNode7 = NewMultiAddress(\"/ip4/52.67.113.89/tcp/18515/8MKYusXyZAGVRn76vTmnK9FWmmPbJj\");\n\nexport const bootstrapNodes = [\n    bootStrapNode0,\n    bootStrapNode1,\n    bootStrapNode2,\n    bootStrapNode3,\n    bootStrapNode4,\n    bootStrapNode5,\n    bootStrapNode6,\n    bootStrapNode7,\n];\n\nconst promiseAll = async <a>(list: List<Promise<a>>, defaultValue: a): Promise<List<a>> => {\n    let newList = List<a>();\n    for (const entryP of list.toArray()) {\n        try {\n            newList = newList.push(await entryP);\n        } catch (error) {\n            newList = newList.push(defaultValue);\n        }\n    }\n    return newList;\n};\n\n/**\n * DarknodeGroup allows sending messages to multiple darknodes\n */\nexport class DarknodeGroup {\n    public bootstraps = List<MultiAddress>();\n    public darknodes = Map<string, Darknode>();\n\n    constructor(multiAddresses: MultiAddress[] | MultiAddress) {\n        if (Array.isArray(multiAddresses)) {\n            this.bootstraps = this.bootstraps.concat(multiAddresses);\n            this.addDarknodes(multiAddresses);\n        } else {\n            this.addDarknodes([multiAddresses]);\n        }\n        this.bootstraps = this.bootstraps.concat(multiAddresses);\n    }\n\n    public bootstrap = async (): Promise<this> => {\n        let success = false;\n        let lastError;\n        for (const multiAddress of this.bootstraps.toArray()) {\n            try {\n                const result: Darknode | undefined = this.darknodes.get(multiAddressToID(multiAddress).id);\n                if (!result) {\n                    throw new Error(\"No darknode provided\");\n                }\n                const peers = await result.getPeers();\n                this.addDarknodes(peers.result.peers.map(NewMultiAddress));\n                success = true;\n            } catch (error) {\n                lastError = error;\n            }\n        }\n        if (!success) {\n            throw lastError;\n        }\n        return this;\n    }\n\n    public getHealth = async (): Promise<List<HealthResponse | null>> => {\n        return promiseAll<HealthResponse | null>(\n            this.darknodes.valueSeq().map(darknode => darknode.getHealth()).toList(),\n            null,\n        );\n    }\n\n    public sendMessage = async (request: SendMessageRequest): Promise<List<{ result: SendMessageResponse, multiAddress: MultiAddress } | null>> => {\n        return promiseAll<{ result: SendMessageResponse, multiAddress: MultiAddress } | null>(\n            this.darknodes.valueSeq().map(async (darknode) => ({\n                multiAddress: darknode.multiAddress,\n                result: await darknode.sendMessage(request),\n            })).toList(),\n            null,\n        );\n    }\n\n    public receiveMessage = async (request: ReceiveMessageRequest): Promise<List<ReceiveMessageResponse | null>> => {\n        return promiseAll<ReceiveMessageResponse | null>(\n            this.darknodes.valueSeq().map(darknode => darknode.receiveMessage(request)).toList(),\n            null,\n        );\n    }\n\n    private readonly addDarknodes = (multiAddresses: MultiAddress[]): this => {\n        for (const multiAddress of multiAddresses) {\n            this.darknodes = this.darknodes.set(multiAddressToID(multiAddress).id, new Darknode(multiAddress));\n        }\n        return this;\n    }\n}\n\nexport class WarpGateGroup extends DarknodeGroup {\n    constructor(multiAddresses: MultiAddress[] | MultiAddress) {\n        super(multiAddresses);\n        // this.getHealth();\n    }\n\n    public submitDeposits = async (address: string): Promise<List<{ messageID: string, multiAddress: MultiAddress }>> => {\n        const results = await this.sendMessage({\n            nonce: 0,\n            to: \"WarpGate\",\n            signature: \"\",\n            payload: {\n                method: \"MintZBTC\",\n                args: [\n                    {\n                        value: address.slice(0, 2) === \"0x\" ? address.slice(2) : address,\n                    }\n                ],\n            },\n        });\n\n        if (results.filter(x => x !== null).size < 1) {\n            throw new Error(\"Unable to send message to enough darknodes.\");\n        }\n\n        return results.filter(x => x !== null).map((result) => ({\n            // tslint:disable: no-non-null-assertion no-unnecessary-type-assertion\n            multiAddress: result!.multiAddress,\n            messageID: result!.result.result.messageID,\n            // tslint:enable: no-non-null-assertion no-unnecessary-type-assertion\n        })).toList();\n    }\n\n    public checkForResponse = async (messages: List<{ messageID: string, multiAddress: MultiAddress }>): Promise<string> => {\n        for (const { messageID, multiAddress } of messages.toArray()) {\n            const node = this.darknodes.get(multiAddressToID(multiAddress).id);\n            if (node) {\n                try {\n                    const signature = await node.receiveMessage({ messageID });\n                    // Error:\n                    // { \"jsonrpc\": \"2.0\", \"version\": \"0.1\", \"error\": { \"code\": -32603, \"message\": \"result not available\", \"data\": null }, \"id\": null }\n                    // Success:\n                    // (TODO)\n                    if (signature.result) {\n                        console.log(signature.result);\n                        return signature.result.payload.args;\n                    }\n                } catch (error) {\n                    console.error(error);\n                }\n            }\n        }\n        throw new Error(`Signature not available`);\n    }\n}\n","import { List, Map, Set } from \"immutable\";\n\n/**\n * TYPE can be (recursively defined):\n *\n * 1) result of `typeof` (\"object\", \"number\", \"string\")\n * 2) TYPE[]\n * 3) List<TYPE>\n * 4) Set<TYPE>\n */\ntype TYPE = string;\n\nconst isArrayType = (type: TYPE) => type.slice(-2) === \"[]\";\nconst isListType = (type: TYPE) => type.slice(0, 5) === \"List<\" && type.slice(-1) === \">\";\nconst isSetType = (type: TYPE) => type.slice(0, 4) === \"Set<\" && type.slice(-1) === \">\";\nconst isMapType = (type: TYPE) => type.slice(0, 12) === \"Map<string, \" && type.slice(-1) === \">\";\n\n/**\n * validateType takes two parameters - a target type and a value, and checks\n * that the value can be converted to that type, returning the converted value\n * or throwing an error. Only List/Set conversions are supported.\n *\n * It is used for for deserializing JSON to Immutable types.\n *\n * Example:\n *      validateType(\"string\", \"abc\") => \"abc\"\n *      validateType(\"number\", 1) => 1\n *      validateType(\"string\", 1) => Err\n *      validateType(\"List<string>\", [ \"abc\" ]) => List [ \"abc\" ]\n *      validateType(\"Set<string>\", [ \"abc\" ]) => Set { \"abc\" }\n *\n * @param type The expected type as either X or X[] (etc.) where X is the output\n * of `typeof`\n * @param object The value to check the type of\n */\nexport const validateType = (type: TYPE, object: unknown): unknown => {\n    if (isArrayType(type)) {\n        const subtype = type.slice(0, -2);\n        return (object as unknown[]).map((e) => validateType(subtype, e));\n    } else if (isListType(type)) {\n        const subtype = type.slice(5, -1);\n        return List((object as unknown[]).map((e) => validateType(subtype, e)));\n    } else if (isSetType(type)) {\n        const subtype = type.slice(4, -1);\n        return Set((object as unknown[]).map((e) => validateType(subtype, e)));\n    } else if (isMapType(type)) {\n        const subtype = type.slice(12, -1);\n        return Map(object as { [key: string]: {}; }).map(e => validateType(subtype, e));\n    }\n    if (typeof object === type) {\n        return object;\n    }\n    throw new Error(`Unexpected value of type ${typeof object} (expected ${type})`);\n};\n","import thunk from \"redux-thunk\";\n\nimport { Action, applyMiddleware, createStore, Middleware, Reducer } from \"redux\";\nimport { PersistConfig, persistReducer } from \"redux-persist\";\n\nimport { environment } from \"../lib/environmentVariables\";\nimport { rootReducer } from \"../store/reducers/rootReducer\";\nimport { persistConfig } from \"./persistConfig\";\n\nconst middlewares: Middleware[] = [\n    thunk,\n];\n\n// Log Redux actions (only in development)\nif (environment === \"local\") {\n    // middlewares.push(createLogger({ collapsed: true }));\n}\n\n// Workaround createStore not liking type of persistReducer\nconst typedPersistReducer = <S, A extends Action>(config: PersistConfig, reducer: Reducer<S, A>) => {\n    return persistReducer<S, A>(\n        config,\n        reducer\n    );\n};\n\nconst persistedReducer = typedPersistReducer(persistConfig, rootReducer);\n\nexport const configureStore = () => createStore(\n    persistedReducer,\n    applyMiddleware(...middlewares),\n);\n","import { combineReducers } from \"redux\";\n\nimport { generalReducer } from \"./general/generalReducer\";\nimport { marketReducer } from \"./market/marketReducer\";\n\nimport { ApplicationData } from \"../types/general\";\n\nexport const rootReducer = combineReducers<ApplicationData>({\n    general: generalReducer,\n    marketPrices: marketReducer,\n});\n","import { ActionType, getType } from \"typesafe-actions\";\n\nimport * as generalActions from \"../../../store/actions/general/generalActions\";\n\nimport { GeneralData } from \"../../types/general\";\n\ntype GeneralActions = ActionType<typeof generalActions>;\n\n// tslint:disable-next-line: cyclomatic-complexity\nexport const generalReducer = (state: GeneralData = new GeneralData(), action: GeneralActions) => {\n    switch (action.type) {\n        case getType(generalActions.setQuoteCurrency):\n            return state.set(\"quoteCurrency\", action.payload);\n\n        case getType(generalActions.setEthereumAddress):\n            return state.set(\"ethereumAddress\", action.payload);\n\n        case getType(generalActions.addToRedeemedUTXOs):\n            return state.set(\"redeemedUTXOs\", state.redeemedUTXOs.add(action.payload));\n\n        case getType(generalActions.addToRenVMMessages):\n            return state.set(\"renVMMessages\", state.renVMMessages.set(action.payload.utxo, action.payload.messages));\n\n        case getType(generalActions.addToUtxoToMessage):\n            return state.set(\"utxoToMessage\", state.utxoToMessage.set(action.payload.utxo, action.payload.message));\n\n        case getType(generalActions.addToMessageToUtxos):\n            return state.set(\"messageToUtxos\", state.messageToUtxos.set(action.payload.message, action.payload.utxos));\n\n        case getType(generalActions.addToSignatures):\n            return state.set(\"signatures\", state.signatures.set(action.payload.utxo, action.payload.signature));\n\n        default:\n            return state;\n    }\n};\n","import { ActionType, getType } from \"typesafe-actions\";\n\nimport * as marketActions from \"../../../store/actions/market/marketActions\";\n\nimport { MarketPrice, MarketPriceData } from \"../../types/general\";\n\ntype MarketAction = ActionType<typeof marketActions>;\n\nexport const marketReducer = (state: MarketPriceData = new MarketPriceData(), action: MarketAction) => {\n    switch (action.type) {\n        case getType(marketActions.updatePrices):\n            const { price, percentChange } = action.payload;\n            const marketPrice: MarketPrice = { price, percentChange };\n            return state.set(\"marketPrices\", state.marketPrices.set(action.payload.pair, marketPrice));\n\n        case getType(marketActions.pricesUpdating):\n            return state.set(\"updating\", action.payload);\n\n        case getType(marketActions.setTokenPrices):\n            return state.set(\"tokenPrices\", action.payload.tokenPrices);\n\n        default:\n            return state;\n    }\n};\n","import storage from \"redux-persist/lib/storage\";\n\nimport { createTransform, PersistConfig } from \"redux-persist\";\n\nimport { _captureBackgroundException_ } from \"../lib/errors\";\nimport { ApplicationData, GeneralData } from \"./types/general\";\n\n// Local Storage:\n\nconst generalTransform = createTransform<GeneralData, string>(\n    (inboundState: GeneralData, key: string): string => {\n        try {\n            return inboundState.serialize();\n        } catch (error) {\n            // tslint:disable-next-line: no-console\n            console.error(`Error serializing ${key} (${JSON.stringify(inboundState)}): ${error}`);\n            _captureBackgroundException_(error, { description: \"Error serializing local storage\" });\n            throw error;\n        }\n    },\n    (outboundState: string, key: string): GeneralData => {\n        try {\n            return new GeneralData().deserialize(outboundState);\n        } catch (error) {\n            // tslint:disable-next-line: no-console\n            console.error(`Error deserializing ${key} (${JSON.stringify(outboundState)}): ${error}`);\n            _captureBackgroundException_(error, { description: \"Error deserializing local storage\" });\n            throw error;\n        }\n    },\n    { whitelist: [\"general\"] as Array<keyof ApplicationData>, },\n);\n\nexport const persistConfig: PersistConfig = {\n    storage,\n    key: \"root\",\n    whitelist: [\"general\"] as Array<keyof ApplicationData>,\n    transforms: [generalTransform],\n};\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\n\nimport { Provider } from \"react-redux\";\nimport { persistStore } from \"redux-persist\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nimport { App } from \"./components/controllers/App\";\nimport { _catch_ } from \"./components/views/ErrorBoundary\";\nimport { onLoad } from \"./lib/onLoad\";\nimport { configureStore } from \"./store/configureStore\";\n\nimport \"./styles/index.scss\";\n\nexport const store = configureStore();\n\nonLoad(\"RenXCS\");\n\nReactDOM.render(\n    _catch_(<Provider store={store}>\n        <PersistGate loading={null} persistor={persistStore(store)}>\n            <App />\n        </PersistGate>\n    </Provider>),\n    document.getElementById(\"root\") as HTMLElement\n);\n","import * as Sentry from \"@sentry/browser\";\n\nimport { _catch_ } from \"../components/views/ErrorBoundary\";\nimport { environment, NETWORK, SENTRY_DSN, SOURCE_VERSION } from \"./environmentVariables\";\nimport { pageLoadedAt } from \"./errors\";\n\nexport const onLoad = (title: string) => {\n\n    // Initialize Sentry error logging\n    Sentry.init({\n        // Used to define the project to log errors to\n        dsn: SENTRY_DSN,\n\n        // Used to separate testnet and mainnet errors\n        environment,\n\n        // Used to track errors across versions\n        release: SOURCE_VERSION,\n\n        // Only throw errors generated from scripts at these URLs\n        whitelistUrls: [\n            /.*republicprotocol.*/i,\n            /.*renproject.*/i,\n\n            // Local testing (localhost and IPv4 addresses)\n            /.*localhost.*/i,\n            /.*(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).*/\n        ],\n    });\n\n    Sentry.configureScope((scope) => {\n        scope.setExtra(\"loggedIn\", false);\n\n        // We set this to false when logging to Sentry explicitly.\n        scope.setExtra(\"caught\", false);\n\n        scope.setExtra(\"release\", SOURCE_VERSION);\n\n        scope.setExtra(\"pageLoadedAt\", pageLoadedAt());\n    });\n\n    // Update document title to show network\n    if (NETWORK !== \"mainnet\") {\n        document.title = `${title} (${NETWORK})`;\n    } else {\n        document.title = title; // Also set in index.html\n    }\n\n    // tslint:disable-next-line: no-console\n    console.log(`${title} version hash: ${SOURCE_VERSION}`);\n};\n"],"sourceRoot":""}