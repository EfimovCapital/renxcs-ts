{"version":3,"sources":["lib/darknode/publicKey.ts","lib/blockchain/btc/common.ts","lib/util/errors.ts","lib/util/market.ts","lib/util/history.ts","lib/util/environmentVariables.ts","components/views/ErrorBoundary.tsx","store/actions/market/marketActions.ts","components/controllers/BackgroundTasks.tsx","store/actions/general/generalActions.ts","styles/images/logo.svg","styles/images/rp-flag-uk.svg","lib/blockchain/blockchain.ts","components/controllers/HeaderController.tsx","lib/blockchain/mercury.ts","lib/blockchain/btc/btc.ts","lib/blockchain/btc/zec.ts","styles/images/metamask.svg","store/types/general.ts","components/controllers/SwapController.tsx","components/controllers/App.tsx","lib/types/types.ts","lib/darknode/darknode.ts","lib/darknode/darknodeGroup.ts","lib/util/persist.ts","store/configureStore.ts","store/reducers/rootReducer.ts","store/reducers/general/generalReducer.ts","store/reducers/market/marketReducer.ts","store/persistConfig.ts","index.tsx","lib/util/onLoad.ts"],"names":["Buffer","__webpack_require__","d","__webpack_exports__","testnetMasterPKH","createAddress","networks","opcode","script","_ref","mainnet","masterPKH","address","add","substring","slice","OP_DROP","OP_DUP","OP_HASH160","OP_EQUALVERIFY","OP_CHECKSIG","toScriptHashOut","toAddress","livenet","testnet","toString","pageLoaded","Token","history","createBrowserHistory","environment","process","pageLoadedAt","naturalTime","Math","floor","getTime","message","suffix","countDown","Date","toUTCString","_captureException_","error","details","_noCapture_","Sentry","scope","setExtra","category","setTag","level","setLevel","Object","keys","forEach","key","response","data","status","errorObject","cache","rawErrorJSON","JSON","stringify","value","indexOf","parse","push","rawError","console","concat","toUpperCase","_unused","ignoreNetwork","match","isNetworkError","_captureBackgroundException_","objectSpread","_captureInteractionException_","_captureComponentException_","errorInfo","description","ErrorBoundary","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidCatch","setState","reportFeedback","state","react","style","whiteSpace","role","cursor","onClick","componentStack","children","React","_catch_","ErrorBoundary_ErrorBoundary","CoinGeckoIDs","Map","set","DAI","BTC","ETH","REN","TUSD","ZEC","WBTC","fetchDetails","asyncToGenerator","regenerator_default","a","mark","_callee","geckoID","url","wrap","_context","prev","next","fetch","sent","abrupt","json","stop","_x","apply","arguments","getTokenPricesInCurrencies","_ref3","_callee3","prices","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","tokenAndDetails","_tokenAndDetails","token","coinGeckoID","price","_context3","undefined","toSeq","toArray","Symbol","iterator","done","slicedToArray","market_data","current_price","t0","return","finish","updatePrices","createStandardAction","pricesUpdating","setTokenPrices","updateTokenPrices","_callee2","dispatch","_context2","Promise","resolve","reject","setTimeout","tokenPrices","BackgroundTasksClass","context","callBootstrapTimeout","callUpdatePricesTimeout","callUpdateMarketPricesTimeout","callUpdatePrices","delay","actions","clearTimeout","callBootstrap","callUpdateMarketPrices","setupLoops","catch","BackgroundTasks","connect","store","darknodeGroup","general","bindActionCreators","setQuoteCurrency","setEthereumAddress","addToRedeemedUTXOs","addToRenVMMessages","addToSignatures","addToUtxoToMessage","addToMessageToUtxos","_extends","assign","target","i","length","source","prototype","hasOwnProperty","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","logo_ref2","react_default","createElement","className","fillRule","clipRule","fill","logo_ref3","logo_ref4","logo_ref5","logo_ref6","logo_ref7","logo_ref8","logo_ref9","logo_ref10","_ref11","_ref12","_ref13","_ref14","logo_SvgLogo","svgRef","width","height","viewBox","ref","ForwardRef","forwardRef","p","rp_flag_uk_extends","rp_flag_uk_objectWithoutProperties","rp_flag_uk_objectWithoutPropertiesLoose","Currency","rp_flag_uk_ref2","rp_flag_uk_ref3","rp_flag_uk_ref4","rp_flag_uk_ref5","id","stroke","strokeWidth","points","rp_flag_uk_SvgRpFlagUk","rp_flag_uk_ForwardRef","currencyOptions","options","currencies","currency","lib_es","err","getCurrencyOptions","languageOptions","logo","react_router_dom","to","HeaderControllerClass","render","quoteCurrency","languageDropdown","selected","setValue","setLanguage","currencyDropdown","setCurrency","menu","language","HeaderController","getUTXOs","endpoint","limit","confirmations","resp","Axios","get","_x2","_x3","createBTCAddress","Networks","Opcode","Script","getBTCTestnetUTXOs","createBTCTestnetAddress","createZECAddress","getZECTestnetUTXOs","createZECTestnetAddress","DepositAddresses","receiveAddress","depositAddresses","utxos","btcDepositAddress","newBitcoinUTXOs","zecDepositAddress","newZcashUTXOs","_args","List","utxo","map","t1","t2","t3","metamask_extends","metamask_objectWithoutProperties","metamask_objectWithoutPropertiesLoose","UITheme","metamask_ref2","type","metamask_ref3","metamask_ref4","metamask_SvgMetamask","x","y","enableBackground","xmlSpace","metamask_ForwardRef","showCircle","percentage","dist_default","styles","path","strokeLinecap","trail","strokeOpacity","getWeb3","_ref2","window","ethereum","web3","Web3","enable","currentProvider","SwapController","ethereumAddress","redeemedUTXOs","renVMMessages","utxoToMessage","messageToUtxos","signatures","_props$store","_React$useState","_React$useState2","mounted","setMounted","_React$useState3","_React$useState4","setError","_React$useState5","_React$useState6","setDepositAddresses","_React$useState7","_React$useState8","checking","setChecking","_React$useState9","_React$useState10","setUTXOs","_React$useState11","_React$useState12","redeeming","setRedeeming","_React$useState13","_React$useState14","showingDeposit","setShowingDeposit","_React$useState15","_React$useState16","blur","setBlur","_React$useState17","_React$useState18","checkingResponse","setCheckingResponse","_React$useState19","_React$useState20","resubmitting","setResubmitting","_React$useState21","_React$useState22","redeemingOnEthereum","setRedeemingOnEthereum","resendMessage","time","submitDeposits","delete","checkForResponse","_ref4","_callee4","renVMMessage","signature","_context4","remove","_x4","onSubmit","_ref5","_callee6","promises","newUtxos","_context6","_ref6","_callee5","_","_context5","_x5","_x6","valueSeq","all","onGenerateAddress","e","preventDefault","onRedeem","_ref7","_callee7","messages","_context7","txHash","getMetaMaskAddress","_ref8","_callee8","addresses","_context8","eth","getAccounts","showDeposit","currentTarget","dataset","redeemOnEthereum","_ref9","_callee9","_context9","_x7","onChange","event","placeholder","disabled","data-id","filter","has","redeemingUTXO","contains","amount","pow","rel","href","alt","loading","messageUtxos","log","reduce","sum","size","toList","ScrollToTop","withRouter","ScrollToTopWithoutRouter","AppClass","react_router","App","NewMultiAddress","multiAddress","multiAddressToID","split","Darknode","charAt","_multiAddress$multiAd","_multiAddress$multiAd2","ip","port","fixedPort","Error","createClass","_getHealth","axios","post","generatePayload","responseError","_getPeers","_getNumberOfPeers","_getEpoch","_getAddresses","request","_sendMessage","_receiveMessage","method","params","jsonrpc","version","msg","bootstrapNodes","promiseAll","list","defaultValue","newList","entryP","WarpGateGroup","_DarknodeGroup","multiAddresses","_this2","results1","results2","results","sendMessage","nonce","payload","args","result","messageID","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_iterator4","_step4","_ref10","node","darknodes","receiveMessage","inherits","DarknodeGroup","bootstraps","bootstrap","success","lastError","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","peers","getPeers","addDarknodes","getHealth","darknode","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","Array","isArray","validateType","object","isArrayType","subtype","isListType","isSetType","Set","isMapType","config","reducer","syncedGeneralData","GeneralData","_Record","obj","_i","_Array$from","from","str","_i2","_Array$from2","shownToUser","alert","Record","ImmutableMap","advanced","theme","Light","advancedTheme","Dark","USD","MarketPriceData","_Record2","updating","marketPrices","OrderedMap","rootReducer","combineReducers","action","getType","generalActions","marketActions","_action$payload","marketPrice","percentChange","pair","generalTransform","createTransform","inboundState","serialize","outboundState","deserialize","whitelist","persistConfig","storage","transforms","middlewares","thunk","persistedReducer","persistReducer","title","createStore","applyMiddleware","dsn","release","whitelistUrls","document","ReactDOM","es","integration_react","persistor","persistStore","getElementById"],"mappings":"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","file":"static/js/main.c5493dd6.chunk.js","sourcesContent":["export const testnetMasterPKH = new Buffer(\"be8d41d9e47170a33d7d758ebf853551dea63ab8\", \"hex\");\n","import { Networks as BNetworks, Opcode as BOpcode, Script as ZScript } from \"bitcore-lib\";\nimport { Networks as ZNetworks, Opcode as ZOpcode, Script as zScript } from \"bitcore-lib-zcash\";\n\nexport const createAddress =\n    (networks: typeof BNetworks | typeof ZNetworks, opcode: typeof BOpcode | typeof ZOpcode, script: typeof ZScript | typeof zScript) =>\n        ({ mainnet, masterPKH }: { mainnet: boolean, masterPKH: Buffer }) =>\n            (address: string) =>\n                new script()\n                    .add(new Buffer(address.substring(0, 2) === \"0x\" ? address.slice(2) : address, \"hex\"))\n                    .add(opcode.OP_DROP)\n                    .add(opcode.OP_DUP)\n                    .add(opcode.OP_HASH160)\n                    .add(masterPKH)\n                    .add(opcode.OP_EQUALVERIFY)\n                    .add(opcode.OP_CHECKSIG)\n                    .toScriptHashOut().toAddress(mainnet ? networks.livenet : networks.testnet).toString();\n","import * as Sentry from \"@sentry/browser\";\n\nimport { naturalTime } from \"@renex/react-components\";\n\nimport { environment } from \"./environmentVariables\";\n\n// tslint:disable-next-line: no-any\ntype AnyError = Error | any;\n\ninterface Details {\n    description?: string;\n    category?: string;\n    level?: Sentry.Severity;\n    ignoreNetwork?: boolean;\n}\n\ninterface Described {\n    description: string;\n}\n\ninterface ShownToUser {\n    shownToUser: string;\n}\n\nlet pageLoaded: Date;\nexport const pageLoadedAt = (): string => {\n    if (!pageLoaded) {\n        pageLoaded = new Date();\n        return pageLoaded.toUTCString();\n    } else {\n        return naturalTime(Math.floor(pageLoaded.getTime() / 1000), {\n            message: \"Just now\",\n            suffix: \"ago\",\n            countDown: false,\n        });\n    }\n};\n\n// Determines whether or not this is a common network error (too many of these\n// are being logged to Sentry)\nconst isNetworkError = (error: AnyError): boolean => {\n    const message: string = ((error || {}).message || error).toString();\n\n    if (\n        message.match(/Network ?Error/i) ||\n        message.match(/Failed to fetch/i) ||\n        message.match(/Network request failed/i) ||\n        message.match(/Wrong response id/i) ||\n        message.match(/Request failed or timed out/i) ||\n        message.match(/Returned values aren't valid, did it run Out of Gas\\?/i) ||\n        message.match(/Invalid JSON RPC response/i) ||\n        message.match(/timeout of 0ms exceeded/i)\n    ) {\n        return true;\n    }\n\n    return false;\n};\n\nconst rawError = (errorObject: Error) => {\n    // https://stackoverflow.com/questions/11616630/json-stringify-avoid-typeerror-converting-circular-structure-to-json/11616993#11616993\n\n    // Note: cache should not be re-used by repeated calls to JSON.stringify.\n    let cache: Array<{}> | null = [];\n    const rawErrorJSON = JSON.stringify(errorObject, (key, value) => {\n        if (key === \"request\") {\n            return \"... omitted\";\n        }\n        if (cache && typeof value === \"object\" && value !== null) {\n            if (cache.indexOf(value) !== -1) {\n                // Duplicate reference found\n                try {\n                    // If this value does not reference a parent it can be deduped\n                    return JSON.parse(JSON.stringify(value));\n                } catch (error) {\n                    // discard key if value cannot be deduped\n                    return;\n                }\n            }\n            // Store value in our collection\n            cache.push(value);\n        }\n        return value;\n    });\n    cache = null; // Enable garbage collection\n\n    return rawErrorJSON;\n};\n\nconst _captureException_ = <X extends Details>(error: AnyError, details: X) => {\n    if (error._noCapture_) {\n        return;\n    }\n\n    Sentry.withScope(scope => {\n        // How long ago the page was loaded at\n        scope.setExtra(\"pageLoadedAt\", pageLoadedAt());\n\n        // Category\n        if (details.category) {\n            scope.setTag(\"category\", details.category);\n        }\n\n        // Level\n        if (details.level) {\n            scope.setLevel(details.level);\n        }\n\n        // Extra information\n        Object.keys(details)\n            .forEach(key => {\n                scope.setExtra(key, details[key]);\n            });\n\n        if (error && error.response) {\n            scope.setExtra(\"responseData\", error.response.data);\n            scope.setExtra(\"responseStatus\", error.response.status);\n        }\n\n        scope.setExtra(\"caught\", true);\n        scope.setExtra(\"zRawError\", rawError(error));\n\n        // tslint:disable-next-line: no-console\n        console.error(error);\n\n        if (environment !== \"mainnet\") {\n            if (typeof error === \"string\") {\n                // tslint:disable-next-line: no-parameter-reassignment\n                error = `[${environment.toUpperCase()}] ${error}`;\n            } else {\n                try {\n                    error.message = `[${environment.toUpperCase()}] ${error.message || error}`;\n                } catch {\n                    // Ignore: Unable to overwrite message (may be read-only)\n                }\n            }\n        }\n\n        // Check if we should ignore the error\n        if (details.ignoreNetwork && isNetworkError(error)) {\n            return;\n        }\n\n        Sentry.captureException(error);\n\n    });\n};\n\n// Background exceptions are thrown in background loops and actions\nexport const _captureBackgroundException_ = <X extends Details & Described>(error: AnyError, details?: X) => {\n    _captureException_(error, { ignoreNetwork: true, ...details, category: \"background_exception\" });\n};\n\n// Interaction exceptions are thrown as a direct result of a user interaction\nexport const _captureInteractionException_ = <X extends Details & Described & ShownToUser>(error: AnyError, details?: X) => {\n    _captureException_(error, { ...details, category: \"interaction_exception\" });\n};\n\n// Component exceptions are thrown from an ErrorBoundary\nexport const _captureComponentException_ = (error: AnyError, errorInfo: React.ErrorInfo) => {\n    _captureException_(error, { ...errorInfo, description: \"Error caught in Error Boundary. See Component stack trace.\", category: \"component_exception\" });\n};\n\n// _noCapture_ is to mark errors that should not be reported to Sentry.\nexport const _noCapture_ = (error: Error): Error => {\n    (error as AnyError)._noCapture_ = true;\n    return error;\n};\n","import { Currency } from \"@renex/react-components\";\nimport { Map } from \"immutable\";\n\nimport { TokenPrices } from \"../../store/types/general\";\n\nexport enum Token {\n    DAI = \"DAI\",\n    BTC = \"BTC\",\n    ETH = \"ETH\",\n    REN = \"REN\",\n    TUSD = \"TUSD\",\n    ZEC = \"ZEC\",\n    WBTC = \"WBTC\",\n}\n// export type MarketPair = string;\n\nconst CoinGeckoIDs = Map<Token, string>()\n    .set(Token.DAI, \"dai\")\n    .set(Token.BTC, \"bitcoin\")\n    .set(Token.ETH, \"ethereum\")\n    .set(Token.REN, \"republic-protocol\")\n    .set(Token.TUSD, \"true-usd\")\n    .set(Token.ZEC, \"zcash\")\n    .set(Token.WBTC, \"bitcoin\");\n\n/**\n * Retrieves the current pricepoint for two currencies.\n * @param fstCode The first currency.\n * @param sndCode The second currency.\n * @returns An array containing the price with respect to the currencies, and the 24 hour percent change.\n */\nconst fetchDetails = async (geckoID: string) => {\n    const url = `https://api.coingecko.com/api/v3/coins/${geckoID}?localization=false&tickers=false&market_data=true&community_data=false&developer_data=false&sparkline=false`;\n    const response = await fetch(url);\n    return response.json();\n};\n\nexport const getMarketPrice = async (quoteCode: Token, baseCode: Token): Promise<[number, number]> => {\n    const baseCoinGeckoID = CoinGeckoIDs.get(baseCode, undefined);\n    if (baseCoinGeckoID === undefined) {\n        return [0, 0];\n    }\n\n    const baseData = await fetchDetails(baseCoinGeckoID);\n    const basePrice: number | null | undefined = baseData.market_data.current_price[quoteCode.toLowerCase()];\n    const basePercentChange: number | null | undefined = baseData.market_data.price_change_percentage_24h_in_currency[quoteCode.toLowerCase()];\n\n    if (basePrice !== undefined && basePrice !== null) {\n        return [basePrice || 0, basePercentChange || 0];\n    }\n\n    // If the pairing isn't available, use BTC as a conversion bridge.\n    const bridge = Token.BTC;\n\n    const quoteCoinGeckoID = CoinGeckoIDs.get(quoteCode, undefined);\n    if (quoteCoinGeckoID === undefined) {\n        return [0, 0];\n    }\n\n    const basePriceInBridge: number = (baseData.market_data.current_price[bridge.toLowerCase()] || 0);\n    const basePercentChangeInBridge: number = (baseData.market_data.price_change_percentage_24h_in_currency[bridge.toLowerCase()] || 0);\n\n    const quoteData = await fetchDetails(quoteCoinGeckoID);\n    const quotePriceInBridge: number = quoteData.market_data.current_price[bridge.toLowerCase()] || 0;\n    const quotePercentChangeInBridge: number = quoteData.market_data.price_change_percentage_24h_in_currency[bridge.toLowerCase()] || 0;\n    return [\n        quotePriceInBridge ? basePriceInBridge / quotePriceInBridge : 0,\n        quotePercentChangeInBridge ? basePercentChangeInBridge / quotePercentChangeInBridge : 0\n    ];\n};\n\nexport const getTokenPricesInCurrencies = async (): Promise<TokenPrices> => {\n    let prices: TokenPrices = Map();\n\n    for (const tokenAndDetails of CoinGeckoIDs.toSeq().toArray()) {\n        const [token, coinGeckoID] = tokenAndDetails;\n\n        // tslint:disable-next-line:max-line-length\n        const data = await fetchDetails(coinGeckoID);\n        const price = Map<Currency, number>(data.market_data.current_price);\n\n        prices = prices.set(token, price);\n    }\n\n    return prices;\n};\n","import { createBrowserHistory } from \"history\";\n\nexport const history = createBrowserHistory();\n","export const SENTRY_DSN = process.env.REACT_APP_SENTRY_DSN;\n\nexport const NETWORK = process.env.REACT_APP_NETWORK;\n\nexport const SOURCE_VERSION = process.env.REACT_APP_SOURCE_VERSION;\n\n// export const BACKEND_URL = process.env.REACT_APP_BACKEND_URL || \"\";\n\nexport const environment = ((process.env.NODE_ENV === \"development\") ? \"local\" : NETWORK) || \"unknown\";\n","import * as Sentry from \"@sentry/browser\";\nimport * as React from \"react\";\n\nimport { _captureComponentException_ } from \"../../lib/util/errors\";\n\nclass ErrorBoundary extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = { error: null, errorInfo: null };\n    }\n\n    public componentDidCatch = (error: Error, errorInfo: React.ErrorInfo) => {\n        this.setState({\n            error,\n            errorInfo,\n        });\n        _captureComponentException_(error, errorInfo);\n    }\n\n    /**\n     * The main render function.\n     * @dev Should have minimal computation, loops and anonymous functions.\n     */\n    public render(): React.ReactNode {\n        if (this.state.errorInfo) {\n            // Error path\n            return (\n                <div>\n                    <h2>Something went wrong.</h2>\n                    <details style={{ whiteSpace: \"pre-wrap\" }}>\n                        <p role=\"button\" style={{ cursor: \"pointer\" }} onClick={this.reportFeedback}>\n                            Click to report feedback\n                        </p>\n                        {this.state.error && this.state.error.toString()}\n                        <br />\n                        {this.state.errorInfo.componentStack}\n                    </details>\n                </div>\n            );\n        }\n        // Normally, just render children\n        return this.props.children;\n    }\n\n    private readonly reportFeedback = () => {\n        Sentry.showReportDialog();\n    }\n}\n\ninterface Props {\n}\n\ninterface State {\n    error: null | Error;\n    errorInfo: null | React.ErrorInfo;\n}\n\nexport const _catch_ = (\n    children: React.ReactNode,\n) => <ErrorBoundary>\n        {children}\n    </ErrorBoundary>;\n","import { Dispatch } from \"redux\";\nimport { createStandardAction } from \"typesafe-actions\";\n\nimport { getTokenPricesInCurrencies } from \"../../../lib/util/market\";\nimport { TokenPrices } from \"../../types/general\";\n\n/**\n * Updates the market price for a specific token\n */\nexport const updatePrices = createStandardAction(\"UPDATE_PRICES\")<{\n    price: number;\n    percentChange: number;\n    pair: string;\n}>();\n\nexport const pricesUpdating = createStandardAction(\"PRICES_UPDATING\")<boolean>();\n\nexport const setTokenPrices = createStandardAction(\"STORE_TOKEN_PRICES\")<{ tokenPrices: TokenPrices }>();\n\nexport const updateTokenPrices = () => async (dispatch: Dispatch) => new Promise((resolve, reject) => {\n    dispatch(pricesUpdating(true));\n    setTimeout(async () => {\n        try {\n            const tokenPrices = await getTokenPricesInCurrencies();\n            dispatch(pricesUpdating(false));\n            dispatch(setTokenPrices({ tokenPrices }));\n        } catch (error) {\n            dispatch(pricesUpdating(false));\n            reject(error);\n        }\n        resolve();\n    }, 1000);\n});\n","import * as React from \"react\";\n\nimport { connect, ConnectedReturnType } from \"react-redux\"; // Custom typings\nimport { bindActionCreators, Dispatch } from \"redux\";\n\nimport { _captureBackgroundException_, _captureInteractionException_ } from \"../../lib/util/errors\";\n// import { getMarketPrice } from \"../lib/market\";\nimport { updatePrices, updateTokenPrices } from \"../../store/actions/market/marketActions\";\nimport { ApplicationData } from \"../../store/types/general\";\nimport { _catch_ } from \"../views/ErrorBoundary\";\n\n/**\n * BackgroundTasks is responsible for running background loops like updating\n * balances and prices\n */\nclass BackgroundTasksClass extends React.Component<Props, State> {\n\n    /**\n     * The following timeouts are used to run the various background tasks.\n     * setTimeout is used instead of setInterval so the interval between calls\n     * includes the time it takes to run the task.\n     */\n    // tslint:disable: completed-docs\n    private callBootstrapTimeout: NodeJS.Timer | undefined;\n    private callUpdatePricesTimeout: NodeJS.Timer | undefined;\n    private callUpdateMarketPricesTimeout: NodeJS.Timer | undefined;\n    // tslint:enable: completed-docs\n\n    public constructor(props: Props, context: object) {\n        super(props, context);\n        this.state = {\n        };\n    }\n\n    public async componentDidMount(): Promise<void> {\n        this.setupLoops();\n    }\n\n    public componentWillUnmount() {\n        // Clear timeouts\n        if (this.callBootstrapTimeout) { clearTimeout(this.callBootstrapTimeout); }\n        if (this.callUpdatePricesTimeout) { clearTimeout(this.callUpdatePricesTimeout); }\n        if (this.callUpdateMarketPricesTimeout) { clearTimeout(this.callUpdateMarketPricesTimeout); }\n    }\n\n    /**\n     * The main render function.\n     * @dev Should have minimal computation, loops and anonymous functions.\n     */\n    public render(): React.ReactNode {\n        return <></>;\n    }\n\n    // Update token prices every 60 seconds\n    private readonly callUpdatePrices = async (): Promise<void> => {\n        let delay = 60;\n        try {\n            // tslint:disable-next-line: await-promise\n            await this.props.actions.updateTokenPrices();\n        } catch (error) {\n            _captureBackgroundException_(error, {\n                description: \"Error thrown in callUpdatePrices background task\",\n            });\n            delay = 5;\n        }\n        if (this.callUpdatePricesTimeout) { clearTimeout(this.callUpdatePricesTimeout); }\n        this.callUpdatePricesTimeout = setTimeout(this.callUpdatePrices, delay * 1000);\n    }\n\n    // Bootstrap every hour\n    private readonly callBootstrap = async (): Promise<void> => {\n        let delay = 60 * 60;\n        try {\n            // await this.props.store.darknodeGroup.bootstrap();\n        } catch (error) {\n            _captureBackgroundException_(error, {\n                description: \"Error thrown in callBootstrap background task\",\n            });\n            delay = 20;\n        }\n        if (this.callBootstrapTimeout) { clearTimeout(this.callBootstrapTimeout); }\n        this.callBootstrapTimeout = setTimeout(this.callBootstrap, delay * 1000);\n    }\n\n    // Retrieve market prices every minute\n    private readonly callUpdateMarketPrices = async () => {\n        // const { supportedMarkets } = this.props;\n        const delay = 60;\n        // if (supportedMarkets) {\n        //     try {\n        //         await Promise.all(supportedMarkets.map(async (pair, marketID) => {\n        //             const [price, percentChange] = await getMarketPrice(pair.quote, pair.base);\n        //             this.props.actions.updatePrices({ price, percentChange, pair: marketID });\n        //         }).toArray());\n        //     } catch (error) {\n        //         _captureBackgroundException_(error, {\n        //             description: \"Error in BackgroundTasks.callUpdateMarketPrices\",\n        //         });\n        //         delay = 10;\n        //     }\n        // } else {\n        //     delay = 1;\n        // }\n        if (this.callUpdateMarketPricesTimeout) { clearTimeout(this.callUpdateMarketPricesTimeout); }\n        this.callUpdateMarketPricesTimeout = setTimeout(this.callUpdateMarketPrices, delay * 1000);\n    }\n\n    /**\n     * setupLoops is called once to start the timeouts\n     */\n    private readonly setupLoops = () => {\n        this.callBootstrap().catch(error => {\n            _captureBackgroundException_(error, {\n                description: \"Error in callBootstrap in BackgroundTasks\",\n            });\n        });\n\n        this.callUpdatePrices().catch(error => {\n            _captureBackgroundException_(error, {\n                description: \"Error in callUpdatePrices in BackgroundTasks\",\n            });\n        });\n\n        this.callUpdateMarketPrices().catch(error => {\n            _captureBackgroundException_(error, {\n                description: \"Error in callUpdatePrices in BackgroundTasks\",\n            });\n        });\n\n    }\n}\n\nconst mapStateToProps = (state: ApplicationData) => ({\n    store: {\n        darknodeGroup: state.general.darknodeGroup,\n    }\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n    actions: bindActionCreators({\n        updatePrices,\n        updateTokenPrices,\n    }, dispatch)\n});\n\ninterface Props extends ReturnType<typeof mapStateToProps>, ConnectedReturnType<typeof mapDispatchToProps> {\n}\n\ninterface State {\n}\n\nexport const BackgroundTasks = connect(mapStateToProps, mapDispatchToProps)(BackgroundTasksClass);\n","import { List } from \"immutable\";\nimport { createStandardAction } from \"typesafe-actions\";\n\nimport { Currency } from \"@renex/react-components\";\nimport { UTXO } from \"../../../lib/blockchain/blockchain\";\nimport { MultiAddress } from \"../../../lib/types/types\";\nimport { _captureBackgroundException_, _captureInteractionException_ } from \"../../../lib/util/errors\";\n\nexport const setQuoteCurrency = createStandardAction(\"setQuoteCurrency\")<Currency>();\nexport const setEthereumAddress = createStandardAction(\"setEthereumAddress\")<string | undefined>();\nexport const addToRedeemedUTXOs = createStandardAction(\"addToRedeemedUTXOs\")<string>();\nexport const addToRenVMMessages = createStandardAction(\"addToRenVMMessages\")<{ utxo: string, messages: List<{ messageID: string, multiAddress: MultiAddress }> }>();\nexport const addToSignatures = createStandardAction(\"addToSignatures\")<{ utxo: string, signature: string }>();\nexport const addToUtxoToMessage = createStandardAction(\"addToUtxoToMessage\")<{ utxo: string, message: string }>();\nexport const addToMessageToUtxos = createStandardAction(\"addToMessageToUtxos\")<{ message: string, utxos: List<UTXO> }>();\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  className: \"ren-logo\",\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M4.22832 6.51869L6.50289 5.20916L6.80925 5.73645L15.1936 0.889439L14.5809 0.535981L13.9653 0.176729L13.659 0L0 7.90935V8.2628L3.92197 5.9885L4.22832 6.51869Z\",\n  fill: \"#212122\"\n});\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  className: \"ren-logo\",\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M4.22832 11.4991L10.8006 7.69217L11.1069 8.22815L19.4913 3.37824L18.8786 3.01899L18.263 2.66553L17.9566 2.4917L0 12.8839V13.2374L3.92197 10.9631L4.22832 11.4991Z\",\n  fill: \"#212122\"\n});\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  className: \"ren-logo\",\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M4.22832 13.9875L12.948 8.9406L13.2572 9.47079L21.6387 4.61509L21.026 4.26743L20.4133 3.90817L20.104 3.73145L0 15.3666V15.7258L3.92197 13.4544L4.22832 13.9875Z\",\n  fill: \"#212122\"\n});\n\nvar _ref5 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  className: \"ren-logo\",\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M4.22832 16.4736L15.159 10.149L15.4682 10.6792L23.789 5.86405L23.1763 5.5048L22.5607 5.15134L22.2543 4.97461L0 17.8584V18.2119L3.92197 15.9376L4.22832 16.4736Z\",\n  fill: \"#212122\"\n});\n\nvar _ref6 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  className: \"ren-logo\",\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M4.22832 18.9563L17.3092 11.3888L17.6156 11.9248L25.9364 7.10383L25.3237 6.75327L24.711 6.39401L24.4017 6.21729L0 20.3411V20.6946L3.92197 18.4261L4.22832 18.9563Z\",\n  fill: \"#212122\"\n});\n\nvar _ref7 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  className: \"ren-logo\",\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M26.8584 7.64008L26.552 7.46045L0 22.833V23.1864L3.92197 20.9179L4.22832 21.4481L17.3092 13.8806L17.6156 14.4108L27.3179 8.79895V8.08624V7.90951L26.8584 7.64008Z\",\n  fill: \"#212122\"\n});\n\nvar _ref8 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  className: \"ren-logo\",\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M1.68241 24.6955L3.88184 23.4237L4.18819 23.9539L17.246 16.398L17.5524 16.9339L27.3183 11.2815V10.5688V9.8561V9.50293L1.38184 24.5191L1.68241 24.6955Z\",\n  fill: \"#212122\"\n});\n\nvar _ref9 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  className: \"ren-logo\",\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M17.2461 18.8895L17.5524 19.4257L27.3183 13.773V13.0603V12.3476V11.9941L3.5293 25.7619L3.83855 25.9383L6.06976 24.6433L6.37901 25.1793\",\n  fill: \"#212122\"\n});\n\nvar _ref10 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  className: \"ren-logo\",\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M5.98597 27.1845L8.22007 25.8865L8.52643 26.4222L17.2461 21.3724L17.5524 21.9087L27.3183 16.256V15.5433V14.8363V14.48L5.67383 27.0017L5.98597 27.1845Z\",\n  fill: \"#212122\"\n});\n\nvar _ref11 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  className: \"ren-logo\",\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M8.13351 28.4275L10.3676 27.135L10.6769 27.6652L17.2462 23.8644L17.5526 24.3943L27.3185 18.7418V18.0352V17.3225V16.9688L7.82715 28.2507L8.13351 28.4275Z\",\n  fill: \"#212122\"\n});\n\nvar _ref12 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  className: \"ren-logo\",\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M9.97656 29.4933L10.2829 29.6698L12.5228 28.375L12.8234 28.911L17.2453 26.347L17.5517 26.883L27.3176 21.2302V20.5178V19.8051V19.4517L9.97656 29.4933Z\",\n  fill: \"#212122\"\n});\n\nvar _ref13 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  className: \"ren-logo\",\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M12.4304 30.9189L14.6645 29.618L14.9708 30.154L17.2454 28.8329L17.5518 29.3689L27.3177 23.7222V23.0095V22.2968V21.9434L12.124 30.7421L12.4304 30.9189Z\",\n  fill: \"#212122\"\n});\n\nvar _ref14 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  className: \"ren-logo\",\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M17.3439 2.1326L16.7283 1.77915L16.1156 1.42569L15.8092 1.24316L0 10.3925V10.746L3.92197 8.48036L4.22832 9.00765L8.65029 6.44943L8.96532 6.98541L17.3439 2.1326Z\",\n  fill: \"#212122\"\n});\n\nvar SvgLogo = function SvgLogo(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: 31,\n    height: 31,\n    viewBox: \"0 0 31 31\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11, _ref12, _ref13, _ref14);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgLogo, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/logo.3e204930.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"title\", null, \"union-jack\");\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"desc\", null, \"Created with Sketch.\");\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"defs\", null);\n\nvar _ref5 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  id: \"Page-1\",\n  stroke: \"none\",\n  strokeWidth: 1,\n  fill: \"none\",\n  fillRule: \"evenodd\"\n}, React.createElement(\"g\", {\n  id: \"union-jack\"\n}, React.createElement(\"polygon\", {\n  id: \"Fill-1\",\n  fill: \"#FFFFFF\",\n  points: \"0 11 20.7878788 11 20.7878788 0 0 0\"\n}), React.createElement(\"polygon\", {\n  id: \"Fill-2\",\n  fill: \"#00247D\",\n  points: \"2.32431818 11 8.66165152 11 8.66165152 7.64657143\"\n}), React.createElement(\"polygon\", {\n  id: \"Fill-3\",\n  fill: \"#00247D\",\n  points: \"12.1261636 11 18.4641333 11 12.1261636 7.64657143\"\n}), React.createElement(\"polygon\", {\n  id: \"Fill-4\",\n  fill: \"#00247D\",\n  points: \"0 7.33316122 0 9.76999796 4.60515152 7.33316122\"\n}), React.createElement(\"polygon\", {\n  id: \"Fill-5\",\n  fill: \"#CF142B\",\n  points: \"6.92942727 7.33316122 6.36363636e-05 10.9999776 1.54960909 10.9999776 8.47854848 7.33316122\"\n}), React.createElement(\"polygon\", {\n  id: \"Fill-6\",\n  fill: \"#CF142B\",\n  points: \"13.8588545 7.33316122 20.7880061 10.9999776 20.7880061 10.1801408 15.4081879 7.33316122\"\n}), React.createElement(\"polygon\", {\n  id: \"Fill-7\",\n  fill: \"#00247D\",\n  points: \"16.1829818 7.33316122 20.7879212 9.76999796 20.7879212 7.33316122\"\n}), React.createElement(\"polygon\", {\n  id: \"Fill-8\",\n  fill: \"#00247D\",\n  points: \"0 3.66652449 4.60515152 3.66652449 0 1.22991224\"\n}), React.createElement(\"polygon\", {\n  id: \"Fill-9\",\n  fill: \"#00247D\",\n  points: \"16.1829818 3.66652449 20.7879212 3.66652449 20.7879212 1.22991224\"\n}), React.createElement(\"polygon\", {\n  id: \"Fill-10\",\n  fill: \"#CF142B\",\n  points: \"0 8.97959184e-05 0 0.819926531 5.37960606 3.66645714 6.92936364 3.66645714 0.000424242424 8.97959184e-05\"\n}), React.createElement(\"polygon\", {\n  id: \"Fill-11\",\n  fill: \"#00247D\",\n  points: \"2.3247 8.97959184e-05 8.66160909 3.35329388 8.66160909 8.97959184e-05\"\n}), React.createElement(\"polygon\", {\n  id: \"Fill-12\",\n  fill: \"#CF142B\",\n  points: \"9.35454545 8.97959184e-05 9.35454545 4.39986531 0 4.39986531 0 6.59986531 9.35454545 6.59986531 9.35454545 11.0000898 11.4331212 11.0000898 11.4331212 6.59964082 20.7878788 6.59964082 20.7878788 4.39964082 11.4331212 4.39964082 11.4331212 8.97959184e-05\"\n}), React.createElement(\"polygon\", {\n  id: \"Fill-13\",\n  fill: \"#00247D\",\n  points: \"12.1261636 8.97959184e-05 12.1261636 3.35329388 18.4637091 8.97959184e-05\"\n}), React.createElement(\"polygon\", {\n  id: \"Fill-14\",\n  fill: \"#CF142B\",\n  points: \"19.2379091 8.97959184e-05 12.3089697 3.66645714 13.8589394 3.66645714 20.7874545 8.97959184e-05\"\n})));\n\nvar SvgRpFlagUk = function SvgRpFlagUk(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: \"21px\",\n    height: \"11px\",\n    viewBox: \"0 0 21 11\",\n    ref: svgRef\n  }, props), _ref2, _ref3, _ref4, _ref5);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgRpFlagUk, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/rp-flag-uk.e021baf7.svg\";\nexport { ForwardRef as ReactComponent };","import { List } from \"immutable\";\n\nimport { BitcoinUTXO, createBTCTestnetAddress, getBTCTestnetUTXOs } from \"./btc/btc\";\nimport { createZECTestnetAddress, getZECTestnetUTXOs, ZcashUTXO } from \"./btc/zec\";\n\nexport enum Currency {\n    BTC = \"btc\",\n    ZEC = \"zec\",\n    ETH = \"eth\"\n}\n\nexport type UTXO = { currency: Currency.BTC, utxo: BitcoinUTXO } | { currency: Currency.ZEC, utxo: ZcashUTXO };\n\nexport class DepositAddresses {\n    public receiveAddress: string;\n\n    public depositAddresses: Map<Currency, string>;\n\n    constructor(receiveAddress: string) {\n        this.receiveAddress = receiveAddress;\n\n        this.depositAddresses = (new Map<Currency, string>())\n            .set(Currency.ZEC, createZECTestnetAddress(receiveAddress))\n            .set(Currency.BTC, createBTCTestnetAddress(receiveAddress))\n            .set(Currency.ETH, receiveAddress)\n            ;\n    }\n\n    public getUTXOs = async (limit = 10, confirmations = 0): Promise<List<UTXO>> => {\n        let utxos = List<UTXO>();\n\n        const btcDepositAddress = this.depositAddresses.get(Currency.BTC);\n        if (btcDepositAddress) {\n            try {\n                const newBitcoinUTXOs: Array<{ currency: Currency.BTC, utxo: BitcoinUTXO }> = (await getBTCTestnetUTXOs(btcDepositAddress, limit, confirmations)).map(utxo => ({ currency: Currency.BTC, utxo }));\n                utxos = utxos.concat(List(newBitcoinUTXOs));\n            } catch (error) {\n                console.error(error);\n            }\n        }\n\n        const zecDepositAddress = this.depositAddresses.get(Currency.ZEC);\n        if (zecDepositAddress) {\n            try {\n                const newZcashUTXOs: Array<{ currency: Currency.ZEC, utxo: BitcoinUTXO }> = (await getZECTestnetUTXOs(zecDepositAddress, limit, confirmations)).map(utxo => ({ currency: Currency.ZEC, utxo }));\n                utxos = utxos.concat(List(newZcashUTXOs));\n            } catch (error) {\n                console.error(error);\n            }\n        }\n\n        return utxos;\n    }\n}\n","import * as React from \"react\";\n\nimport { connect, ConnectedReturnType } from \"react-redux\"; // Custom typings\nimport { Link } from \"react-router-dom\";\nimport { bindActionCreators, Dispatch } from \"redux\";\n\nimport { _captureBackgroundException_ } from \"../../lib/util/errors\";\nimport { setQuoteCurrency } from \"../../store/actions/general/generalActions\";\nimport { ApplicationData } from \"../../store/types/general\";\nimport { _catch_ } from \"../views/ErrorBoundary\";\n\nimport { currencies, Currency, CurrencyIcon, Dropdown, Header } from \"@renex/react-components\";\n\nimport { ReactComponent as Logo } from \"../../styles/images/logo.svg\";\nimport { ReactComponent as English } from \"../../styles/images/rp-flag-uk.svg\";\n\nconst getCurrencyOptions = () => {\n    const options = new Map<string, React.ReactNode>();\n\n    for (const currency of currencies) {\n        options.set(currency.currency, <>\n            <CurrencyIcon currency={currency.currency} />\n            {\" \"}{currency.description}\n        </>);\n    }\n\n    return options;\n};\n\nconst currencyOptions = getCurrencyOptions();\n\nconst languageOptions = new Map()\n    .set(\"EN\",\n        <><English /> English</>\n    );\n\nconst logo = <Link className=\"no-underline\" to=\"/\">\n    <Logo />\n    <span>beta</span>\n</Link>;\n\n/**\n * Header is a visual component providing page branding and navigation.\n */\nclass HeaderControllerClass extends React.Component<Props, State> {\n    public render = (): JSX.Element => {\n        const { store: { quoteCurrency } } = this.props;\n\n        const languageDropdown = <Dropdown\n            key=\"languageDropdown\"\n            selected={{\n                value: \"EN\",\n                render: \"English\",\n            }}\n            options={languageOptions}\n            setValue={this.setLanguage}\n        />;\n\n        const currencyDropdown = <Dropdown\n            key=\"currencyDropdown\"\n            selected={{\n                value: quoteCurrency,\n                render: <>\n                    <CurrencyIcon currency={quoteCurrency} />\n                    {\" \"}{quoteCurrency.toUpperCase()}\n                </>\n            }}\n            options={currencyOptions}\n            setValue={this.setCurrency}\n        />;\n\n        return (\n            <Header\n                logo={logo}\n                menu={[\n                    languageDropdown, currencyDropdown\n                ]}\n            />\n        );\n    }\n\n    private readonly setCurrency = (quoteCurrency: Currency): void => {\n        this.props.actions.setQuoteCurrency(quoteCurrency);\n    }\n\n    private readonly setLanguage = (language: string): void => {\n        // NOT IMPLEMENTED\n    }\n}\n\nconst mapStateToProps = (state: ApplicationData) => ({\n    store: {\n        quoteCurrency: state.general.quoteCurrency,\n    }\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n    actions: bindActionCreators({\n        setQuoteCurrency,\n    }, dispatch)\n});\n\ninterface Props extends ReturnType<typeof mapStateToProps>, ConnectedReturnType<typeof mapDispatchToProps> {\n}\n\ninterface State {\n}\n\nexport const HeaderController = connect(mapStateToProps, mapDispatchToProps)(HeaderControllerClass);\n","import Axios from \"axios\";\n\nexport const getUTXOs = <T>(endpoint: string) => async (address: string, limit: number, confirmations: number): Promise<T[]> => {\n    const resp = await Axios.get<T[]>(`${endpoint}/utxo/${address}?limit=${limit}&confirmations=${confirmations}`);\n    return resp.data;\n};\n","import { Networks, Opcode, Script } from \"bitcore-lib\";\n\nimport { testnetMasterPKH } from \"../../darknode/publicKey\";\nimport { getUTXOs } from \"../mercury\";\nimport { createAddress } from \"./common\";\n\nexport const createBTCAddress = createAddress(Networks, Opcode, Script);\n\nconst testnetMercury = \"https://ren-mercury.herokuapp.com/btc-testnet3\";\n\nexport interface BitcoinUTXO {\n    txHash: string; // hex string without 0x prefix\n    amount: number; // satoshis\n    scriptPubKey: string; // hex string without 0x prefix\n    vout: number;\n}\n\nexport const getBTCTestnetUTXOs = getUTXOs<BitcoinUTXO>(testnetMercury);\n\nexport const createBTCTestnetAddress = createBTCAddress({ mainnet: false, masterPKH: testnetMasterPKH });\n","import { Networks, Opcode, Script } from \"bitcore-lib-zcash\";\n\nimport { testnetMasterPKH } from \"../../darknode/publicKey\";\nimport { getUTXOs } from \"../mercury\";\nimport { createAddress } from \"./common\";\n\nexport const createZECAddress = createAddress(Networks, Opcode, Script);\n\nconst testnetMercury = \"https://ren-mercury.herokuapp.com/zec-testnet\";\n\nexport interface ZcashUTXO {\n    txHash: string; // hex string without 0x prefix\n    amount: number; // satoshis\n    scriptPubKey: string; // hex string without 0x prefix\n    vout: number;\n}\n\nexport const getZECTestnetUTXOs = getUTXOs<ZcashUTXO>(testnetMercury);\n\nexport const createZECTestnetAddress = createZECAddress({ mainnet: false, masterPKH: testnetMasterPKH });\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"style\", {\n  type: \"text/css\"\n}, \"\\n\\t.st0{fill:#161616;stroke:#161616;}\\n\\t.st1{fill:#E4761B;stroke:#E4761B;stroke-linecap:round;stroke-linejoin:round;}\\n\\t.st2{fill:#763D16;stroke:#763D16;stroke-linecap:round;stroke-linejoin:round;}\\n\\t.st3{fill:#F6851B;stroke:#F6851B;stroke-linecap:round;stroke-linejoin:round;}\\n\\t.st4{fill:#E2761B;stroke:#E2761B;stroke-linecap:round;stroke-linejoin:round;}\\n\\t.st5{fill:#CD6116;stroke:#CD6116;stroke-linecap:round;stroke-linejoin:round;}\\n\\t.st6{fill:#C0AD9E;stroke:#C0AD9E;stroke-linecap:round;stroke-linejoin:round;}\\n\\t.st7{fill:#D7C1B3;stroke:#D7C1B3;stroke-linecap:round;stroke-linejoin:round;}\\n\\t.st8{fill:#E4751F;stroke:#E4751F;stroke-linecap:round;stroke-linejoin:round;}\\n\\t.st9{fill:#233447;stroke:#233447;stroke-linecap:round;stroke-linejoin:round;}\\n\\t.st10{fill:#161616;stroke:#161616;stroke-linecap:round;stroke-linejoin:round;}\\n\");\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"polygon\", {\n  className: \"st0\",\n  points: \"277.3,145.6 272.3,142 280.3,134.7 274.2,129.9 282.2,123.8 276.9,119.8 285.3,79 272.7,41.1  191.6,71.4 124.1,71.4 43,41.1 30.4,79 38.9,119.8 33.5,123.8 41.5,129.9 35.4,134.7 43.4,142 38.4,145.6 49.9,159.1 32.5,213.3  48.6,268.6 105.3,253 116.3,262 138.7,277.5 177,277.5 199.4,262 210.4,253 267.1,268.6 283.3,213.3 265.8,159.1 \"\n});\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"g\", null, React.createElement(\"polygon\", {\n  className: \"st1\",\n  points: \"105.3,253 48.6,268.6 32.5,213.3  \"\n}), React.createElement(\"polygon\", {\n  className: \"st1\",\n  points: \"283.3,213.3 267.1,268.6 210.4,253  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"265.8,159.1 213.5,143.8 231.8,139  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"49.9,159.1 84,139 102.2,143.8  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"43.4,142 41.5,129.9 84,139  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"272.3,142 231.8,139 274.2,129.9  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"272.3,142 265.8,159.1 231.8,139  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"43.4,142 84,139 49.9,159.1  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"231.8,139 276.9,119.8 274.2,129.9  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"84,139 41.5,129.9 38.9,119.8  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"124.1,71.4 191.6,71.4 176.5,112.5  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"176.5,112.5 139.2,112.5 124.1,71.4  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"276.9,119.8 231.8,139 231,87.4  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"102.2,143.8 84,139 84.7,87.4  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"84.7,87.4 84,139 38.9,119.8  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"231,87.4 231.8,139 213.5,143.8  \"\n}), React.createElement(\"polygon\", {\n  className: \"st1\",\n  points: \"139.2,112.5 43,41.1 124.1,71.4  \"\n}), React.createElement(\"polygon\", {\n  className: \"st4\",\n  points: \"272.7,41.1 176.5,112.5 191.6,71.4  \"\n}), React.createElement(\"polygon\", {\n  className: \"st1\",\n  points: \"210.4,253 236.9,213.3 283.3,213.3  \"\n}), React.createElement(\"polygon\", {\n  className: \"st1\",\n  points: \"32.5,213.3 78.9,213.3 105.3,253  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"229.3,167.7 283.3,213.3 236.9,213.3  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"86.4,167.7 32.5,213.3 49.9,159.1  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"78.9,213.3 32.5,213.3 86.4,167.7  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"229.3,167.7 265.8,159.1 283.3,213.3  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"84.7,87.4 139.2,112.5 102.2,143.8  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"213.5,143.8 176.5,112.5 231,87.4  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"265.8,159.1 272.3,142 277.3,145.6  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"49.9,159.1 38.4,145.6 43.4,142  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"272.3,142 274.2,129.9 280.3,134.7  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"43.4,142 35.4,134.7 41.5,129.9  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"33.5,123.8 38.9,119.8 41.5,129.9  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"282.2,123.8 274.2,129.9 276.9,119.8  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"49.9,159.1 102.2,143.8 86.4,167.7  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"265.8,159.1 229.3,167.7 213.5,143.8  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"38.9,119.8 30.4,79 84.7,87.4  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"231,87.4 285.3,79 276.9,119.8  \"\n}), React.createElement(\"polygon\", {\n  className: \"st1\",\n  points: \"102.2,143.8 139.2,112.5 142.6,170.2  \"\n}), React.createElement(\"polygon\", {\n  className: \"st1\",\n  points: \"213.5,143.8 229.3,167.7 173.1,170.2  \"\n}), React.createElement(\"polygon\", {\n  className: \"st1\",\n  points: \"173.1,170.2 176.5,112.5 213.5,143.8  \"\n}), React.createElement(\"polygon\", {\n  className: \"st1\",\n  points: \"142.6,170.2 86.4,167.7 102.2,143.8  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"272.7,41.1 285.3,79 231,87.4  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"43,41.1 139.2,112.5 84.7,87.4  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"231,87.4 176.5,112.5 272.7,41.1  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"84.7,87.4 30.4,79 43,41.1  \"\n}), React.createElement(\"polygon\", {\n  className: \"st5\",\n  points: \"105.3,253 78.9,213.3 110,213.7  \"\n}), React.createElement(\"polygon\", {\n  className: \"st5\",\n  points: \"210.4,253 205.7,213.7 236.9,213.3  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"173.1,170.2 142.6,170.2 139.2,112.5  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"139.2,112.5 176.5,112.5 173.1,170.2  \"\n}), React.createElement(\"polygon\", {\n  className: \"st6\",\n  points: \"116.3,262 105.3,253 136.8,267.9  \"\n}), React.createElement(\"polygon\", {\n  className: \"st6\",\n  points: \"178.9,267.9 210.4,253 199.4,262  \"\n}), React.createElement(\"polygon\", {\n  className: \"st7\",\n  points: \"136.6,258.6 136.8,267.9 105.3,253  \"\n}), React.createElement(\"polygon\", {\n  className: \"st7\",\n  points: \"179.2,258.6 210.4,253 178.9,267.9  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"86.4,167.7 110,213.7 78.9,213.3  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"236.9,213.3 205.7,213.7 229.3,167.7  \"\n}), React.createElement(\"polygon\", {\n  className: \"st8\",\n  points: \"86.4,167.7 109.2,190.8 110,213.7  \"\n}), React.createElement(\"polygon\", {\n  className: \"st8\",\n  points: \"229.3,167.7 205.7,213.7 206.6,190.8  \"\n}), React.createElement(\"polygon\", {\n  className: \"st7\",\n  points: \"105.3,253 139.2,236.5 136.6,258.6  \"\n}), React.createElement(\"polygon\", {\n  className: \"st7\",\n  points: \"210.4,253 179.2,258.6 176.5,236.5  \"\n}), React.createElement(\"polygon\", {\n  className: \"st1\",\n  points: \"139.2,236.5 105.3,253 110,213.7  \"\n}), React.createElement(\"polygon\", {\n  className: \"st1\",\n  points: \"176.5,236.5 205.7,213.7 210.4,253  \"\n}), React.createElement(\"polygon\", {\n  className: \"st5\",\n  points: \"173.1,170.2 229.3,167.7 206.6,190.8  \"\n}), React.createElement(\"polygon\", {\n  className: \"st5\",\n  points: \"109.2,190.8 86.4,167.7 142.6,170.2  \"\n}), React.createElement(\"polygon\", {\n  className: \"st5\",\n  points: \"142.6,170.2 129.1,181.7 109.2,190.8  \"\n}), React.createElement(\"polygon\", {\n  className: \"st5\",\n  points: \"206.6,190.8 186.6,181.7 173.1,170.2  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"205.7,213.7 178.3,199.1 206.6,190.8  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"110,213.7 109.2,190.8 137.4,199.1  \"\n}), React.createElement(\"polygon\", {\n  className: \"st9\",\n  points: \"137.4,199.1 109.2,190.8 129.1,181.7  \"\n}), React.createElement(\"polygon\", {\n  className: \"st9\",\n  points: \"178.3,199.1 186.6,181.7 206.6,190.8  \"\n}), React.createElement(\"polygon\", {\n  className: \"st5\",\n  points: \"186.6,181.7 178.3,199.1 173.1,170.2  \"\n}), React.createElement(\"polygon\", {\n  className: \"st5\",\n  points: \"129.1,181.7 142.6,170.2 137.4,199.1  \"\n}), React.createElement(\"polygon\", {\n  className: \"st6\",\n  points: \"199.4,262 177,277.5 178.9,267.9  \"\n}), React.createElement(\"polygon\", {\n  className: \"st6\",\n  points: \"136.8,267.9 138.7,277.5 116.3,262  \"\n}), React.createElement(\"polygon\", {\n  className: \"st4\",\n  points: \"178.3,199.1 171.8,188.4 173.1,170.2  \"\n}), React.createElement(\"polygon\", {\n  className: \"st8\",\n  points: \"137.4,199.1 142.6,170.2 143.9,188.4  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"173.1,170.2 171.8,188.4 143.9,188.4  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"143.9,188.4 142.6,170.2 173.1,170.2  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"178.3,199.1 205.7,213.7 176.5,236.5  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"139.2,236.5 110,213.7 137.4,199.1  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"137.4,199.1 144,233.2 139.2,236.5  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"176.5,236.5 171.7,233.2 178.3,199.1  \"\n}), React.createElement(\"polygon\", {\n  className: \"st8\",\n  points: \"171.8,188.4 178.3,199.1 171.7,233.2  \"\n}), React.createElement(\"polygon\", {\n  className: \"st8\",\n  points: \"143.9,188.4 144,233.2 137.4,199.1  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"143.9,188.4 171.8,188.4 171.7,233.2  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"171.7,233.2 144,233.2 143.9,188.4  \"\n}), React.createElement(\"polygon\", {\n  className: \"st6\",\n  points: \"179.2,258.6 178.9,267.9 177,277.5  \"\n}), React.createElement(\"polygon\", {\n  className: \"st6\",\n  points: \"138.7,277.5 136.8,267.9 136.6,258.6  \"\n}), React.createElement(\"polygon\", {\n  className: \"st6\",\n  points: \"136.6,258.6 139,256.4 138.7,277.5  \"\n}), React.createElement(\"polygon\", {\n  className: \"st6\",\n  points: \"177,277.5 176.7,256.4 179.2,258.6  \"\n}), React.createElement(\"polygon\", {\n  className: \"st6\",\n  points: \"138.7,277.5 139,256.4 176.7,256.4  \"\n}), React.createElement(\"polygon\", {\n  className: \"st6\",\n  points: \"176.7,256.4 177,277.5 138.7,277.5  \"\n}), React.createElement(\"polygon\", {\n  className: \"st10\",\n  points: \"176.5,236.5 179.2,258.6 176.7,256.4  \"\n}), React.createElement(\"polygon\", {\n  className: \"st10\",\n  points: \"139,256.4 136.6,258.6 139.2,236.5  \"\n}), React.createElement(\"polygon\", {\n  className: \"st10\",\n  points: \"139.2,236.5 140.7,241.2 139,256.4  \"\n}), React.createElement(\"polygon\", {\n  className: \"st10\",\n  points: \"176.7,256.4 175,241.2 176.5,236.5  \"\n}), React.createElement(\"polygon\", {\n  className: \"st10\",\n  points: \"143.7,237.7 140.7,241.2 139.2,236.5  \"\n}), React.createElement(\"polygon\", {\n  className: \"st10\",\n  points: \"176.5,236.5 175,241.2 172,237.7  \"\n}), React.createElement(\"polygon\", {\n  className: \"st10\",\n  points: \"172,237.7 171.7,233.2 176.5,236.5  \"\n}), React.createElement(\"polygon\", {\n  className: \"st10\",\n  points: \"139.2,236.5 144,233.2 143.7,237.7  \"\n}), React.createElement(\"polygon\", {\n  className: \"st10\",\n  points: \"171.7,233.2 172,237.7 143.7,237.7  \"\n}), React.createElement(\"polygon\", {\n  className: \"st10\",\n  points: \"143.7,237.7 144,233.2 171.7,233.2  \"\n}), React.createElement(\"polygon\", {\n  className: \"st10\",\n  points: \"140.7,241.2 175,241.2 176.7,256.4  \"\n}), React.createElement(\"polygon\", {\n  className: \"st10\",\n  points: \"176.7,256.4 139,256.4 140.7,241.2  \"\n}), React.createElement(\"polygon\", {\n  className: \"st10\",\n  points: \"140.7,241.2 143.7,237.7 172,237.7  \"\n}), React.createElement(\"polygon\", {\n  className: \"st10\",\n  points: \"172,237.7 175,241.2 140.7,241.2  \"\n}));\n\nvar SvgMetamask = function SvgMetamask(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 318.6 318.6\",\n    style: {\n      enableBackground: \"new 0 0 318.6 318.6\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), _ref2, _ref3, _ref4);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgMetamask, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/metamask.035b2edd.svg\";\nexport { ForwardRef as ReactComponent };","import { Currency, Record } from \"@renex/react-components\";\nimport { List, Map as ImmutableMap, OrderedMap, Set } from \"immutable\";\n\nimport { UTXO } from \"../../lib/blockchain/blockchain\";\nimport { bootstrapNodes, WarpGateGroup } from \"../../lib/darknode/darknodeGroup\";\nimport { MultiAddress } from \"../../lib/types/types\";\nimport { _captureBackgroundException_, _captureInteractionException_ } from \"../../lib/util/errors\";\nimport { validateType } from \"../../lib/util/persist\";\n\ninterface Serializable<T> {\n    serialize(): string;\n    deserialize(str: string): T;\n}\n\nexport interface ApplicationData {\n    general: GeneralData;\n    marketPrices: MarketPriceData;\n}\n\nexport enum UITheme {\n    Light = \"theme-light\", // light theme's CSS class\n    Dark = \"theme-dark\", // dark theme's CSS class\n}\n\nconst syncedGeneralData = new Map()\n    .set(\"ethereumAddress\", \"string\")\n    .set(\"advanced\", \"boolean\")\n    .set(\"theme\", \"string\")\n    .set(\"advancedTheme\", \"string\")\n    .set(\"redeemedUTXOs\", \"Set<string>\")\n    .set(\"renVMMessages\", \"Map<string, List<object>>\")\n    .set(\"utxoToMessage\", \"Map<string, string>\")\n    .set(\"messageToUtxos\", \"Map<string, List<object>>\")\n    .set(\"signatures\", \"Map<string, string>\")\n    .set(\"quoteCurrency\", \"string\");\nexport class GeneralData extends Record({\n    ethereumAddress: \"0x5Ea5F67cC958023F2da2ea92231d358F2a3BbA47\" as string | undefined,\n    redeemedUTXOs: Set<string>(),\n    renVMMessages: ImmutableMap<string, List<{ messageID: string, multiAddress: MultiAddress }>>(),\n    signatures: ImmutableMap<string, string>(),\n    utxoToMessage: ImmutableMap<string, string>(),\n    messageToUtxos: ImmutableMap<string, List<UTXO>>(),\n\n    darknodeGroup: new WarpGateGroup(bootstrapNodes),\n\n    // UI\n    advanced: false,\n    theme: UITheme.Light,\n    advancedTheme: UITheme.Dark,\n\n    // address: null as string | null,\n    url: null as string | null,\n    quoteCurrency: Currency.USD,\n}) implements Serializable<GeneralData> {\n\n    public serialize(): string {\n        const obj = {};\n        for (const key of Array.from(syncedGeneralData.keys())) {\n            obj[key] = this.get(key);\n        }\n        return JSON.stringify(obj);\n    }\n\n    public deserialize(str: string): GeneralData {\n        // tslint:disable-next-line:no-this-assignment\n        let next = this;\n        try {\n            const data = JSON.parse(str);\n            for (const key of Array.from(syncedGeneralData.keys())) {\n                try {\n                    next = next.set(\n                        key,\n                        validateType(syncedGeneralData.get(key), data[key])\n                    );\n                } catch (error) {\n                    _captureInteractionException_(error, { description: \"Error in GeneralData.deserialize\", shownToUser: \"No\" });\n                }\n            }\n        } catch (error) {\n            _captureBackgroundException_(error, {\n                description: \"cannot deserialize local storage\",\n            });\n            // TODO: Remove me!!!\n            alert(\"Check console!\");\n        }\n        return next;\n    }\n}\n\nexport interface MarketPrice {\n    price: number;\n    percentChange: number;\n}\n\nexport const UnknownMarketPrice: MarketPrice = {\n    price: 0,\n    percentChange: 0,\n};\n\nexport type TokenPrices = ImmutableMap<string, ImmutableMap<Currency, number>>;\n\nexport class MarketPriceData extends Record({\n    updating: false,\n    marketPrices: OrderedMap<string, MarketPrice>(),\n    tokenPrices: null as TokenPrices | null,\n}) { }\n","import * as React from \"react\";\n\nimport CircularProgressBar from \"react-circular-progressbar\";\nimport Web3 from \"web3\";\n\nimport { Loading, TokenIcon } from \"@renex/react-components\";\nimport { List, Map } from \"immutable\";\nimport { connect, ConnectedReturnType } from \"react-redux\";\nimport { bindActionCreators, Dispatch } from \"redux\";\nimport { HttpProvider } from \"web3-providers\";\n\nimport { Currency, DepositAddresses, UTXO } from \"../../lib/blockchain/blockchain\";\nimport { addToMessageToUtxos, addToRedeemedUTXOs, addToRenVMMessages, addToSignatures, addToUtxoToMessage, setEthereumAddress } from \"../../store/actions/general/generalActions\";\nimport { ApplicationData } from \"../../store/types/general\";\n\nimport { ReactComponent as MetaMask } from \"../../styles/images/metamask.svg\";\n\nimport \"react-circular-progressbar/dist/styles.css\";\n\ninterface InjectedEthereum extends HttpProvider {\n    enable: () => Promise<void>;\n}\n\ndeclare global {\n    interface Window {\n        ethereum?: InjectedEthereum;\n        web3?: Web3;\n    }\n}\n\nconst showCircle = (percentage: number) => {\n    return <CircularProgressBar\n        className=\"circle--progress\"\n        percentage={percentage}\n        strokeWidth={18}\n        styles={{\n            path: {\n                stroke: \"#006FE8\",\n                strokeLinecap: \"butt\",\n                // strokeOpacity: 0.6,\n            },\n            trail: {\n                stroke: \"#006FE8\",\n                strokeOpacity: 0.2,\n            },\n        }}\n    />;\n};\n\nconst getWeb3 = async () => new Promise<Web3>(async (resolve, reject) => {\n    // Modern dApp browsers...\n    if (window.ethereum) {\n        window.web3 = new Web3(window.ethereum);\n        try {\n            // Request account access if needed\n            await window.ethereum.enable();\n            resolve(window.web3);\n\n        } catch (error) {\n            reject(error);\n        }\n    } else if (window.web3) {\n        // Legacy dApp browsers...\n        window.web3 = new Web3(window.web3.currentProvider);\n        // Accounts always exposed\n        resolve(window.web3);\n    } else {\n        // Non-dApp browsers...\n        reject(\"Non-Ethereum browser detected. You should consider trying MetaMask!\");\n    }\n});\n\nconst SwapControllerClass = (props: Props) => {\n    const { store: { ethereumAddress, redeemedUTXOs, darknodeGroup, renVMMessages, signatures, utxoToMessage, messageToUtxos } } = props;\n\n    const [mounted, setMounted] = React.useState(false);\n\n    const [error, setError] = React.useState<string | undefined>(undefined);\n    // tslint:disable-next-line: prefer-const\n    let [depositAddresses, setDepositAddresses] = React.useState<DepositAddresses | undefined>(undefined);\n    const [checking, setChecking] = React.useState(false);\n    const [utxos, setUTXOs] = React.useState<List<UTXO>>(List());\n    const [redeeming, setRedeeming] = React.useState(false);\n    const [showingDeposit, setShowingDeposit] = React.useState<Currency | undefined>();\n    const [blur, setBlur] = React.useState(false);\n    // tslint:disable-next-line: prefer-const\n    let [checkingResponse, setCheckingResponse] = React.useState(Map<string, boolean>());\n    // tslint:disable-next-line: prefer-const\n    let [resubmitting, setResubmitting] = React.useState(Map<string, boolean>());\n    const [redeemingOnEthereum, setRedeemingOnEthereum] = React.useState(Map<string, boolean>());\n\n    const onChange = (event: React.FormEvent<HTMLInputElement>) => {\n        const element = (event.target as HTMLInputElement);\n        const value = element.value;\n        props.actions.setEthereumAddress(value);\n        // setDepositAddresses(undefined);\n        // setUTXOs(List());\n        setBlur(true);\n    };\n\n    const resendMessage = async (time: string) => {\n        if (ethereumAddress) {\n            resubmitting = resubmitting.set(time, true);\n            setResubmitting(resubmitting);\n            try {\n                await darknodeGroup.submitDeposits(ethereumAddress);\n            } catch (error) {\n                console.error(error);\n            }\n            resubmitting = resubmitting.delete(time);\n            setResubmitting(resubmitting);\n        }\n    };\n\n    const checkForResponse = async (id: string) => {\n        const renVMMessage = renVMMessages.get(id);\n        if (!renVMMessage) {\n            return;\n        }\n        checkingResponse = checkingResponse.set(id, true);\n        setCheckingResponse(checkingResponse);\n        try {\n            const signature = await darknodeGroup.checkForResponse(renVMMessage);\n            props.actions.addToSignatures({ utxo: id, signature });\n        } catch (error) {\n            console.error(error);\n        }\n        checkingResponse = checkingResponse.remove(id);\n        setCheckingResponse(checkingResponse);\n    };\n\n    const onSubmit = async () => {\n        if (!depositAddresses) {\n            setError(`No deposit address defined.`);\n            return;\n        }\n\n        setBlur(false);\n        setChecking(true);\n        setError(undefined);\n\n        const promises = renVMMessages.map(async (_, time) => {\n            // tslint:disable-next-line: no-console\n            return checkForResponse(time).catch(console.error);\n        }).valueSeq().toArray();\n\n        const newUtxos = await depositAddresses.getUTXOs();\n        setUTXOs(newUtxos);\n\n        try {\n            await Promise.all(promises);\n        } catch (error) {\n            // tslint:disable-next-line: no-console\n            console.error(error);\n        }\n\n        setChecking(false);\n    };\n\n    // Call onSubmit without passing in click-event parameters\n    const onRefresh = () => onSubmit();\n\n    // tslint:disable-next-line: no-any\n    const onGenerateAddress = (e?: any) => {\n        if (e && e.preventDefault) {\n            e.preventDefault();\n        }\n        setError(undefined);\n\n        if (ethereumAddress) {\n            if (depositAddresses && depositAddresses.receiveAddress === ethereumAddress) {\n                // do nothing\n            } else {\n                setUTXOs(List());\n                try {\n                    depositAddresses = new DepositAddresses(ethereumAddress);\n                    setDepositAddresses(depositAddresses);\n                } catch (error) {\n                    setError(`${error && error.toString ? error.toString() : error}`);\n                    return;\n                }\n            }\n            // tslint:disable-next-line: no-console\n            onSubmit().catch(console.error);\n        }\n    };\n\n    if (!mounted && ethereumAddress && ethereumAddress.length === 42 && !depositAddresses) {\n        onGenerateAddress();\n    }\n\n    if (!mounted) {\n        setMounted(true);\n    }\n\n    const onRedeem = async () => {\n        setRedeeming(true);\n        if (!ethereumAddress) {\n            return;\n        }\n\n        const id = Date().toString();\n\n        try {\n            const messages = await darknodeGroup.submitDeposits(ethereumAddress);\n            props.actions.addToRenVMMessages({ utxo: id, messages });\n            props.actions.addToMessageToUtxos({ message: id, utxos: List(utxos) });\n        } catch (error) {\n            console.error(error);\n            setRedeeming(false);\n            setError(`${error && error.toString ? error.toString() : error}`);\n            return;\n        }\n        utxos.map(utxo => {\n            props.actions.addToRedeemedUTXOs(utxo.utxo.txHash);\n            props.actions.addToUtxoToMessage({ utxo: utxo.utxo.txHash, message: id });\n        });\n        setRedeeming(false);\n    };\n\n    const getMetaMaskAddress = async () => {\n        try {\n            const web3 = await getWeb3();\n            const addresses = await web3.eth.getAccounts();\n            props.actions.setEthereumAddress(addresses[0]);\n            setBlur(true);\n        } catch (error) {\n            setError(`${error && error.toString ? error.toString() : error}`);\n        }\n    };\n\n    const hideDeposit = (): void => {\n        setShowingDeposit(undefined);\n    };\n\n    const showDeposit = (e: React.MouseEvent<HTMLDivElement>): void => {\n        const id = e.currentTarget.dataset ? e.currentTarget.dataset.id : undefined;\n        if (id) {\n            if (id === showingDeposit) {\n                hideDeposit();\n            } else {\n                setShowingDeposit(id as Currency);\n            }\n        }\n    };\n\n    const redeemOnEthereum = async (id: string) => {\n        const signature = signatures.get(id);\n        if (!signature) {\n            return;\n        }\n        setRedeemingOnEthereum(redeemingOnEthereum.set(id, true));\n        try {\n            // const web3 = await getWeb3();\n        } catch (error) {\n            setError(`${error && error.toString ? error.toString() : error}`);\n        }\n        setRedeemingOnEthereum(redeemingOnEthereum.remove(id));\n    };\n\n    return <div className=\"swap container\">\n        <div className=\"block\">\n            <form onSubmit={onGenerateAddress} className=\"swap--eth--form\">\n                <div className=\"swap--eth--input\">\n                    <input type=\"text\" value={ethereumAddress} onChange={onChange} placeholder=\"Enter Ethereum address for receiving\" />\n                    <button type=\"button\" className=\"metamask-logo\" onClick={getMetaMaskAddress}><MetaMask /></button>\n                    <button type=\"submit\" className=\"button--white swap--eth--submit\" disabled={!ethereumAddress}>Go</button>\n                </div>\n            </form>\n        </div>\n        {error ? <p className=\"red\">{error}</p> : null}\n        {depositAddresses ?\n            <div className={`swap--bottom ${blur ? \"blur\" : \"\"}`}>\n                <div className=\"block\">\n                    <h3>Currencies</h3>\n                    <div className=\"currencies\">\n                        {[Currency.BTC, Currency.ZEC, Currency.ETH].map((currency) => {\n                            return <div\n                                className={`currency ${currency}`}\n                                data-id={currency}\n                                onClick={showDeposit}\n                                role=\"button\"\n                                key={currency}\n                            >\n                                <TokenIcon token={currency.toUpperCase()} />\n                            </div>;\n                        })}\n                    </div>\n\n                    <div className={`deposit-address ${showingDeposit}`}>\n                        <div>\n                            {showingDeposit ? <>Deposit {showingDeposit.toUpperCase()} to <b>{depositAddresses.depositAddresses.get(showingDeposit)}</b></> : null}\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"block deposits\">\n                    <div className=\"deposits--title\">\n                        <h3>Deposits</h3>\n                        <button disabled={checking} className=\"button--white\" onClick={onRefresh}>{checking ? <div className=\"checking\"><Loading /></div> : <>Refresh</>}</button>\n                    </div>\n                    {utxos.filter(utxo => !utxoToMessage.has(utxo.utxo.txHash)).map((utxo) => {\n                        const redeemingUTXO = redeemedUTXOs.contains(utxo.utxo.txHash);\n                        return <div key={utxo.utxo.txHash} className={`utxo ${redeemingUTXO ? \"utxo--redeemed\" : \"\"}`} >\n                            {showCircle(33)}\n                            <div className=\"utxo--right\">\n                                <span>Deposited <b>{utxo.utxo.amount / (10 ** 8)} {utxo.currency.toUpperCase()}</b>{redeemingUTXO ? <>{\" \"}<span className=\"tag\">REDEEMING</span></> : null}</span>\n                                <a rel=\"noreferrer\" target=\"_blank\" href={`https://live.blockcypher.com/btc-testnet/tx/${utxo.utxo.txHash}`}>\n                                    <span className=\"utxo--txid\">{utxo.utxo.txHash}</span>\n                                </a>\n                            </div>\n                            <div className=\"utxo--buttons\">\n                                {!redeemingUTXO ? <button disabled={redeeming} className=\"button--blue\" onClick={onRedeem}>{redeeming ? <Loading alt={true} /> : <>Send to darknodes</>}</button> : null}\n                            </div>\n                        </div>;\n                    })}\n                    {renVMMessages.map((renVMMessage, time) => {\n                        // const first = renVMMessage.first(undefined);\n                        const loading = signatures.has(time) ? redeemingOnEthereum.get(time) : checkingResponse.get(time);\n                        const messageUtxos = messageToUtxos.get(time);\n                        console.log(messageUtxos);\n                        const value = messageUtxos ? messageUtxos.reduce((sum, utxo) => utxo.utxo.amount + sum, 0) : 0;\n                        return <div className=\"utxo\" key={time}>\n                            {showCircle(66)}\n                            <div className=\"utxo--right\">\n                                <span>Deposited <b>{value / (10 ** 8)} BTC</b></span>\n                                <span className=\"utxo--txid\">Sent to <b>{renVMMessage.size} darknodes</b>. Awaiting response.</span>\n                                {/* <span>\n                                    {messageUtxos ? messageUtxos.map(utxo => <span key={utxo.txHash} className=\"utxo--txid\">{utxo.txHash.slice(0, 8)}...</span>).toArray() : null}\n                                </span> */}\n                                {/* <span className=\"utxo--txid\">{first ? first.messageID : \"\"}</span> */}\n                                {/* <span className=\"utxo--txid\">{time}</span> */}\n                            </div>\n                            {signatures.has(time) ?\n                                <div className=\"utxo--buttons\">\n                                    {/* tslint:disable-next-line: react-this-binding-issue jsx-no-lambda */}\n                                    <button className=\"button--blue\" onClick={() => { redeemOnEthereum(time).catch(console.error); }} disabled={loading}>{loading ? <Loading /> : <>Redeem on Ethereum</>}</button>\n                                </div>\n                                :\n                                <>\n                                    <div className=\"utxo--buttons\">\n\n                                        {/* tslint:disable-next-line: react-this-binding-issue jsx-no-lambda */}\n                                        <button className=\"button--white\" onClick={() => { resendMessage(time).catch(console.error); }} disabled={resubmitting.has(time)}>{resubmitting.has(time) ? <Loading /> : <>Resend ren_sendMessage</>}</button>\n                                    </div>\n                                    <div className=\"utxo--buttons\">\n                                        {/* tslint:disable-next-line: react-this-binding-issue jsx-no-lambda */}\n                                        <button className=\"button--white\" onClick={() => { checkForResponse(time).catch(console.error); }} disabled={loading}>{loading ? <Loading /> : <>Check for response</>}</button>\n                                    </div>\n                                </>\n                            }\n                        </div>;\n                    }).toList()}\n                </div>\n            </div> : null}\n    </div >;\n};\n\nconst mapStateToProps = (state: ApplicationData) => ({\n    store: {\n        ethereumAddress: state.general.ethereumAddress,\n        redeemedUTXOs: state.general.redeemedUTXOs,\n        darknodeGroup: state.general.darknodeGroup,\n        renVMMessages: state.general.renVMMessages,\n        utxoToMessage: state.general.utxoToMessage,\n        messageToUtxos: state.general.messageToUtxos,\n        signatures: state.general.signatures,\n    }\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n    actions: bindActionCreators({\n        setEthereumAddress,\n        addToRedeemedUTXOs,\n        addToRenVMMessages,\n        addToSignatures,\n        addToUtxoToMessage,\n        addToMessageToUtxos,\n    }, dispatch)\n});\n\ninterface Props extends ReturnType<typeof mapStateToProps>, ConnectedReturnType<typeof mapDispatchToProps> {\n}\n\nexport const SwapController = connect(mapStateToProps, mapDispatchToProps)(SwapControllerClass);\n","import * as React from \"react\";\n\nimport { connect, ConnectedReturnType } from \"react-redux\"; // Custom typings\nimport { Router, withRouter } from \"react-router-dom\";\nimport { bindActionCreators, Dispatch } from \"redux\";\n\nimport { FeedbackButton, ScrollToTop as ScrollToTopWithoutRouter } from \"@renex/react-components\";\n\nimport { _captureBackgroundException_ } from \"../../lib/util/errors\";\nimport { history } from \"../../lib/util/history\";\nimport { ApplicationData } from \"../../store/types/general\";\nimport { _catch_ } from \"../views/ErrorBoundary\";\nimport { BackgroundTasks } from \"./BackgroundTasks\";\nimport { HeaderController } from \"./HeaderController\";\nimport { SwapController } from \"./SwapController\";\n\nconst ScrollToTop = withRouter(ScrollToTopWithoutRouter);\n\n/**\n * App is the main visual component responsible for displaying different routes\n * and running background app loops\n */\nclass AppClass extends React.Component<Props, State> {\n    /**\n     * The main render function.\n     * @dev Should have minimal computation, loops and anonymous functions.\n     */\n    public render(): React.ReactNode {\n        return (\n            <Router history={history}>\n                <main className=\"theme-light\">\n                    <div className=\"themed-app\">\n                        {_catch_(<BackgroundTasks />)}\n                        <ScrollToTop />\n\n                        <div>\n                            {_catch_(<HeaderController />)}\n                            {_catch_(<SwapController />)}\n                            {_catch_(<FeedbackButton url=\"#\" />)}\n                        </div>\n                    </div>\n                </main>\n            </Router>\n        );\n    }\n}\n\nconst mapStateToProps = (state: ApplicationData) => ({\n    store: {\n    }\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n    actions: bindActionCreators({\n    }, dispatch)\n});\n\ninterface Props extends ReturnType<typeof mapStateToProps>, ConnectedReturnType<typeof mapDispatchToProps> {\n}\n\ninterface State {\n}\n\nexport const App = connect(mapStateToProps, mapDispatchToProps)(AppClass);\n","export type DarknodeID = { id: string };\nexport const NewDarknodeID = (id: string) => ({ id });\n\nexport type MultiAddress = { multiAddress: string };\nexport const NewMultiAddress = (multiAddress: string) => ({ multiAddress });\n\nexport const multiAddressToID = (multiAddress: MultiAddress): DarknodeID => {\n    const split = multiAddress.multiAddress.split(\"/\");\n    return { id: split[split.length - 1] };\n};\n","import axios, { AxiosResponse } from \"axios\";\n\nimport { MultiAddress } from \"../types/types\";\nimport {\n    AddressesRequest,\n    AddressesResponse,\n    EpochResponse,\n    HealthResponse,\n    NumPeersResponse,\n    PeersResponse,\n    ReceiveMessageRequest,\n    ReceiveMessageResponse,\n    SendMessageRequest,\n    SendMessageResponse,\n} from \"./types\";\n\nexport class Darknode {\n    public multiAddress: MultiAddress;\n    private readonly url: string;\n\n    constructor(multiAddress: MultiAddress) {\n        this.multiAddress = multiAddress;\n        if (multiAddress.multiAddress.charAt(0) === \"/\") {\n            try {\n                const [_, _ip4, ip, _tcp, port, _ren, _id] = multiAddress.multiAddress.split(\"/\");\n                const fixedPort = port === \"18514\" ? \"18515\" : port;\n                // tslint:disable-next-line: no-http-string\n                this.url = `http://${ip}:${fixedPort}`;\n            } catch (error) {\n                throw new Error(`Malformatted multiAddress: ${multiAddress}`);\n            }\n        } else {\n            this.url = multiAddress.multiAddress;\n        }\n    }\n\n    public async getHealth(): Promise<HealthResponse> {\n        let resp;\n        try {\n            resp = await axios.post(`${this.url}`, this.generatePayload(\"ren_healthCheck\"));\n            if (resp.status !== 200) {\n                throw this.responseError(\"Unexpected status code returned by Darknode\", resp);\n            }\n        } catch (error) {\n            if (error.response) {\n                throw new Error(\n                    `Darknode returned status ${error.response.status} with reason: ${error.response.data}`,\n                );\n            } else {\n                throw error;\n            }\n        }\n        return resp.data as HealthResponse;\n    }\n\n    public async getPeers(): Promise<PeersResponse> {\n        let resp;\n        try {\n            resp = await axios.post(`${this.url}`, this.generatePayload(\"ren_queryPeers\"));\n            if (resp.status !== 200) {\n                throw this.responseError(\"Unexpected status code returned by Darknode\", resp);\n            }\n        } catch (error) {\n            if (error.response) {\n                throw new Error(\n                    `Darknode returned status ${error.response.status} with reason: ${error.response.data}`,\n                );\n            } else {\n                throw error;\n            }\n        }\n        return resp.data as PeersResponse;\n    }\n\n    public async getNumberOfPeers(): Promise<NumPeersResponse> {\n        let resp;\n        try {\n            resp = await axios.post(`${this.url}`, this.generatePayload(\"ren_queryNumPeers\"));\n            if (resp.status !== 200) {\n                throw this.responseError(\"Unexpected status code returned by Darknode\", resp);\n            }\n        } catch (error) {\n            if (error.response) {\n                throw new Error(\n                    `Darknode returned status ${error.response.status} with reason: ${error.response.data}`,\n                );\n            } else {\n                throw error;\n            }\n        }\n        return resp.data as NumPeersResponse;\n    }\n\n    public async getEpoch(): Promise<EpochResponse> {\n        let resp;\n        try {\n            resp = await axios.post(`${this.url}`, this.generatePayload(\"ren_queryEpoch\"));\n            if (resp.status !== 200) {\n                throw this.responseError(\"Unexpected status code returned by Darknode\", resp);\n            }\n        } catch (error) {\n            if (error.response) {\n                throw new Error(\n                    `Darknode returned status ${error.response.status} with reason: ${error.response.data}`,\n                );\n            } else {\n                throw error;\n            }\n        }\n        return resp.data as EpochResponse;\n    }\n\n    public async getAddresses(request: AddressesRequest): Promise<AddressesResponse> {\n        let resp;\n        try {\n            resp = await axios.post(`${this.url}`, this.generatePayload(\"ren_queryAddresses\", request));\n            if (resp.status !== 200) {\n                throw this.responseError(\"Unexpected status code returned by Darknode\", resp);\n            }\n        } catch (error) {\n            if (error.response) {\n                throw new Error(\n                    `Darknode returned status ${error.response.status} with reason: ${error.response.data}`,\n                );\n            } else {\n                throw error;\n            }\n        }\n        return resp.data as AddressesResponse;\n    }\n\n    public async sendMessage(request: SendMessageRequest): Promise<SendMessageResponse> {\n        let resp;\n        try {\n            resp = await axios.post(`${this.url}`, this.generatePayload(\"ren_sendMessage\", request));\n            if (resp.status !== 200) {\n                throw this.responseError(\"Unexpected status code returned by Darknode\", resp);\n            }\n        } catch (error) {\n            if (error.response) {\n                throw new Error(\n                    `Darknode returned status ${error.response.status} with reason: ${error.response.data}`,\n                );\n            } else {\n                throw error;\n            }\n        }\n        return resp.data as SendMessageResponse;\n    }\n\n    public async receiveMessage(request: ReceiveMessageRequest): Promise<ReceiveMessageResponse> {\n        let resp;\n        try {\n            resp = await axios.post(`${this.url}`, this.generatePayload(\"ren_receiveMessage\", request));\n            if (resp.status !== 200) {\n                throw this.responseError(\"Unexpected status code returned by Darknode\", resp);\n            }\n        } catch (error) {\n            if (error.response) {\n                throw new Error(\n                    `Darknode returned status ${error.response.status} with reason: ${error.response.data}`,\n                );\n            } else {\n                throw error;\n            }\n        }\n        return resp.data as ReceiveMessageResponse;\n    }\n\n    private generatePayload(method: string, params?: unknown) {\n        return {\n            id: 1,\n            jsonrpc: \"2.0\",\n            method,\n            params,\n            version: \"0.0\",\n        };\n    }\n\n    private responseError(msg: string, response: AxiosResponse): ResponseError {\n        const error = new Error(msg) as ResponseError;\n        error.response = response;\n        return error;\n    }\n}\n\ninterface ResponseError extends Error {\n    response: AxiosResponse;\n}\n","import { List, Map } from \"immutable\";\n\nimport { MultiAddress, multiAddressToID, NewMultiAddress } from \"../types/types\";\nimport { Darknode } from \"./darknode\";\nimport {\n    HealthResponse,\n    ReceiveMessageRequest,\n    ReceiveMessageResponse,\n    SendMessageRequest,\n    SendMessageResponse,\n} from \"./types\";\n\nconst bootStrapNode0 = NewMultiAddress(\"/ip4/3.88.22.140/tcp/18515/8MJpA1rXYMPTeJoYjsFBHJcuYBe7zP\");\nconst bootStrapNode1 = NewMultiAddress(\"/ip4/34.219.91.31/tcp/18515/8MH9zGoDLJKiXrhqWLXTzHp1idfxte\");\nconst bootStrapNode2 = NewMultiAddress(\"/ip4/3.92.234.171/tcp/18515/8MGJGnGLdYF6x5YuhkAmgfj6kknJBb\");\nconst bootStrapNode3 = NewMultiAddress(\"/ip4/35.183.181.45/tcp/18515/8MJppC57CkHzDQVAAPTotQGGyzqJ2r\");\nconst bootStrapNode4 = NewMultiAddress(\"/ip4/13.233.251.189/tcp/18515/8MHdUqYXcEhisZipM3hXPsFxHfM3VH\");\nconst bootStrapNode5 = NewMultiAddress(\"/ip4/34.221.196.212/tcp/18515/8MJd7zB9GXsvpm2cSECFP4Bof5G3i8\");\nconst bootStrapNode6 = NewMultiAddress(\"/ip4/35.158.105.90/tcp/18515/8MJN1hHhdcJwzDoj35zRLL3zE3yk45\");\nconst bootStrapNode7 = NewMultiAddress(\"/ip4/52.67.113.89/tcp/18515/8MKYusXyZAGVRn76vTmnK9FWmmPbJj\");\n\nexport const bootstrapNodes = [\n    bootStrapNode0,\n    bootStrapNode1,\n    bootStrapNode2,\n    bootStrapNode3,\n    bootStrapNode4,\n    bootStrapNode5,\n    bootStrapNode6,\n    bootStrapNode7,\n];\n\nconst promiseAll = async <a>(list: List<Promise<a>>, defaultValue: a): Promise<List<a>> => {\n    let newList = List<a>();\n    for (const entryP of list.toArray()) {\n        try {\n            newList = newList.push(await entryP);\n        } catch (error) {\n            newList = newList.push(defaultValue);\n        }\n    }\n    return newList;\n};\n\n/**\n * DarknodeGroup allows sending messages to multiple darknodes\n */\nexport class DarknodeGroup {\n    public bootstraps = List<MultiAddress>();\n    public darknodes = Map<string, Darknode>();\n\n    constructor(multiAddresses: MultiAddress[] | MultiAddress) {\n        if (Array.isArray(multiAddresses)) {\n            this.bootstraps = this.bootstraps.concat(multiAddresses);\n            this.addDarknodes(multiAddresses);\n        } else {\n            this.addDarknodes([multiAddresses]);\n        }\n        this.bootstraps = this.bootstraps.concat(multiAddresses);\n    }\n\n    public bootstrap = async (): Promise<this> => {\n        let success = false;\n        let lastError;\n        for (const multiAddress of this.bootstraps.toArray()) {\n            try {\n                const result: Darknode | undefined = this.darknodes.get(multiAddressToID(multiAddress).id);\n                if (!result) {\n                    throw new Error(\"No darknode provided\");\n                }\n                const peers = await result.getPeers();\n                this.addDarknodes(peers.result.peers.map(NewMultiAddress));\n                success = true;\n            } catch (error) {\n                lastError = error;\n            }\n        }\n        if (!success) {\n            throw lastError;\n        }\n        return this;\n    }\n\n    public getHealth = async (): Promise<List<HealthResponse | null>> => {\n        return promiseAll<HealthResponse | null>(\n            this.darknodes.valueSeq().map(darknode => darknode.getHealth()).toList(),\n            null,\n        );\n    }\n\n    public sendMessage = async (request: SendMessageRequest): Promise<List<{ result: SendMessageResponse, multiAddress: MultiAddress } | null>> => {\n        return promiseAll<{ result: SendMessageResponse, multiAddress: MultiAddress } | null>(\n            this.darknodes.valueSeq().map(async (darknode) => ({\n                multiAddress: darknode.multiAddress,\n                result: await darknode.sendMessage(request),\n            })).toList(),\n            null,\n        );\n    }\n\n    public receiveMessage = async (request: ReceiveMessageRequest): Promise<List<ReceiveMessageResponse | null>> => {\n        return promiseAll<ReceiveMessageResponse | null>(\n            this.darknodes.valueSeq().map(darknode => darknode.receiveMessage(request)).toList(),\n            null,\n        );\n    }\n\n    private readonly addDarknodes = (multiAddresses: MultiAddress[]): this => {\n        for (const multiAddress of multiAddresses) {\n            this.darknodes = this.darknodes.set(multiAddressToID(multiAddress).id, new Darknode(multiAddress));\n        }\n        return this;\n    }\n}\n\nexport class WarpGateGroup extends DarknodeGroup {\n    constructor(multiAddresses: MultiAddress[] | MultiAddress) {\n        super(multiAddresses);\n        // this.getHealth();\n    }\n\n    public submitDeposits = async (address: string): Promise<List<{ messageID: string, multiAddress: MultiAddress }>> => {\n        // TODO: If one fails, still return the other.\n\n        const results1 = await this.sendMessage({\n            nonce: 0,\n            to: \"WarpGate\",\n            signature: \"\",\n            payload: {\n                method: \"MintZBTC\",\n                args: [\n                    {\n                        value: address.slice(0, 2) === \"0x\" ? address.slice(2) : address,\n                    }\n                ],\n            },\n        });\n\n        const results2 = await this.sendMessage({\n            nonce: 0,\n            to: \"WarpGate\",\n            signature: \"\",\n            payload: {\n                method: \"MintZZEC\",\n                args: [\n                    {\n                        value: address.slice(0, 2) === \"0x\" ? address.slice(2) : address,\n                    }\n                ],\n            },\n        });\n\n        const results = results1.concat(results2);\n\n        if (results.filter(x => x !== null).size < 1) {\n            throw new Error(\"Unable to send message to enough darknodes.\");\n        }\n\n        return results.filter(x => x !== null).map((result) => ({\n            // tslint:disable: no-non-null-assertion no-unnecessary-type-assertion\n            multiAddress: result!.multiAddress,\n            messageID: result!.result.result.messageID,\n            // tslint:enable: no-non-null-assertion no-unnecessary-type-assertion\n        })).toList();\n    }\n\n    public checkForResponse = async (messages: List<{ messageID: string, multiAddress: MultiAddress }>): Promise<string> => {\n        for (const { messageID, multiAddress } of messages.toArray()) {\n            const node = this.darknodes.get(multiAddressToID(multiAddress).id);\n            if (node) {\n                try {\n                    const signature = await node.receiveMessage({ messageID });\n                    // Error:\n                    // { \"jsonrpc\": \"2.0\", \"version\": \"0.1\", \"error\": { \"code\": -32603, \"message\": \"result not available\", \"data\": null }, \"id\": null }\n                    // Success:\n                    // (TODO)\n                    if (signature.result) {\n                        console.log(signature.result);\n                        return signature.result.payload.args;\n                    }\n                } catch (error) {\n                    console.error(error);\n                }\n            }\n        }\n        throw new Error(`Signature not available`);\n    }\n}\n","import { List, Map, Set } from \"immutable\";\n\n/**\n * TYPE can be (recursively defined):\n *\n * 1) result of `typeof` (\"object\", \"number\", \"string\")\n * 2) TYPE[]\n * 3) List<TYPE>\n * 4) Set<TYPE>\n */\ntype TYPE = string;\n\nconst isArrayType = (type: TYPE) => type.slice(-2) === \"[]\";\nconst isListType = (type: TYPE) => type.slice(0, 5) === \"List<\" && type.slice(-1) === \">\";\nconst isSetType = (type: TYPE) => type.slice(0, 4) === \"Set<\" && type.slice(-1) === \">\";\nconst isMapType = (type: TYPE) => type.slice(0, 12) === \"Map<string, \" && type.slice(-1) === \">\";\n\n/**\n * validateType takes two parameters - a target type and a value, and checks\n * that the value can be converted to that type, returning the converted value\n * or throwing an error. Only List/Set conversions are supported.\n *\n * It is used for for deserializing JSON to Immutable types.\n *\n * Example:\n *      validateType(\"string\", \"abc\") => \"abc\"\n *      validateType(\"number\", 1) => 1\n *      validateType(\"string\", 1) => Err\n *      validateType(\"List<string>\", [ \"abc\" ]) => List [ \"abc\" ]\n *      validateType(\"Set<string>\", [ \"abc\" ]) => Set { \"abc\" }\n *\n * @param type The expected type as either X or X[] (etc.) where X is the output\n * of `typeof`\n * @param object The value to check the type of\n */\nexport const validateType = (type: TYPE, object: unknown): unknown => {\n    if (isArrayType(type)) {\n        const subtype = type.slice(0, -2);\n        return (object as unknown[]).map((e) => validateType(subtype, e));\n    } else if (isListType(type)) {\n        const subtype = type.slice(5, -1);\n        return List((object as unknown[]).map((e) => validateType(subtype, e)));\n    } else if (isSetType(type)) {\n        const subtype = type.slice(4, -1);\n        return Set((object as unknown[]).map((e) => validateType(subtype, e)));\n    } else if (isMapType(type)) {\n        const subtype = type.slice(12, -1);\n        return Map(object as { [key: string]: {}; }).map(e => validateType(subtype, e));\n    }\n    if (typeof object === type) {\n        return object;\n    }\n    throw new Error(`Unexpected value of type ${typeof object} (expected ${type})`);\n};\n","import thunk from \"redux-thunk\";\n\nimport { Action, applyMiddleware, createStore, Middleware, Reducer } from \"redux\";\nimport { PersistConfig, persistReducer } from \"redux-persist\";\n\nimport { environment } from \"../lib/util/environmentVariables\";\nimport { rootReducer } from \"../store/reducers/rootReducer\";\nimport { persistConfig } from \"./persistConfig\";\n\nconst middlewares: Middleware[] = [\n    thunk,\n];\n\n// Log Redux actions (only in development)\nif (environment === \"local\") {\n    // middlewares.push(createLogger({ collapsed: true }));\n}\n\n// Workaround createStore not liking type of persistReducer\nconst typedPersistReducer = <S, A extends Action>(config: PersistConfig, reducer: Reducer<S, A>) => {\n    return persistReducer<S, A>(\n        config,\n        reducer\n    );\n};\n\nconst persistedReducer = typedPersistReducer(persistConfig, rootReducer);\n\nexport const configureStore = () => createStore(\n    persistedReducer,\n    applyMiddleware(...middlewares),\n);\n","import { combineReducers } from \"redux\";\n\nimport { generalReducer } from \"./general/generalReducer\";\nimport { marketReducer } from \"./market/marketReducer\";\n\nimport { ApplicationData } from \"../types/general\";\n\nexport const rootReducer = combineReducers<ApplicationData>({\n    general: generalReducer,\n    marketPrices: marketReducer,\n});\n","import { ActionType, getType } from \"typesafe-actions\";\n\nimport * as generalActions from \"../../../store/actions/general/generalActions\";\n\nimport { GeneralData } from \"../../types/general\";\n\ntype GeneralActions = ActionType<typeof generalActions>;\n\n// tslint:disable-next-line: cyclomatic-complexity\nexport const generalReducer = (state: GeneralData = new GeneralData(), action: GeneralActions) => {\n    switch (action.type) {\n        case getType(generalActions.setQuoteCurrency):\n            return state.set(\"quoteCurrency\", action.payload);\n\n        case getType(generalActions.setEthereumAddress):\n            return state.set(\"ethereumAddress\", action.payload);\n\n        case getType(generalActions.addToRedeemedUTXOs):\n            return state.set(\"redeemedUTXOs\", state.redeemedUTXOs.add(action.payload));\n\n        case getType(generalActions.addToRenVMMessages):\n            return state.set(\"renVMMessages\", state.renVMMessages.set(action.payload.utxo, action.payload.messages));\n\n        case getType(generalActions.addToUtxoToMessage):\n            return state.set(\"utxoToMessage\", state.utxoToMessage.set(action.payload.utxo, action.payload.message));\n\n        case getType(generalActions.addToMessageToUtxos):\n            return state.set(\"messageToUtxos\", state.messageToUtxos.set(action.payload.message, action.payload.utxos));\n\n        case getType(generalActions.addToSignatures):\n            return state.set(\"signatures\", state.signatures.set(action.payload.utxo, action.payload.signature));\n\n        default:\n            return state;\n    }\n};\n","import { ActionType, getType } from \"typesafe-actions\";\n\nimport * as marketActions from \"../../../store/actions/market/marketActions\";\n\nimport { MarketPrice, MarketPriceData } from \"../../types/general\";\n\ntype MarketAction = ActionType<typeof marketActions>;\n\nexport const marketReducer = (state: MarketPriceData = new MarketPriceData(), action: MarketAction) => {\n    switch (action.type) {\n        case getType(marketActions.updatePrices):\n            const { price, percentChange } = action.payload;\n            const marketPrice: MarketPrice = { price, percentChange };\n            return state.set(\"marketPrices\", state.marketPrices.set(action.payload.pair, marketPrice));\n\n        case getType(marketActions.pricesUpdating):\n            return state.set(\"updating\", action.payload);\n\n        case getType(marketActions.setTokenPrices):\n            return state.set(\"tokenPrices\", action.payload.tokenPrices);\n\n        default:\n            return state;\n    }\n};\n","import storage from \"redux-persist/lib/storage\";\n\nimport { createTransform, PersistConfig } from \"redux-persist\";\n\nimport { _captureBackgroundException_ } from \"../lib/util/errors\";\nimport { ApplicationData, GeneralData } from \"./types/general\";\n\n// Local Storage:\n\nconst generalTransform = createTransform<GeneralData, string>(\n    (inboundState: GeneralData, key: string): string => {\n        try {\n            return inboundState.serialize();\n        } catch (error) {\n            // tslint:disable-next-line: no-console\n            console.error(`Error serializing ${key} (${JSON.stringify(inboundState)}): ${error}`);\n            _captureBackgroundException_(error, { description: \"Error serializing local storage\" });\n            throw error;\n        }\n    },\n    (outboundState: string, key: string): GeneralData => {\n        try {\n            return new GeneralData().deserialize(outboundState);\n        } catch (error) {\n            // tslint:disable-next-line: no-console\n            console.error(`Error deserializing ${key} (${JSON.stringify(outboundState)}): ${error}`);\n            _captureBackgroundException_(error, { description: \"Error deserializing local storage\" });\n            throw error;\n        }\n    },\n    { whitelist: [\"general\"] as Array<keyof ApplicationData>, },\n);\n\nexport const persistConfig: PersistConfig = {\n    storage,\n    key: \"ren\",\n    whitelist: [\"general\"] as Array<keyof ApplicationData>,\n    transforms: [generalTransform],\n};\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\n\nimport { Provider } from \"react-redux\";\nimport { persistStore } from \"redux-persist\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nimport { App } from \"./components/controllers/App\";\nimport { _catch_ } from \"./components/views/ErrorBoundary\";\nimport { onLoad } from \"./lib/util/onLoad\";\nimport { configureStore } from \"./store/configureStore\";\n\nimport \"./styles/index.scss\";\n\nexport const store = configureStore();\n\nonLoad(\"RenXCS\");\n\nReactDOM.render(\n    _catch_(<Provider store={store}>\n        <PersistGate loading={null} persistor={persistStore(store)}>\n            <App />\n        </PersistGate>\n    </Provider>),\n    document.getElementById(\"root\") as HTMLElement\n);\n","import * as Sentry from \"@sentry/browser\";\n\nimport { _catch_ } from \"../../components/views/ErrorBoundary\";\nimport { environment, NETWORK, SENTRY_DSN, SOURCE_VERSION } from \"./environmentVariables\";\nimport { pageLoadedAt } from \"./errors\";\n\nexport const onLoad = (title: string) => {\n\n    // Initialize Sentry error logging\n    Sentry.init({\n        // Used to define the project to log errors to\n        dsn: SENTRY_DSN,\n\n        // Used to separate testnet and mainnet errors\n        environment,\n\n        // Used to track errors across versions\n        release: SOURCE_VERSION,\n\n        // Only throw errors generated from scripts at these URLs\n        whitelistUrls: [\n            /.*republicprotocol.*/i,\n            /.*renproject.*/i,\n\n            // Local testing (localhost and IPv4 addresses)\n            /.*localhost.*/i,\n            /.*(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).*/\n        ],\n    });\n\n    Sentry.configureScope((scope) => {\n        scope.setExtra(\"loggedIn\", false);\n\n        // We set this to false when logging to Sentry explicitly.\n        scope.setExtra(\"caught\", false);\n\n        scope.setExtra(\"release\", SOURCE_VERSION);\n\n        scope.setExtra(\"pageLoadedAt\", pageLoadedAt());\n    });\n\n    // Update document title to show network\n    if (NETWORK !== \"mainnet\") {\n        document.title = `${title} (${NETWORK})`;\n    } else {\n        document.title = title; // Also set in index.html\n    }\n\n    // tslint:disable-next-line: no-console\n    console.log(`${title} version hash: ${SOURCE_VERSION}`);\n};\n"],"sourceRoot":""}