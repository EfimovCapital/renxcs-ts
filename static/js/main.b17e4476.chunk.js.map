{"version":3,"sources":["lib/darknode/publicKey.ts","lib/blockchain/btc/common.ts","lib/util/errors.ts","lib/util/market.ts","lib/util/history.ts","lib/util/environmentVariables.ts","components/views/ErrorBoundary.tsx","store/actions/market/marketActions.ts","components/controllers/BackgroundTasks.tsx","store/actions/general/generalActions.ts","styles/images/logo.svg","styles/images/rp-flag-uk.svg","lib/blockchain/depositAddresses.ts","components/controllers/HeaderController.tsx","lib/blockchain/mercury.ts","lib/blockchain/btc/btc.ts","lib/blockchain/btc/zec.ts","lib/types/types.ts","lib/blockchain/eth/eth.ts","components/views/ShowCurrency.tsx","components/views/CurrenciesBlock.tsx","styles/images/metamask.svg","store/types/general.ts","components/views/ReceiveAddress.tsx","components/views/ShowUTXO.tsx","components/views/ShowUTXOs.tsx","components/controllers/SwapController.tsx","components/controllers/App.tsx","lib/darknode/darknode.ts","lib/darknode/darknodeGroup.ts","lib/util/persist.ts","store/configureStore.ts","store/reducers/rootReducer.ts","store/reducers/general/generalReducer.ts","store/reducers/market/marketReducer.ts","store/persistConfig.ts","index.tsx","lib/util/onLoad.ts"],"names":["Buffer","__webpack_require__","d","__webpack_exports__","testnetMasterPKH","createAddress","networks","opcode","script","_ref","mainnet","masterPKH","address","add","substring","slice","OP_DROP","OP_DUP","OP_HASH160","OP_EQUALVERIFY","OP_CHECKSIG","toScriptHashOut","toAddress","livenet","testnet","toString","pageLoaded","Token","history","createBrowserHistory","INFURA","process","environment","pageLoadedAt","naturalTime","Math","floor","getTime","message","suffix","countDown","Date","toUTCString","_captureException_","error","details","_noCapture_","Sentry","scope","setExtra","category","setTag","level","setLevel","Object","keys","forEach","key","response","data","status","errorObject","cache","rawErrorJSON","JSON","stringify","value","indexOf","parse","push","rawError","console","concat","toUpperCase","_unused","ignoreNetwork","match","isNetworkError","_captureBackgroundException_","objectSpread","_captureInteractionException_","_captureComponentException_","errorInfo","description","ErrorBoundary","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidCatch","setState","reportFeedback","state","react","style","whiteSpace","role","cursor","onClick","componentStack","children","React","_catch_","ErrorBoundary_ErrorBoundary","CoinGeckoIDs","Map","set","DAI","BTC","ETH","REN","TUSD","ZEC","WBTC","fetchDetails","asyncToGenerator","regenerator_default","a","mark","_callee","geckoID","url","wrap","_context","prev","next","fetch","sent","abrupt","json","stop","_x","apply","arguments","getTokenPricesInCurrencies","_ref3","_callee3","prices","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","tokenAndDetails","_tokenAndDetails","token","coinGeckoID","price","_context3","undefined","toSeq","toArray","Symbol","iterator","done","slicedToArray","market_data","current_price","t0","return","finish","updatePrices","createStandardAction","pricesUpdating","setTokenPrices","updateTokenPrices","_callee2","dispatch","_context2","Promise","resolve","reject","setTimeout","tokenPrices","BackgroundTasksClass","context","callBootstrapTimeout","callUpdatePricesTimeout","callUpdateMarketPricesTimeout","callUpdatePrices","delay","actions","clearTimeout","callBootstrap","callUpdateMarketPrices","setupLoops","catch","BackgroundTasks","connect","store","darknodeGroup","general","bindActionCreators","setQuoteCurrency","setEthereumAddress","addToRedeemedUTXOs","addToRenVMMessages","addToSignatures","addToUtxoToMessage","addToMessageToUtxos","_extends","assign","target","i","length","source","prototype","hasOwnProperty","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","logo_ref2","react_default","createElement","className","fillRule","clipRule","fill","logo_ref3","logo_ref4","logo_ref5","logo_ref6","logo_ref7","logo_ref8","_ref9","logo_ref10","_ref11","_ref12","_ref13","_ref14","logo_SvgLogo","svgRef","width","height","viewBox","ref","ForwardRef","forwardRef","p","rp_flag_uk_extends","rp_flag_uk_objectWithoutProperties","rp_flag_uk_objectWithoutPropertiesLoose","Currency","rp_flag_uk_ref2","rp_flag_uk_ref3","rp_flag_uk_ref4","rp_flag_uk_ref5","id","stroke","strokeWidth","points","rp_flag_uk_SvgRpFlagUk","rp_flag_uk_ForwardRef","currencyOptions","options","currencies","currency","lib_es","err","getCurrencyOptions","languageOptions","logo","react_router_dom","to","HeaderControllerClass","render","quoteCurrency","languageDropdown","selected","setValue","setLanguage","currencyDropdown","setCurrency","menu","language","HeaderController","getUTXOs","endpoint","limit","confirmations","resp","Axios","get","_x2","_x3","createBTCAddress","Networks","Opcode","Script","getBTCTestnetUTXOs","createBTCTestnetAddress","createZECAddress","getZECTestnetUTXOs","createZECTestnetAddress","zecAddressToHex","Address","toBuffer","NewMultiAddress","multiAddress","multiAddressToID","split","zBTCAddress","zZECAddress","bridgedToken","Record","darknodes","List","web3","eth","Contract","BridgedTokenABI","CurrencyList","CurrencyDecimals","DepositAddresses","receiveAddress","depositAddresses","zBTC","zZEC","utxos","btcDepositAddress","newBitcoinUTXOs","zecDepositAddress","newZcashUTXOs","_args","utxo","map","t1","t2","t3","getBalances","balances","_i","_arr","_ref4","curr","contract","ImmutableMap","utils","methods","balanceOf","t4","fromWei","t5","getBalance","_ref5","BigNumber","pow","div","toFixed","t6","t7","t8","burn","_ref6","_callee4","amount","toHex","_context4","getWeb3","Error","net","getNetworkType","getAccounts","multipliedBy","send","from","_x4","Web3","ShowCurrency","index","_React$useState","_React$useState2","expanded","setExpanded","_React$useState3","_React$useState4","setError","_React$useState5","_React$useState6","balance","setBalance","clickAway","event","current","contains","document","removeEventListener","showDeposit","_ref2","e","parent","addEventListener","currentTarget","parentElement","scrollTo","left","preventDefault","prompt","data-id","data-index","onMouseDown","href","CurrenciesBlock","ShowCurrency_ShowCurrency","metamask_extends","metamask_objectWithoutProperties","metamask_objectWithoutPropertiesLoose","UITheme","metamask_ref2","type","metamask_ref3","metamask_ref4","metamask_SvgMetamask","x","y","enableBackground","xmlSpace","metamask_ForwardRef","ReceiveAddress","onGenerateAddress","ethereumAddress","onChange","getMetaMaskAddress","onSubmit","placeholder","disabled","showCircle","percentage","color","dist_default","styles","path","strokeLinecap","trail","strokeOpacity","ShowUTXO","simple","last","redeemingUTXO","redeeming","onRedeem","rel","txHash","alt","signatures","redeemingOnEthereum","checkingResponse","time","renVMMessage","messageToUtxos","checkForResponse","redeemOnEthereum","loading","resubmitting","has","messageUtxos","values","previousValue","valuesString","join","size","ShowUTXOs","checking","onRefresh","utxoToMessage","redeemedUTXOs","renVMMessages","unredeemed","filter","redeemable","first","ShowUTXO_ShowUTXO","_","toList","window","ethereum","enable","currentProvider","SwapController","_props$store","mounted","setMounted","setDepositAddresses","_React$useState7","_React$useState8","setChecking","_React$useState9","_React$useState10","setUTXOs","_React$useState11","_React$useState12","setRedeeming","_React$useState13","_React$useState14","blur","setBlur","_React$useState15","_React$useState16","setCheckingResponse","_React$useState17","_React$useState18","_React$useState19","_React$useState20","setRedeemingOnEthereum","signature","remove","_callee5","promises","newUtxos","_context5","_x5","valueSeq","all","_callee6","messages","_context6","submitDeposits","_x6","_ref7","_callee7","addresses","_context7","_ref8","_callee8","_context8","_x7","ReceiveAddress_ReceiveAddress","CurrenciesBlock_CurrenciesBlock","ShowUTXOs_ShowUTXOs","ScrollToTop","withRouter","ScrollToTopWithoutRouter","AppClass","react_router","App","Darknode","charAt","_multiAddress$multiAd","_multiAddress$multiAd2","ip","port","fixedPort","createClass","_getHealth","axios","post","generatePayload","responseError","_getPeers","_getNumberOfPeers","_getEpoch","_getAddresses","request","_sendMessage","_receiveMessage","method","params","jsonrpc","version","msg","bootstrapNodes","promiseAll","list","defaultValue","newList","entryP","WarpGateGroup","_DarknodeGroup","multiAddresses","_this2","results","sendMessage","nonce","payload","args","result","messageID","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_iterator4","_step4","_ref10","node","receiveMessage","_x8","inherits","DarknodeGroup","bootstraps","bootstrap","success","lastError","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","peers","getPeers","addDarknodes","getHealth","darknode","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","Array","isArray","validateType","object","isArrayType","subtype","isListType","isSetType","Set","isMapType","config","reducer","syncedGeneralData","GeneralData","_Record","obj","_Array$from","str","_i2","_Array$from2","shownToUser","alert","advanced","theme","Light","advancedTheme","Dark","USD","MarketPriceData","_Record2","updating","marketPrices","OrderedMap","rootReducer","combineReducers","action","getType","generalActions","marketActions","_action$payload","marketPrice","percentChange","pair","generalTransform","createTransform","inboundState","serialize","outboundState","deserialize","whitelist","persistConfig","storage","transforms","middlewares","thunk","persistedReducer","persistReducer","title","createStore","applyMiddleware","dsn","release","whitelistUrls","log","ReactDOM","es","integration_react","persistor","persistStore","getElementById"],"mappings":"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","file":"static/js/main.b17e4476.chunk.js","sourcesContent":["export const testnetMasterPKH = new Buffer(\"be8d41d9e47170a33d7d758ebf853551dea63ab8\", \"hex\");\n","import { Networks as BNetworks, Opcode as BOpcode, Script as bScript } from \"bitcore-lib\";\nimport { Networks as ZNetworks, Opcode as ZOpcode, Script as zScript } from \"bitcore-lib-zcash\";\n\nexport const createAddress =\n    (networks: typeof BNetworks | typeof ZNetworks, opcode: typeof BOpcode | typeof ZOpcode, script: typeof bScript | typeof zScript) =>\n        ({ mainnet, masterPKH }: { mainnet: boolean, masterPKH: Buffer }) =>\n            (address: string) =>\n                new script()\n                    .add(new Buffer(address.substring(0, 2) === \"0x\" ? address.slice(2) : address, \"hex\"))\n                    .add(opcode.OP_DROP)\n                    .add(opcode.OP_DUP)\n                    .add(opcode.OP_HASH160)\n                    .add(masterPKH)\n                    .add(opcode.OP_EQUALVERIFY)\n                    .add(opcode.OP_CHECKSIG)\n                    .toScriptHashOut().toAddress(mainnet ? networks.livenet : networks.testnet).toString();\n","import * as Sentry from \"@sentry/browser\";\n\nimport { naturalTime } from \"@renex/react-components\";\n\nimport { environment } from \"./environmentVariables\";\n\n// tslint:disable-next-line: no-any\ntype AnyError = Error | any;\n\ninterface Details {\n    description?: string;\n    category?: string;\n    level?: Sentry.Severity;\n    ignoreNetwork?: boolean;\n}\n\ninterface Described {\n    description: string;\n}\n\ninterface ShownToUser {\n    shownToUser: string;\n}\n\nlet pageLoaded: Date;\nexport const pageLoadedAt = (): string => {\n    if (!pageLoaded) {\n        pageLoaded = new Date();\n        return pageLoaded.toUTCString();\n    } else {\n        return naturalTime(Math.floor(pageLoaded.getTime() / 1000), {\n            message: \"Just now\",\n            suffix: \"ago\",\n            countDown: false,\n        });\n    }\n};\n\n// Determines whether or not this is a common network error (too many of these\n// are being logged to Sentry)\nconst isNetworkError = (error: AnyError): boolean => {\n    const message: string = ((error || {}).message || error).toString();\n\n    if (\n        message.match(/Network ?Error/i) ||\n        message.match(/Failed to fetch/i) ||\n        message.match(/Network request failed/i) ||\n        message.match(/Wrong response id/i) ||\n        message.match(/Request failed or timed out/i) ||\n        message.match(/Returned values aren't valid, did it run Out of Gas\\?/i) ||\n        message.match(/Invalid JSON RPC response/i) ||\n        message.match(/timeout of 0ms exceeded/i)\n    ) {\n        return true;\n    }\n\n    return false;\n};\n\nconst rawError = (errorObject: Error) => {\n    // https://stackoverflow.com/questions/11616630/json-stringify-avoid-typeerror-converting-circular-structure-to-json/11616993#11616993\n\n    // Note: cache should not be re-used by repeated calls to JSON.stringify.\n    let cache: Array<{}> | null = [];\n    const rawErrorJSON = JSON.stringify(errorObject, (key, value) => {\n        if (key === \"request\") {\n            return \"... omitted\";\n        }\n        if (cache && typeof value === \"object\" && value !== null) {\n            if (cache.indexOf(value) !== -1) {\n                // Duplicate reference found\n                try {\n                    // If this value does not reference a parent it can be deduped\n                    return JSON.parse(JSON.stringify(value));\n                } catch (error) {\n                    // discard key if value cannot be deduped\n                    return;\n                }\n            }\n            // Store value in our collection\n            cache.push(value);\n        }\n        return value;\n    });\n    cache = null; // Enable garbage collection\n\n    return rawErrorJSON;\n};\n\nconst _captureException_ = <X extends Details>(error: AnyError, details: X) => {\n    if (error._noCapture_) {\n        return;\n    }\n\n    Sentry.withScope(scope => {\n        // How long ago the page was loaded at\n        scope.setExtra(\"pageLoadedAt\", pageLoadedAt());\n\n        // Category\n        if (details.category) {\n            scope.setTag(\"category\", details.category);\n        }\n\n        // Level\n        if (details.level) {\n            scope.setLevel(details.level);\n        }\n\n        // Extra information\n        Object.keys(details)\n            .forEach(key => {\n                scope.setExtra(key, details[key]);\n            });\n\n        if (error && error.response) {\n            scope.setExtra(\"responseData\", error.response.data);\n            scope.setExtra(\"responseStatus\", error.response.status);\n        }\n\n        scope.setExtra(\"caught\", true);\n        scope.setExtra(\"zRawError\", rawError(error));\n\n        // tslint:disable-next-line: no-console\n        console.error(error);\n\n        if (environment !== \"mainnet\") {\n            if (typeof error === \"string\") {\n                // tslint:disable-next-line: no-parameter-reassignment\n                error = `[${environment.toUpperCase()}] ${error}`;\n            } else {\n                try {\n                    error.message = `[${environment.toUpperCase()}] ${error.message || error}`;\n                } catch {\n                    // Ignore: Unable to overwrite message (may be read-only)\n                }\n            }\n        }\n\n        // Check if we should ignore the error\n        if (details.ignoreNetwork && isNetworkError(error)) {\n            return;\n        }\n\n        Sentry.captureException(error);\n\n    });\n};\n\n// Background exceptions are thrown in background loops and actions\nexport const _captureBackgroundException_ = <X extends Details & Described>(error: AnyError, details?: X) => {\n    _captureException_(error, { ignoreNetwork: true, ...details, category: \"background_exception\" });\n};\n\n// Interaction exceptions are thrown as a direct result of a user interaction\nexport const _captureInteractionException_ = <X extends Details & Described & ShownToUser>(error: AnyError, details?: X) => {\n    _captureException_(error, { ...details, category: \"interaction_exception\" });\n};\n\n// Component exceptions are thrown from an ErrorBoundary\nexport const _captureComponentException_ = (error: AnyError, errorInfo: React.ErrorInfo) => {\n    _captureException_(error, { ...errorInfo, description: \"Error caught in Error Boundary. See Component stack trace.\", category: \"component_exception\" });\n};\n\n// _noCapture_ is to mark errors that should not be reported to Sentry.\nexport const _noCapture_ = (error: Error): Error => {\n    (error as AnyError)._noCapture_ = true;\n    return error;\n};\n","import { Currency } from \"@renex/react-components\";\nimport { Map } from \"immutable\";\n\nimport { TokenPrices } from \"../../store/types/general\";\n\nexport enum Token {\n    DAI = \"DAI\",\n    BTC = \"BTC\",\n    ETH = \"ETH\",\n    REN = \"REN\",\n    TUSD = \"TUSD\",\n    ZEC = \"ZEC\",\n    WBTC = \"WBTC\",\n}\n// export type MarketPair = string;\n\nconst CoinGeckoIDs = Map<Token, string>()\n    .set(Token.DAI, \"dai\")\n    .set(Token.BTC, \"bitcoin\")\n    .set(Token.ETH, \"ethereum\")\n    .set(Token.REN, \"republic-protocol\")\n    .set(Token.TUSD, \"true-usd\")\n    .set(Token.ZEC, \"zcash\")\n    .set(Token.WBTC, \"bitcoin\");\n\n/**\n * Retrieves the current pricepoint for two currencies.\n * @param fstCode The first currency.\n * @param sndCode The second currency.\n * @returns An array containing the price with respect to the currencies, and the 24 hour percent change.\n */\nconst fetchDetails = async (geckoID: string) => {\n    const url = `https://api.coingecko.com/api/v3/coins/${geckoID}?localization=false&tickers=false&market_data=true&community_data=false&developer_data=false&sparkline=false`;\n    const response = await fetch(url);\n    return response.json();\n};\n\nexport const getMarketPrice = async (quoteCode: Token, baseCode: Token): Promise<[number, number]> => {\n    const baseCoinGeckoID = CoinGeckoIDs.get(baseCode, undefined);\n    if (baseCoinGeckoID === undefined) {\n        return [0, 0];\n    }\n\n    const baseData = await fetchDetails(baseCoinGeckoID);\n    const basePrice: number | null | undefined = baseData.market_data.current_price[quoteCode.toLowerCase()];\n    const basePercentChange: number | null | undefined = baseData.market_data.price_change_percentage_24h_in_currency[quoteCode.toLowerCase()];\n\n    if (basePrice !== undefined && basePrice !== null) {\n        return [basePrice || 0, basePercentChange || 0];\n    }\n\n    // If the pairing isn't available, use BTC as a conversion bridge.\n    const bridge = Token.BTC;\n\n    const quoteCoinGeckoID = CoinGeckoIDs.get(quoteCode, undefined);\n    if (quoteCoinGeckoID === undefined) {\n        return [0, 0];\n    }\n\n    const basePriceInBridge: number = (baseData.market_data.current_price[bridge.toLowerCase()] || 0);\n    const basePercentChangeInBridge: number = (baseData.market_data.price_change_percentage_24h_in_currency[bridge.toLowerCase()] || 0);\n\n    const quoteData = await fetchDetails(quoteCoinGeckoID);\n    const quotePriceInBridge: number = quoteData.market_data.current_price[bridge.toLowerCase()] || 0;\n    const quotePercentChangeInBridge: number = quoteData.market_data.price_change_percentage_24h_in_currency[bridge.toLowerCase()] || 0;\n    return [\n        quotePriceInBridge ? basePriceInBridge / quotePriceInBridge : 0,\n        quotePercentChangeInBridge ? basePercentChangeInBridge / quotePercentChangeInBridge : 0\n    ];\n};\n\nexport const getTokenPricesInCurrencies = async (): Promise<TokenPrices> => {\n    let prices: TokenPrices = Map();\n\n    for (const tokenAndDetails of CoinGeckoIDs.toSeq().toArray()) {\n        const [token, coinGeckoID] = tokenAndDetails;\n\n        // tslint:disable-next-line:max-line-length\n        const data = await fetchDetails(coinGeckoID);\n        const price = Map<Currency, number>(data.market_data.current_price);\n\n        prices = prices.set(token, price);\n    }\n\n    return prices;\n};\n","import { createBrowserHistory } from \"history\";\n\nexport const history = createBrowserHistory();\n","export const SENTRY_DSN = process.env.REACT_APP_SENTRY_DSN;\n\nexport const NETWORK = process.env.REACT_APP_NETWORK;\nexport const SOURCE_VERSION = process.env.REACT_APP_SOURCE_VERSION;\nexport const INFURA = process.env.REACT_APP_INFURA;\n\n// export const BACKEND_URL = process.env.REACT_APP_BACKEND_URL || \"\";\n\nexport const environment = ((process.env.NODE_ENV === \"development\") ? \"local\" : NETWORK) || \"unknown\";\n","import * as Sentry from \"@sentry/browser\";\nimport * as React from \"react\";\n\nimport { _captureComponentException_ } from \"../../lib/util/errors\";\n\nclass ErrorBoundary extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = { error: null, errorInfo: null };\n    }\n\n    public componentDidCatch = (error: Error, errorInfo: React.ErrorInfo) => {\n        this.setState({\n            error,\n            errorInfo,\n        });\n        _captureComponentException_(error, errorInfo);\n    }\n\n    /**\n     * The main render function.\n     * @dev Should have minimal computation, loops and anonymous functions.\n     */\n    public render(): React.ReactNode {\n        if (this.state.errorInfo) {\n            // Error path\n            return (\n                <div>\n                    <h2>Something went wrong.</h2>\n                    <details style={{ whiteSpace: \"pre-wrap\" }}>\n                        <p role=\"button\" style={{ cursor: \"pointer\" }} onClick={this.reportFeedback}>\n                            Click to report feedback\n                        </p>\n                        {this.state.error && this.state.error.toString()}\n                        <br />\n                        {this.state.errorInfo.componentStack}\n                    </details>\n                </div>\n            );\n        }\n        // Normally, just render children\n        return this.props.children;\n    }\n\n    private readonly reportFeedback = () => {\n        Sentry.showReportDialog();\n    }\n}\n\ninterface Props {\n}\n\ninterface State {\n    error: null | Error;\n    errorInfo: null | React.ErrorInfo;\n}\n\nexport const _catch_ = (\n    children: React.ReactNode,\n) => <ErrorBoundary>\n        {children}\n    </ErrorBoundary>;\n","import { Dispatch } from \"redux\";\nimport { createStandardAction } from \"typesafe-actions\";\n\nimport { getTokenPricesInCurrencies } from \"../../../lib/util/market\";\nimport { TokenPrices } from \"../../types/general\";\n\n/**\n * Updates the market price for a specific token\n */\nexport const updatePrices = createStandardAction(\"UPDATE_PRICES\")<{\n    price: number;\n    percentChange: number;\n    pair: string;\n}>();\n\nexport const pricesUpdating = createStandardAction(\"PRICES_UPDATING\")<boolean>();\n\nexport const setTokenPrices = createStandardAction(\"STORE_TOKEN_PRICES\")<{ tokenPrices: TokenPrices }>();\n\nexport const updateTokenPrices = () => async (dispatch: Dispatch) => new Promise((resolve, reject) => {\n    dispatch(pricesUpdating(true));\n    setTimeout(async () => {\n        try {\n            const tokenPrices = await getTokenPricesInCurrencies();\n            dispatch(pricesUpdating(false));\n            dispatch(setTokenPrices({ tokenPrices }));\n        } catch (error) {\n            dispatch(pricesUpdating(false));\n            reject(error);\n        }\n        resolve();\n    }, 1000);\n});\n","import * as React from \"react\";\n\nimport { connect, ConnectedReturnType } from \"react-redux\"; // Custom typings\nimport { bindActionCreators, Dispatch } from \"redux\";\n\nimport { _captureBackgroundException_, _captureInteractionException_ } from \"../../lib/util/errors\";\n// import { getMarketPrice } from \"../lib/market\";\nimport { updatePrices, updateTokenPrices } from \"../../store/actions/market/marketActions\";\nimport { ApplicationData } from \"../../store/types/general\";\nimport { _catch_ } from \"../views/ErrorBoundary\";\n\n/**\n * BackgroundTasks is responsible for running background loops like updating\n * balances and prices\n */\nclass BackgroundTasksClass extends React.Component<Props, State> {\n\n    /**\n     * The following timeouts are used to run the various background tasks.\n     * setTimeout is used instead of setInterval so the interval between calls\n     * includes the time it takes to run the task.\n     */\n    // tslint:disable: completed-docs\n    private callBootstrapTimeout: NodeJS.Timer | undefined;\n    private callUpdatePricesTimeout: NodeJS.Timer | undefined;\n    private callUpdateMarketPricesTimeout: NodeJS.Timer | undefined;\n    // tslint:enable: completed-docs\n\n    public constructor(props: Props, context: object) {\n        super(props, context);\n        this.state = {\n        };\n    }\n\n    public async componentDidMount(): Promise<void> {\n        this.setupLoops();\n    }\n\n    public componentWillUnmount() {\n        // Clear timeouts\n        if (this.callBootstrapTimeout) { clearTimeout(this.callBootstrapTimeout); }\n        if (this.callUpdatePricesTimeout) { clearTimeout(this.callUpdatePricesTimeout); }\n        if (this.callUpdateMarketPricesTimeout) { clearTimeout(this.callUpdateMarketPricesTimeout); }\n    }\n\n    /**\n     * The main render function.\n     * @dev Should have minimal computation, loops and anonymous functions.\n     */\n    public render(): React.ReactNode {\n        return <></>;\n    }\n\n    // Update token prices every 60 seconds\n    private readonly callUpdatePrices = async (): Promise<void> => {\n        let delay = 60;\n        try {\n            // tslint:disable-next-line: await-promise\n            await this.props.actions.updateTokenPrices();\n        } catch (error) {\n            _captureBackgroundException_(error, {\n                description: \"Error thrown in callUpdatePrices background task\",\n            });\n            delay = 5;\n        }\n        if (this.callUpdatePricesTimeout) { clearTimeout(this.callUpdatePricesTimeout); }\n        this.callUpdatePricesTimeout = setTimeout(this.callUpdatePrices, delay * 1000);\n    }\n\n    // Bootstrap every hour\n    private readonly callBootstrap = async (): Promise<void> => {\n        let delay = 60 * 60;\n        try {\n            // await this.props.store.darknodeGroup.bootstrap();\n        } catch (error) {\n            _captureBackgroundException_(error, {\n                description: \"Error thrown in callBootstrap background task\",\n            });\n            delay = 20;\n        }\n        if (this.callBootstrapTimeout) { clearTimeout(this.callBootstrapTimeout); }\n        this.callBootstrapTimeout = setTimeout(this.callBootstrap, delay * 1000);\n    }\n\n    // Retrieve market prices every minute\n    private readonly callUpdateMarketPrices = async () => {\n        // const { supportedMarkets } = this.props;\n        const delay = 60;\n        // if (supportedMarkets) {\n        //     try {\n        //         await Promise.all(supportedMarkets.map(async (pair, marketID) => {\n        //             const [price, percentChange] = await getMarketPrice(pair.quote, pair.base);\n        //             this.props.actions.updatePrices({ price, percentChange, pair: marketID });\n        //         }).toArray());\n        //     } catch (error) {\n        //         _captureBackgroundException_(error, {\n        //             description: \"Error in BackgroundTasks.callUpdateMarketPrices\",\n        //         });\n        //         delay = 10;\n        //     }\n        // } else {\n        //     delay = 1;\n        // }\n        if (this.callUpdateMarketPricesTimeout) { clearTimeout(this.callUpdateMarketPricesTimeout); }\n        this.callUpdateMarketPricesTimeout = setTimeout(this.callUpdateMarketPrices, delay * 1000);\n    }\n\n    /**\n     * setupLoops is called once to start the timeouts\n     */\n    private readonly setupLoops = () => {\n        this.callBootstrap().catch(error => {\n            _captureBackgroundException_(error, {\n                description: \"Error in callBootstrap in BackgroundTasks\",\n            });\n        });\n\n        this.callUpdatePrices().catch(error => {\n            _captureBackgroundException_(error, {\n                description: \"Error in callUpdatePrices in BackgroundTasks\",\n            });\n        });\n\n        this.callUpdateMarketPrices().catch(error => {\n            _captureBackgroundException_(error, {\n                description: \"Error in callUpdatePrices in BackgroundTasks\",\n            });\n        });\n\n    }\n}\n\nconst mapStateToProps = (state: ApplicationData) => ({\n    store: {\n        darknodeGroup: state.general.darknodeGroup,\n    }\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n    actions: bindActionCreators({\n        updatePrices,\n        updateTokenPrices,\n    }, dispatch)\n});\n\ninterface Props extends ReturnType<typeof mapStateToProps>, ConnectedReturnType<typeof mapDispatchToProps> {\n}\n\ninterface State {\n}\n\nexport const BackgroundTasks = connect(mapStateToProps, mapDispatchToProps)(BackgroundTasksClass);\n","import { List } from \"immutable\";\nimport { createStandardAction } from \"typesafe-actions\";\n\nimport { Currency } from \"@renex/react-components\";\nimport { UTXO } from \"../../../lib/blockchain/depositAddresses\";\nimport { MultiAddress } from \"../../../lib/types/types\";\nimport { _captureBackgroundException_, _captureInteractionException_ } from \"../../../lib/util/errors\";\n\nexport const setQuoteCurrency = createStandardAction(\"setQuoteCurrency\")<Currency>();\nexport const setEthereumAddress = createStandardAction(\"setEthereumAddress\")<string | undefined>();\nexport const addToRedeemedUTXOs = createStandardAction(\"addToRedeemedUTXOs\")<string>();\nexport const addToRenVMMessages = createStandardAction(\"addToRenVMMessages\")<{ utxo: string, messages: List<{ messageID: string, multiAddress: MultiAddress }> }>();\nexport const addToSignatures = createStandardAction(\"addToSignatures\")<{ utxo: string, signature: string }>();\nexport const addToUtxoToMessage = createStandardAction(\"addToUtxoToMessage\")<{ utxo: string, message: string }>();\nexport const addToMessageToUtxos = createStandardAction(\"addToMessageToUtxos\")<{ message: string, utxos: List<UTXO> }>();\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  className: \"ren-logo\",\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M4.22832 6.51869L6.50289 5.20916L6.80925 5.73645L15.1936 0.889439L14.5809 0.535981L13.9653 0.176729L13.659 0L0 7.90935V8.2628L3.92197 5.9885L4.22832 6.51869Z\",\n  fill: \"#212122\"\n});\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  className: \"ren-logo\",\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M4.22832 11.4991L10.8006 7.69217L11.1069 8.22815L19.4913 3.37824L18.8786 3.01899L18.263 2.66553L17.9566 2.4917L0 12.8839V13.2374L3.92197 10.9631L4.22832 11.4991Z\",\n  fill: \"#212122\"\n});\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  className: \"ren-logo\",\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M4.22832 13.9875L12.948 8.9406L13.2572 9.47079L21.6387 4.61509L21.026 4.26743L20.4133 3.90817L20.104 3.73145L0 15.3666V15.7258L3.92197 13.4544L4.22832 13.9875Z\",\n  fill: \"#212122\"\n});\n\nvar _ref5 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  className: \"ren-logo\",\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M4.22832 16.4736L15.159 10.149L15.4682 10.6792L23.789 5.86405L23.1763 5.5048L22.5607 5.15134L22.2543 4.97461L0 17.8584V18.2119L3.92197 15.9376L4.22832 16.4736Z\",\n  fill: \"#212122\"\n});\n\nvar _ref6 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  className: \"ren-logo\",\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M4.22832 18.9563L17.3092 11.3888L17.6156 11.9248L25.9364 7.10383L25.3237 6.75327L24.711 6.39401L24.4017 6.21729L0 20.3411V20.6946L3.92197 18.4261L4.22832 18.9563Z\",\n  fill: \"#212122\"\n});\n\nvar _ref7 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  className: \"ren-logo\",\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M26.8584 7.64008L26.552 7.46045L0 22.833V23.1864L3.92197 20.9179L4.22832 21.4481L17.3092 13.8806L17.6156 14.4108L27.3179 8.79895V8.08624V7.90951L26.8584 7.64008Z\",\n  fill: \"#212122\"\n});\n\nvar _ref8 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  className: \"ren-logo\",\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M1.68241 24.6955L3.88184 23.4237L4.18819 23.9539L17.246 16.398L17.5524 16.9339L27.3183 11.2815V10.5688V9.8561V9.50293L1.38184 24.5191L1.68241 24.6955Z\",\n  fill: \"#212122\"\n});\n\nvar _ref9 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  className: \"ren-logo\",\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M17.2461 18.8895L17.5524 19.4257L27.3183 13.773V13.0603V12.3476V11.9941L3.5293 25.7619L3.83855 25.9383L6.06976 24.6433L6.37901 25.1793\",\n  fill: \"#212122\"\n});\n\nvar _ref10 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  className: \"ren-logo\",\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M5.98597 27.1845L8.22007 25.8865L8.52643 26.4222L17.2461 21.3724L17.5524 21.9087L27.3183 16.256V15.5433V14.8363V14.48L5.67383 27.0017L5.98597 27.1845Z\",\n  fill: \"#212122\"\n});\n\nvar _ref11 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  className: \"ren-logo\",\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M8.13351 28.4275L10.3676 27.135L10.6769 27.6652L17.2462 23.8644L17.5526 24.3943L27.3185 18.7418V18.0352V17.3225V16.9688L7.82715 28.2507L8.13351 28.4275Z\",\n  fill: \"#212122\"\n});\n\nvar _ref12 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  className: \"ren-logo\",\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M9.97656 29.4933L10.2829 29.6698L12.5228 28.375L12.8234 28.911L17.2453 26.347L17.5517 26.883L27.3176 21.2302V20.5178V19.8051V19.4517L9.97656 29.4933Z\",\n  fill: \"#212122\"\n});\n\nvar _ref13 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  className: \"ren-logo\",\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M12.4304 30.9189L14.6645 29.618L14.9708 30.154L17.2454 28.8329L17.5518 29.3689L27.3177 23.7222V23.0095V22.2968V21.9434L12.124 30.7421L12.4304 30.9189Z\",\n  fill: \"#212122\"\n});\n\nvar _ref14 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  className: \"ren-logo\",\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M17.3439 2.1326L16.7283 1.77915L16.1156 1.42569L15.8092 1.24316L0 10.3925V10.746L3.92197 8.48036L4.22832 9.00765L8.65029 6.44943L8.96532 6.98541L17.3439 2.1326Z\",\n  fill: \"#212122\"\n});\n\nvar SvgLogo = function SvgLogo(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: 31,\n    height: 31,\n    viewBox: \"0 0 31 31\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11, _ref12, _ref13, _ref14);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgLogo, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/logo.3e204930.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"title\", null, \"union-jack\");\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"desc\", null, \"Created with Sketch.\");\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"defs\", null);\n\nvar _ref5 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  id: \"Page-1\",\n  stroke: \"none\",\n  strokeWidth: 1,\n  fill: \"none\",\n  fillRule: \"evenodd\"\n}, React.createElement(\"g\", {\n  id: \"union-jack\"\n}, React.createElement(\"polygon\", {\n  id: \"Fill-1\",\n  fill: \"#FFFFFF\",\n  points: \"0 11 20.7878788 11 20.7878788 0 0 0\"\n}), React.createElement(\"polygon\", {\n  id: \"Fill-2\",\n  fill: \"#00247D\",\n  points: \"2.32431818 11 8.66165152 11 8.66165152 7.64657143\"\n}), React.createElement(\"polygon\", {\n  id: \"Fill-3\",\n  fill: \"#00247D\",\n  points: \"12.1261636 11 18.4641333 11 12.1261636 7.64657143\"\n}), React.createElement(\"polygon\", {\n  id: \"Fill-4\",\n  fill: \"#00247D\",\n  points: \"0 7.33316122 0 9.76999796 4.60515152 7.33316122\"\n}), React.createElement(\"polygon\", {\n  id: \"Fill-5\",\n  fill: \"#CF142B\",\n  points: \"6.92942727 7.33316122 6.36363636e-05 10.9999776 1.54960909 10.9999776 8.47854848 7.33316122\"\n}), React.createElement(\"polygon\", {\n  id: \"Fill-6\",\n  fill: \"#CF142B\",\n  points: \"13.8588545 7.33316122 20.7880061 10.9999776 20.7880061 10.1801408 15.4081879 7.33316122\"\n}), React.createElement(\"polygon\", {\n  id: \"Fill-7\",\n  fill: \"#00247D\",\n  points: \"16.1829818 7.33316122 20.7879212 9.76999796 20.7879212 7.33316122\"\n}), React.createElement(\"polygon\", {\n  id: \"Fill-8\",\n  fill: \"#00247D\",\n  points: \"0 3.66652449 4.60515152 3.66652449 0 1.22991224\"\n}), React.createElement(\"polygon\", {\n  id: \"Fill-9\",\n  fill: \"#00247D\",\n  points: \"16.1829818 3.66652449 20.7879212 3.66652449 20.7879212 1.22991224\"\n}), React.createElement(\"polygon\", {\n  id: \"Fill-10\",\n  fill: \"#CF142B\",\n  points: \"0 8.97959184e-05 0 0.819926531 5.37960606 3.66645714 6.92936364 3.66645714 0.000424242424 8.97959184e-05\"\n}), React.createElement(\"polygon\", {\n  id: \"Fill-11\",\n  fill: \"#00247D\",\n  points: \"2.3247 8.97959184e-05 8.66160909 3.35329388 8.66160909 8.97959184e-05\"\n}), React.createElement(\"polygon\", {\n  id: \"Fill-12\",\n  fill: \"#CF142B\",\n  points: \"9.35454545 8.97959184e-05 9.35454545 4.39986531 0 4.39986531 0 6.59986531 9.35454545 6.59986531 9.35454545 11.0000898 11.4331212 11.0000898 11.4331212 6.59964082 20.7878788 6.59964082 20.7878788 4.39964082 11.4331212 4.39964082 11.4331212 8.97959184e-05\"\n}), React.createElement(\"polygon\", {\n  id: \"Fill-13\",\n  fill: \"#00247D\",\n  points: \"12.1261636 8.97959184e-05 12.1261636 3.35329388 18.4637091 8.97959184e-05\"\n}), React.createElement(\"polygon\", {\n  id: \"Fill-14\",\n  fill: \"#CF142B\",\n  points: \"19.2379091 8.97959184e-05 12.3089697 3.66645714 13.8589394 3.66645714 20.7874545 8.97959184e-05\"\n})));\n\nvar SvgRpFlagUk = function SvgRpFlagUk(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: \"21px\",\n    height: \"11px\",\n    viewBox: \"0 0 21 11\",\n    ref: svgRef\n  }, props), _ref2, _ref3, _ref4, _ref5);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgRpFlagUk, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/rp-flag-uk.e021baf7.svg\";\nexport { ForwardRef as ReactComponent };","import { List, Map as ImmutableMap } from \"immutable\";\n\nimport BigNumber from \"bignumber.js\";\nimport Web3 from \"web3\";\n\nimport { Contract } from \"web3-eth-contract\";\n\nimport { getWeb3 } from \"../../components/controllers/SwapController\";\nimport { INFURA } from \"../util/environmentVariables\";\nimport { BitcoinUTXO, btcAddressToHex, createBTCTestnetAddress, getBTCTestnetUTXOs } from \"./btc/btc\";\nimport { createZECTestnetAddress, getZECTestnetUTXOs, ZcashUTXO, zecAddressToHex } from \"./btc/zec\";\nimport { bridgedToken, zBTCAddress, zZECAddress } from \"./eth/eth\";\n\nexport enum Currency {\n    BTC = \"btc\",\n    ZEC = \"zec\",\n    ETH = \"eth\"\n}\nexport const CurrencyList = [Currency.BTC, Currency.ZEC, Currency.ETH];\n\nexport const CurrencyDecimals = (currency: Currency): number => {\n    switch (currency) {\n        case Currency.BTC:\n            return 8;\n        case Currency.ZEC:\n            return 8;\n        case Currency.ETH:\n            return 18;\n    }\n};\n\nexport const CurrencyColor = (currency: Currency): string => {\n    switch (currency) {\n        case Currency.BTC:\n            return \"#F09242\";\n        case Currency.ZEC:\n            return \"rgb(244, 183, 40)\";\n        case Currency.ETH:\n            return \"#627eea\";\n    }\n};\n\nexport type UTXO = { currency: Currency.BTC, utxo: BitcoinUTXO } | { currency: Currency.ZEC, utxo: ZcashUTXO };\n\nexport class DepositAddresses {\n    public receiveAddress: string;\n\n    public depositAddresses: Map<Currency, string>;\n\n    private readonly web3: Web3 | undefined;\n    private readonly zBTC: Contract | undefined;\n    private readonly zZEC: Contract | undefined;\n\n    constructor(receiveAddress: string) {\n        this.receiveAddress = receiveAddress;\n\n        this.depositAddresses = (new Map<Currency, string>())\n            .set(Currency.ZEC, createZECTestnetAddress(receiveAddress))\n            .set(Currency.BTC, createBTCTestnetAddress(receiveAddress))\n            .set(Currency.ETH, receiveAddress)\n            ;\n\n        if (INFURA) {\n            this.web3 = new Web3(INFURA);\n            this.zBTC = bridgedToken(this.web3, zBTCAddress);\n            this.zZEC = bridgedToken(this.web3, zZECAddress);\n        }\n    }\n\n    public getUTXOs = async (limit = 10, confirmations = 0): Promise<List<UTXO>> => {\n        let utxos = List<UTXO>();\n\n        const btcDepositAddress = this.depositAddresses.get(Currency.BTC);\n        if (btcDepositAddress) {\n            try {\n                const newBitcoinUTXOs: Array<{ currency: Currency.BTC, utxo: BitcoinUTXO }> = (await getBTCTestnetUTXOs(btcDepositAddress, limit, confirmations)).map(utxo => ({ currency: Currency.BTC, utxo }));\n                utxos = utxos.concat(List(newBitcoinUTXOs));\n            } catch (error) {\n                console.error(error);\n            }\n        }\n\n        const zecDepositAddress = this.depositAddresses.get(Currency.ZEC);\n        if (zecDepositAddress) {\n            try {\n                const newZcashUTXOs: Array<{ currency: Currency.ZEC, utxo: BitcoinUTXO }> = (await getZECTestnetUTXOs(zecDepositAddress, limit, confirmations)).map(utxo => ({ currency: Currency.ZEC, utxo }));\n                utxos = utxos.concat(List(newZcashUTXOs));\n            } catch (error) {\n                console.error(error);\n            }\n        }\n\n        return utxos;\n    }\n\n    public getBalances = async () => {\n        let balances = ImmutableMap<string, string>();\n\n        for (const { curr, contract } of [\n            { curr: Currency.BTC, contract: this.zBTC },\n            { curr: Currency.ZEC, contract: this.zZEC },\n        ]) {\n            if (this.web3 && contract) {\n                try {\n                    balances = balances.set(curr, this.web3.utils.fromWei(await contract.methods.balanceOf(this.receiveAddress).call()));\n                } catch (error) {\n                    console.error(error);\n                }\n            }\n        }\n\n        return balances;\n    }\n\n    public getBalance = async (currency: Currency): Promise<string> => {\n        switch (currency) {\n            case Currency.BTC:\n                return (this.web3 && this.zBTC) ?\n                    new BigNumber(await this.zBTC.methods.balanceOf(this.receiveAddress).call()).div(10 ** CurrencyDecimals(Currency.BTC)).toFixed() :\n                    \"0\";\n            case Currency.ZEC:\n                return (this.web3 && this.zZEC) ?\n                    new BigNumber(await this.zZEC.methods.balanceOf(this.receiveAddress).call()).div(10 ** CurrencyDecimals(Currency.BTC)).toFixed() :\n                    \"0\";\n            case Currency.ETH:\n                // return (this.web3) ?\n                // this.web3.utils.fromWei((await this.web3.eth.getBalance(this.receiveAddress)).toString()) :\n                return \"0\";\n        }\n    }\n\n    public burn = async (currency: Currency, to: string, amount: string) => {\n        let web3;\n        try {\n            web3 = await getWeb3();\n        } catch (error) {\n            throw new Error(\"Unable to connect to Web3 browser.\");\n        }\n        const network = await web3.eth.net.getNetworkType();\n        if (network !== \"kovan\") {\n            throw new Error(\"Please change your Web3 browser network to Kovan\");\n        }\n        const addresses = (await web3.eth.getAccounts()).map(a => a.toUpperCase());\n        if (addresses.indexOf(this.receiveAddress.toUpperCase()) === -1) {\n            throw new Error(\"Please switch to the selected address in your Web3 browser\");\n        }\n\n        const contract = currency === Currency.BTC ? bridgedToken(web3, zBTCAddress) :\n            currency === Currency.ZEC ? bridgedToken(web3, zZECAddress) :\n                undefined;\n\n        if (contract === undefined) {\n            throw new Error(\"Something went wrong, please reload and try again\");\n        }\n\n        const toHex = currency === Currency.BTC ? btcAddressToHex(to) :\n            currency === Currency.ZEC ? zecAddressToHex(to) :\n                to;\n\n        await contract.methods.burn(toHex, new BigNumber(amount).multipliedBy(10 ** CurrencyDecimals(currency)).toFixed()).send({ from: this.receiveAddress });\n    }\n}\n","import * as React from \"react\";\n\nimport { connect, ConnectedReturnType } from \"react-redux\"; // Custom typings\nimport { Link } from \"react-router-dom\";\nimport { bindActionCreators, Dispatch } from \"redux\";\n\nimport { _captureBackgroundException_ } from \"../../lib/util/errors\";\nimport { setQuoteCurrency } from \"../../store/actions/general/generalActions\";\nimport { ApplicationData } from \"../../store/types/general\";\nimport { _catch_ } from \"../views/ErrorBoundary\";\n\nimport { currencies, Currency, CurrencyIcon, Dropdown, Header } from \"@renex/react-components\";\n\nimport { ReactComponent as Logo } from \"../../styles/images/logo.svg\";\nimport { ReactComponent as English } from \"../../styles/images/rp-flag-uk.svg\";\n\nconst getCurrencyOptions = () => {\n    const options = new Map<string, React.ReactNode>();\n\n    for (const currency of currencies) {\n        options.set(currency.currency, <>\n            <CurrencyIcon currency={currency.currency} />\n            {\" \"}{currency.description}\n        </>);\n    }\n\n    return options;\n};\n\nconst currencyOptions = getCurrencyOptions();\n\nconst languageOptions = new Map()\n    .set(\"EN\",\n        <><English /> English</>\n    );\n\nconst logo = <Link className=\"no-underline\" to=\"/\">\n    <Logo />\n    <span>beta</span>\n</Link>;\n\n/**\n * Header is a visual component providing page branding and navigation.\n */\nclass HeaderControllerClass extends React.Component<Props, State> {\n    public render = (): JSX.Element => {\n        const { store: { quoteCurrency } } = this.props;\n\n        const languageDropdown = <Dropdown\n            key=\"languageDropdown\"\n            selected={{\n                value: \"EN\",\n                render: \"English\",\n            }}\n            options={languageOptions}\n            setValue={this.setLanguage}\n        />;\n\n        const currencyDropdown = <Dropdown\n            key=\"currencyDropdown\"\n            selected={{\n                value: quoteCurrency,\n                render: <>\n                    <CurrencyIcon currency={quoteCurrency} />\n                    {\" \"}{quoteCurrency.toUpperCase()}\n                </>\n            }}\n            options={currencyOptions}\n            setValue={this.setCurrency}\n        />;\n\n        return (\n            <Header\n                logo={logo}\n                menu={[\n                    languageDropdown, currencyDropdown\n                ]}\n            />\n        );\n    }\n\n    private readonly setCurrency = (quoteCurrency: Currency): void => {\n        this.props.actions.setQuoteCurrency(quoteCurrency);\n    }\n\n    private readonly setLanguage = (language: string): void => {\n        // NOT IMPLEMENTED\n    }\n}\n\nconst mapStateToProps = (state: ApplicationData) => ({\n    store: {\n        quoteCurrency: state.general.quoteCurrency,\n    }\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n    actions: bindActionCreators({\n        setQuoteCurrency,\n    }, dispatch)\n});\n\ninterface Props extends ReturnType<typeof mapStateToProps>, ConnectedReturnType<typeof mapDispatchToProps> {\n}\n\ninterface State {\n}\n\nexport const HeaderController = connect(mapStateToProps, mapDispatchToProps)(HeaderControllerClass);\n","import Axios from \"axios\";\n\nexport const getUTXOs = <T>(endpoint: string) => async (address: string, limit: number, confirmations: number): Promise<T[]> => {\n    const resp = await Axios.get<T[]>(`${endpoint}/utxo/${address}?limit=${limit}&confirmations=${confirmations}`);\n    return resp.data;\n};\n","import { Address, Networks, Opcode, Script } from \"bitcore-lib\";\n\nimport { testnetMasterPKH } from \"../../darknode/publicKey\";\nimport { getUTXOs } from \"../mercury\";\nimport { createAddress } from \"./common\";\n\nexport const createBTCAddress = createAddress(Networks, Opcode, Script);\n\nconst testnetMercury = \"https://ren-mercury.herokuapp.com/btc-testnet3\";\n\nexport interface BitcoinUTXO {\n    txHash: string; // hex string without 0x prefix\n    amount: number; // satoshis\n    scriptPubKey: string; // hex string without 0x prefix\n    vout: number;\n}\n\nexport const getBTCTestnetUTXOs = getUTXOs<BitcoinUTXO>(testnetMercury);\n\nexport const createBTCTestnetAddress = createBTCAddress({ mainnet: false, masterPKH: testnetMasterPKH });\n\nexport const btcAddressToHex = (address: string) => `0x${(new Address(address)).toBuffer().toString(\"hex\")}`;\n","import { Address, Networks, Opcode, Script } from \"bitcore-lib-zcash\";\n\nimport { testnetMasterPKH } from \"../../darknode/publicKey\";\nimport { getUTXOs } from \"../mercury\";\nimport { createAddress } from \"./common\";\n\nexport const createZECAddress = createAddress(Networks, Opcode, Script);\n\nconst testnetMercury = \"https://ren-mercury.herokuapp.com/zec-testnet\";\n\nexport interface ZcashUTXO {\n    txHash: string; // hex string without 0x prefix\n    amount: number; // satoshis\n    scriptPubKey: string; // hex string without 0x prefix\n    vout: number;\n}\n\nexport const getZECTestnetUTXOs = getUTXOs<ZcashUTXO>(testnetMercury);\n\nexport const createZECTestnetAddress = createZECAddress({ mainnet: false, masterPKH: testnetMasterPKH });\n\nexport const zecAddressToHex = (address: string) => `0x${(new Address(address)).toBuffer().toString(\"hex\")}`;\n","export type DarknodeID = { id: string };\nexport const NewDarknodeID = (id: string) => ({ id });\n\nexport type MultiAddress = { multiAddress: string };\nexport const NewMultiAddress = (multiAddress: string) => ({ multiAddress });\n\nexport const multiAddressToID = (multiAddress: MultiAddress): DarknodeID => {\n    const split = multiAddress.multiAddress.split(\"/\");\n    return { id: split[split.length - 1] };\n};\n","import Web3 from \"web3\";\n\nimport { Record } from \"@renex/react-components\";\nimport { List } from \"immutable\";\nimport { Contract } from \"web3-eth-contract/types\";\nimport { AbiItem } from \"web3-utils\";\n\nimport { DarknodeID, NewDarknodeID } from \"../../types/types\";\n\nimport BridgedTokenABI from \"./BridgedTokenABI.json\";\nimport DarknodeRegistryABI from \"./DarknodeRegistryABI.json\";\n\nconst NULL = \"0x0000000000000000000000000000000000000000\";\n\nexport const zBTCAddress = \"0x2a8368d2a983a0aeae8da0ebc5b7c03a0ea66b37\";\nexport const zZECAddress = \"0xd67256552f93b39ac30083b4b679718a061feae6\";\n\nexport class Pod extends Record({\n    id: \"\",\n    darknodes: List<string>(),\n}) { }\n\nexport const darknodeRegistry = (web3: Web3, address: string): Contract => {\n    return new web3.eth.Contract(DarknodeRegistryABI as AbiItem[], address);\n};\n\nexport const bridgedToken = (web3: Web3, address: string): Contract => {\n    return new web3.eth.Contract(BridgedTokenABI as AbiItem[], address);\n};\n\n/*\n * Retrieve all the darknodes registered in the current epoch.\n * The getDarknodes() function will always return an array of {count} with empty\n * values being the NULL address. These addresses must be filtered out.\n * When the {start} value is not the NULL address, it is always returned as the\n * first entry so it should not be re-added to the list of all darknodes.\n *\n * THROWS if there are no darknodes in the registry contract.\n */\nexport const getAllDarknodeIDs = async (darknodeRegistryContract: Contract): Promise<DarknodeID[]> => {\n    const batchSize = 50;\n\n    const allDarknodes = [];\n    let lastDarknode = NULL;\n    do {\n        const darknodes: string[] = await darknodeRegistryContract.methods.getDarknodes(lastDarknode, `0x${(batchSize).toString(16)}`).call();\n        allDarknodes.push(...darknodes.filter(addr => addr !== NULL && addr !== lastDarknode));\n        if (darknodes.length === 0) {\n            throw new Error(\"No darknodes in the darknode registry.\");\n        }\n        [lastDarknode] = darknodes.slice(-1);\n    } while (lastDarknode !== NULL);\n\n    return allDarknodes.map(NewDarknodeID);\n};\n\n// export const mintToken = (bridgedToken: Contract, to: string, amount: number, hash: string, signature: string) => {\n//     let signaturePrefix = 0;\n//     const await bridgedToken.methods.verifySig(to, amount, hash, signature);\n\n// }\n\n// /*\n//  * Calculate pod arrangement based on current epoch\n//  */\n// export const getAllPods = async (darknodeRegistryContract: Contract): Promise<List<Pod>> => {\n//     const darknodes = await getAllDarknodes(darknodeRegistryContract);\n//     const podSizeReturnValue = await darknodeRegistryContract.methods.minimumPodSize().call();\n//     const minimumPodSize = new BN(podSizeReturnValue.toString()).toNumber();\n//     console.log(`Using minimum pod size ${minimumPodSize}`);\n//     const epoch: [string, string] = await darknodeRegistryContract.methods.currentEpoch().call();\n\n//     if (!darknodes.length) {\n//         return Promise.reject(new Error(\"no darknodes in contract\"));\n//     }\n\n//     if (minimumPodSize === 0) {\n//         return Promise.reject(new Error(\"invalid minimum pod size (0)\"));\n//     }\n\n//     console.log(`epoch[0]: ${epoch[0]} (${epoch[0].toString()})`);\n//     const epochVal = new BN(epoch[0].toString());\n//     const numberOfDarknodes = new BN(darknodes.length);\n//     let x = epochVal.mod(numberOfDarknodes);\n//     let positionInOcean = List();\n//     for (let i = 0; i < darknodes.length; i++) {\n//         positionInOcean = positionInOcean.set(i, -1);\n//     }\n\n//     console.log(`Calculating pods`);\n\n//     let pods = List<Pod>();\n//     // FIXME: (setting to 1 if 0)\n//     const numberOfPods = Math.floor(darknodes.length / minimumPodSize) || 1;\n//     for (let i = 0; i < numberOfPods; i++) {\n//         pods = pods.push(new Pod());\n//     }\n\n//     for (let i = 0; i < numberOfPods * minimumPodSize; i++) {\n//         while (positionInOcean.get(x.toNumber()) !== -1) {\n//             x = x.add(new BN(1));\n//             x = x.mod(numberOfDarknodes);\n//         }\n\n//         positionInOcean = positionInOcean.set(x.toNumber(), i);\n//         const podIndex = i % numberOfPods;\n\n//         const pod = new Pod({\n//             darknodes: pods.get(podIndex, new Pod()).darknodes.push(darknodes[x.toNumber()])\n//         });\n//         pods = pods.set(podIndex, pod);\n\n//         x = x.add(epochVal);\n//         x = x.mod(numberOfDarknodes);\n//     }\n\n//     for (let i = 0; i < pods.size; i++) {\n//         let hashData = List<Buffer>();\n//         for (const darknode of pods.get(i, new Pod()).darknodes.toArray()) {\n//             hashData = hashData.push(Buffer.from(darknode.substring(2), \"hex\"));\n//         }\n\n//         const id = new EncodedData(keccak256(`0x${Buffer.concat(hashData.toArray()).toString(\"hex\")}`), Encodings.HEX);\n//         const pod = new Pod({\n//             id: id.toBase64(),\n//             darknodes: pods.get(i, new Pod()).darknodes\n//         });\n\n//         // console.log(pod.id, JSON.stringify(pod.darknodes.map((node: string) =>\n//         //     new EncodedData(\"0x1B20\" + node.slice(2), Encodings.HEX).toBase58()\n//         // ).toArray()));\n\n//         pods = pods.set(i, pod);\n//     }\n\n//     return pods;\n// };\n\n// // export const getPods = async (\n// //     darknodeRegistryContract: Contract,\n// //     marketID: string,\n// // ): Promise<List<Pod>> => {\n// //     // tslint:disable-next-line: no-unnecessary-local-variable\n// //     const allPods = await getAllPods(darknodeRegistryContract);\n// //     // return allPods.filter((pod: Pod) => podsForPair.includes(pod.id));\n// //     return allPods;\n// // };\n","import * as React from \"react\";\n\nimport { TokenIcon } from \"@renex/react-components\";\nimport { Currency, DepositAddresses } from \"../../lib/blockchain/depositAddresses\";\n\ninterface Props {\n    currency: Currency;\n    index: number;\n    depositAddresses: DepositAddresses;\n}\n\nexport const ShowCurrency = ({ currency, index, depositAddresses }: Props): JSX.Element => {\n    const [expanded, setExpanded] = React.useState(false);\n    const [error, setError] = React.useState<string | undefined>(undefined);\n    // tslint:disable-next-line: prefer-const\n    let [balance, setBalance] = React.useState<string | undefined>(undefined);\n    const ref = React.useRef(null as HTMLDivElement | null);\n\n    const clickAway: EventListener = (event) => {\n        if ((ref.current && !ref.current.contains(event.target as Node))) {\n            setExpanded(false);\n            setError(undefined);\n            document.removeEventListener(\"mousedown\", clickAway, false);\n        }\n    };\n\n    const showDeposit = async (e: React.MouseEvent<HTMLDivElement>) => {\n        if (!expanded) {\n            setExpanded(true);\n            document.addEventListener(\"mousedown\", clickAway);\n            const parent = e.currentTarget.parentElement;\n            if (parent) {\n                parent.scrollTo({ left: (150 + 20) * index - 10 });\n            }\n            setTimeout(() => {\n                if (parent) {\n                    parent.scrollTo({ left: (150 + 20) * index - 10 });\n                }\n            }, 300);\n            balance = await depositAddresses.getBalance(currency);\n            setBalance(balance);\n        }\n    };\n\n    const burn = async (e: React.MouseEvent<HTMLAnchorElement>) => {\n        e.preventDefault();\n        if (balance && balance !== \"0\") {\n            try {\n                const to = prompt(`Enter recipient ${currency.toUpperCase()} address`);\n                if (!to) {\n                    throw new Error(`Address must not be empty`);\n                }\n                await depositAddresses.burn(currency, to, balance);\n            } catch (error) {\n                setError(`${error && error.toString ? error.toString() : error}`);\n            }\n        }\n    };\n\n    return <div ref={ref} className={`currency ${currency} ${expanded ? \"active\" : \"\"}`} data-id={currency} data-index={index} onMouseDown={showDeposit} role=\"button\" key={currency}>\n        <TokenIcon token={currency.toUpperCase()} />\n        {expanded ?\n            <div className={`deposit-address ${currency}`}>\n                <div>\n                    <span>Balance: {balance} {currency.toUpperCase()}{balance && balance !== \"0\" ? <>{\" \"}(<a role=\"button\" href=\"null\" onClick={burn}>Burn</a>)</> : null}</span><br />\n                    {error ? <><span className=\"red\">{error}</span><br /></> : null}\n                    <span>Deposit to <b>{depositAddresses.depositAddresses.get(currency)}</b></span>\n                </div>\n            </div>\n            : null}\n    </div>;\n};\n","import * as React from \"react\";\n\nimport { CurrencyList, DepositAddresses } from \"../../lib/blockchain/depositAddresses\";\nimport { ShowCurrency } from \"./ShowCurrency\";\n\nexport const CurrenciesBlock = ({ depositAddresses }: { depositAddresses: DepositAddresses }) => {\n    return <div className=\"block\">\n        <h3>Currencies</h3>\n        <div className=\"currencies\">\n            {CurrencyList.map((currency, index) => {\n                return <ShowCurrency key={currency} currency={currency} index={index} depositAddresses={depositAddresses} />;\n            })}\n        </div>\n    </div >;\n};\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"style\", {\n  type: \"text/css\"\n}, \"\\n\\t.st0{fill:#161616;stroke:#161616;}\\n\\t.st1{fill:#E4761B;stroke:#E4761B;stroke-linecap:round;stroke-linejoin:round;}\\n\\t.st2{fill:#763D16;stroke:#763D16;stroke-linecap:round;stroke-linejoin:round;}\\n\\t.st3{fill:#F6851B;stroke:#F6851B;stroke-linecap:round;stroke-linejoin:round;}\\n\\t.st4{fill:#E2761B;stroke:#E2761B;stroke-linecap:round;stroke-linejoin:round;}\\n\\t.st5{fill:#CD6116;stroke:#CD6116;stroke-linecap:round;stroke-linejoin:round;}\\n\\t.st6{fill:#C0AD9E;stroke:#C0AD9E;stroke-linecap:round;stroke-linejoin:round;}\\n\\t.st7{fill:#D7C1B3;stroke:#D7C1B3;stroke-linecap:round;stroke-linejoin:round;}\\n\\t.st8{fill:#E4751F;stroke:#E4751F;stroke-linecap:round;stroke-linejoin:round;}\\n\\t.st9{fill:#233447;stroke:#233447;stroke-linecap:round;stroke-linejoin:round;}\\n\\t.st10{fill:#161616;stroke:#161616;stroke-linecap:round;stroke-linejoin:round;}\\n\");\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"polygon\", {\n  className: \"st0\",\n  points: \"277.3,145.6 272.3,142 280.3,134.7 274.2,129.9 282.2,123.8 276.9,119.8 285.3,79 272.7,41.1  191.6,71.4 124.1,71.4 43,41.1 30.4,79 38.9,119.8 33.5,123.8 41.5,129.9 35.4,134.7 43.4,142 38.4,145.6 49.9,159.1 32.5,213.3  48.6,268.6 105.3,253 116.3,262 138.7,277.5 177,277.5 199.4,262 210.4,253 267.1,268.6 283.3,213.3 265.8,159.1 \"\n});\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"g\", null, React.createElement(\"polygon\", {\n  className: \"st1\",\n  points: \"105.3,253 48.6,268.6 32.5,213.3  \"\n}), React.createElement(\"polygon\", {\n  className: \"st1\",\n  points: \"283.3,213.3 267.1,268.6 210.4,253  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"265.8,159.1 213.5,143.8 231.8,139  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"49.9,159.1 84,139 102.2,143.8  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"43.4,142 41.5,129.9 84,139  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"272.3,142 231.8,139 274.2,129.9  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"272.3,142 265.8,159.1 231.8,139  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"43.4,142 84,139 49.9,159.1  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"231.8,139 276.9,119.8 274.2,129.9  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"84,139 41.5,129.9 38.9,119.8  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"124.1,71.4 191.6,71.4 176.5,112.5  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"176.5,112.5 139.2,112.5 124.1,71.4  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"276.9,119.8 231.8,139 231,87.4  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"102.2,143.8 84,139 84.7,87.4  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"84.7,87.4 84,139 38.9,119.8  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"231,87.4 231.8,139 213.5,143.8  \"\n}), React.createElement(\"polygon\", {\n  className: \"st1\",\n  points: \"139.2,112.5 43,41.1 124.1,71.4  \"\n}), React.createElement(\"polygon\", {\n  className: \"st4\",\n  points: \"272.7,41.1 176.5,112.5 191.6,71.4  \"\n}), React.createElement(\"polygon\", {\n  className: \"st1\",\n  points: \"210.4,253 236.9,213.3 283.3,213.3  \"\n}), React.createElement(\"polygon\", {\n  className: \"st1\",\n  points: \"32.5,213.3 78.9,213.3 105.3,253  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"229.3,167.7 283.3,213.3 236.9,213.3  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"86.4,167.7 32.5,213.3 49.9,159.1  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"78.9,213.3 32.5,213.3 86.4,167.7  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"229.3,167.7 265.8,159.1 283.3,213.3  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"84.7,87.4 139.2,112.5 102.2,143.8  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"213.5,143.8 176.5,112.5 231,87.4  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"265.8,159.1 272.3,142 277.3,145.6  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"49.9,159.1 38.4,145.6 43.4,142  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"272.3,142 274.2,129.9 280.3,134.7  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"43.4,142 35.4,134.7 41.5,129.9  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"33.5,123.8 38.9,119.8 41.5,129.9  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"282.2,123.8 274.2,129.9 276.9,119.8  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"49.9,159.1 102.2,143.8 86.4,167.7  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"265.8,159.1 229.3,167.7 213.5,143.8  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"38.9,119.8 30.4,79 84.7,87.4  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"231,87.4 285.3,79 276.9,119.8  \"\n}), React.createElement(\"polygon\", {\n  className: \"st1\",\n  points: \"102.2,143.8 139.2,112.5 142.6,170.2  \"\n}), React.createElement(\"polygon\", {\n  className: \"st1\",\n  points: \"213.5,143.8 229.3,167.7 173.1,170.2  \"\n}), React.createElement(\"polygon\", {\n  className: \"st1\",\n  points: \"173.1,170.2 176.5,112.5 213.5,143.8  \"\n}), React.createElement(\"polygon\", {\n  className: \"st1\",\n  points: \"142.6,170.2 86.4,167.7 102.2,143.8  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"272.7,41.1 285.3,79 231,87.4  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"43,41.1 139.2,112.5 84.7,87.4  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"231,87.4 176.5,112.5 272.7,41.1  \"\n}), React.createElement(\"polygon\", {\n  className: \"st2\",\n  points: \"84.7,87.4 30.4,79 43,41.1  \"\n}), React.createElement(\"polygon\", {\n  className: \"st5\",\n  points: \"105.3,253 78.9,213.3 110,213.7  \"\n}), React.createElement(\"polygon\", {\n  className: \"st5\",\n  points: \"210.4,253 205.7,213.7 236.9,213.3  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"173.1,170.2 142.6,170.2 139.2,112.5  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"139.2,112.5 176.5,112.5 173.1,170.2  \"\n}), React.createElement(\"polygon\", {\n  className: \"st6\",\n  points: \"116.3,262 105.3,253 136.8,267.9  \"\n}), React.createElement(\"polygon\", {\n  className: \"st6\",\n  points: \"178.9,267.9 210.4,253 199.4,262  \"\n}), React.createElement(\"polygon\", {\n  className: \"st7\",\n  points: \"136.6,258.6 136.8,267.9 105.3,253  \"\n}), React.createElement(\"polygon\", {\n  className: \"st7\",\n  points: \"179.2,258.6 210.4,253 178.9,267.9  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"86.4,167.7 110,213.7 78.9,213.3  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"236.9,213.3 205.7,213.7 229.3,167.7  \"\n}), React.createElement(\"polygon\", {\n  className: \"st8\",\n  points: \"86.4,167.7 109.2,190.8 110,213.7  \"\n}), React.createElement(\"polygon\", {\n  className: \"st8\",\n  points: \"229.3,167.7 205.7,213.7 206.6,190.8  \"\n}), React.createElement(\"polygon\", {\n  className: \"st7\",\n  points: \"105.3,253 139.2,236.5 136.6,258.6  \"\n}), React.createElement(\"polygon\", {\n  className: \"st7\",\n  points: \"210.4,253 179.2,258.6 176.5,236.5  \"\n}), React.createElement(\"polygon\", {\n  className: \"st1\",\n  points: \"139.2,236.5 105.3,253 110,213.7  \"\n}), React.createElement(\"polygon\", {\n  className: \"st1\",\n  points: \"176.5,236.5 205.7,213.7 210.4,253  \"\n}), React.createElement(\"polygon\", {\n  className: \"st5\",\n  points: \"173.1,170.2 229.3,167.7 206.6,190.8  \"\n}), React.createElement(\"polygon\", {\n  className: \"st5\",\n  points: \"109.2,190.8 86.4,167.7 142.6,170.2  \"\n}), React.createElement(\"polygon\", {\n  className: \"st5\",\n  points: \"142.6,170.2 129.1,181.7 109.2,190.8  \"\n}), React.createElement(\"polygon\", {\n  className: \"st5\",\n  points: \"206.6,190.8 186.6,181.7 173.1,170.2  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"205.7,213.7 178.3,199.1 206.6,190.8  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"110,213.7 109.2,190.8 137.4,199.1  \"\n}), React.createElement(\"polygon\", {\n  className: \"st9\",\n  points: \"137.4,199.1 109.2,190.8 129.1,181.7  \"\n}), React.createElement(\"polygon\", {\n  className: \"st9\",\n  points: \"178.3,199.1 186.6,181.7 206.6,190.8  \"\n}), React.createElement(\"polygon\", {\n  className: \"st5\",\n  points: \"186.6,181.7 178.3,199.1 173.1,170.2  \"\n}), React.createElement(\"polygon\", {\n  className: \"st5\",\n  points: \"129.1,181.7 142.6,170.2 137.4,199.1  \"\n}), React.createElement(\"polygon\", {\n  className: \"st6\",\n  points: \"199.4,262 177,277.5 178.9,267.9  \"\n}), React.createElement(\"polygon\", {\n  className: \"st6\",\n  points: \"136.8,267.9 138.7,277.5 116.3,262  \"\n}), React.createElement(\"polygon\", {\n  className: \"st4\",\n  points: \"178.3,199.1 171.8,188.4 173.1,170.2  \"\n}), React.createElement(\"polygon\", {\n  className: \"st8\",\n  points: \"137.4,199.1 142.6,170.2 143.9,188.4  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"173.1,170.2 171.8,188.4 143.9,188.4  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"143.9,188.4 142.6,170.2 173.1,170.2  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"178.3,199.1 205.7,213.7 176.5,236.5  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"139.2,236.5 110,213.7 137.4,199.1  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"137.4,199.1 144,233.2 139.2,236.5  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"176.5,236.5 171.7,233.2 178.3,199.1  \"\n}), React.createElement(\"polygon\", {\n  className: \"st8\",\n  points: \"171.8,188.4 178.3,199.1 171.7,233.2  \"\n}), React.createElement(\"polygon\", {\n  className: \"st8\",\n  points: \"143.9,188.4 144,233.2 137.4,199.1  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"143.9,188.4 171.8,188.4 171.7,233.2  \"\n}), React.createElement(\"polygon\", {\n  className: \"st3\",\n  points: \"171.7,233.2 144,233.2 143.9,188.4  \"\n}), React.createElement(\"polygon\", {\n  className: \"st6\",\n  points: \"179.2,258.6 178.9,267.9 177,277.5  \"\n}), React.createElement(\"polygon\", {\n  className: \"st6\",\n  points: \"138.7,277.5 136.8,267.9 136.6,258.6  \"\n}), React.createElement(\"polygon\", {\n  className: \"st6\",\n  points: \"136.6,258.6 139,256.4 138.7,277.5  \"\n}), React.createElement(\"polygon\", {\n  className: \"st6\",\n  points: \"177,277.5 176.7,256.4 179.2,258.6  \"\n}), React.createElement(\"polygon\", {\n  className: \"st6\",\n  points: \"138.7,277.5 139,256.4 176.7,256.4  \"\n}), React.createElement(\"polygon\", {\n  className: \"st6\",\n  points: \"176.7,256.4 177,277.5 138.7,277.5  \"\n}), React.createElement(\"polygon\", {\n  className: \"st10\",\n  points: \"176.5,236.5 179.2,258.6 176.7,256.4  \"\n}), React.createElement(\"polygon\", {\n  className: \"st10\",\n  points: \"139,256.4 136.6,258.6 139.2,236.5  \"\n}), React.createElement(\"polygon\", {\n  className: \"st10\",\n  points: \"139.2,236.5 140.7,241.2 139,256.4  \"\n}), React.createElement(\"polygon\", {\n  className: \"st10\",\n  points: \"176.7,256.4 175,241.2 176.5,236.5  \"\n}), React.createElement(\"polygon\", {\n  className: \"st10\",\n  points: \"143.7,237.7 140.7,241.2 139.2,236.5  \"\n}), React.createElement(\"polygon\", {\n  className: \"st10\",\n  points: \"176.5,236.5 175,241.2 172,237.7  \"\n}), React.createElement(\"polygon\", {\n  className: \"st10\",\n  points: \"172,237.7 171.7,233.2 176.5,236.5  \"\n}), React.createElement(\"polygon\", {\n  className: \"st10\",\n  points: \"139.2,236.5 144,233.2 143.7,237.7  \"\n}), React.createElement(\"polygon\", {\n  className: \"st10\",\n  points: \"171.7,233.2 172,237.7 143.7,237.7  \"\n}), React.createElement(\"polygon\", {\n  className: \"st10\",\n  points: \"143.7,237.7 144,233.2 171.7,233.2  \"\n}), React.createElement(\"polygon\", {\n  className: \"st10\",\n  points: \"140.7,241.2 175,241.2 176.7,256.4  \"\n}), React.createElement(\"polygon\", {\n  className: \"st10\",\n  points: \"176.7,256.4 139,256.4 140.7,241.2  \"\n}), React.createElement(\"polygon\", {\n  className: \"st10\",\n  points: \"140.7,241.2 143.7,237.7 172,237.7  \"\n}), React.createElement(\"polygon\", {\n  className: \"st10\",\n  points: \"172,237.7 175,241.2 140.7,241.2  \"\n}));\n\nvar SvgMetamask = function SvgMetamask(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 318.6 318.6\",\n    style: {\n      enableBackground: \"new 0 0 318.6 318.6\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), _ref2, _ref3, _ref4);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgMetamask, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/metamask.035b2edd.svg\";\nexport { ForwardRef as ReactComponent };","import { Currency, Record } from \"@renex/react-components\";\nimport { List, Map as ImmutableMap, OrderedMap, Set } from \"immutable\";\n\nimport { UTXO } from \"../../lib/blockchain/depositAddresses\";\nimport { bootstrapNodes, WarpGateGroup } from \"../../lib/darknode/darknodeGroup\";\nimport { MultiAddress } from \"../../lib/types/types\";\nimport { _captureBackgroundException_, _captureInteractionException_ } from \"../../lib/util/errors\";\nimport { validateType } from \"../../lib/util/persist\";\n\ninterface Serializable<T> {\n    serialize(): string;\n    deserialize(str: string): T;\n}\n\nexport interface ApplicationData {\n    general: GeneralData;\n    marketPrices: MarketPriceData;\n}\n\nexport enum UITheme {\n    Light = \"theme-light\", // light theme's CSS class\n    Dark = \"theme-dark\", // dark theme's CSS class\n}\n\nconst syncedGeneralData = new Map()\n    .set(\"ethereumAddress\", \"string\")\n    .set(\"advanced\", \"boolean\")\n    .set(\"theme\", \"string\")\n    .set(\"advancedTheme\", \"string\")\n    .set(\"redeemedUTXOs\", \"Set<string>\")\n    .set(\"renVMMessages\", \"Map<string, List<object>>\")\n    .set(\"utxoToMessage\", \"Map<string, string>\")\n    .set(\"messageToUtxos\", \"Map<string, List<object>>\")\n    .set(\"signatures\", \"Map<string, string>\")\n    .set(\"quoteCurrency\", \"string\");\nexport class GeneralData extends Record({\n    ethereumAddress: \"0x5Ea5F67cC958023F2da2ea92231d358F2a3BbA47\" as string | undefined,\n    redeemedUTXOs: Set<string>(),\n    renVMMessages: ImmutableMap<string, List<{ messageID: string, multiAddress: MultiAddress }>>(),\n    signatures: ImmutableMap<string, string>(),\n    utxoToMessage: ImmutableMap<string, string>(),\n    messageToUtxos: ImmutableMap<string, List<UTXO>>(),\n\n    darknodeGroup: new WarpGateGroup(bootstrapNodes),\n\n    // UI\n    advanced: false,\n    theme: UITheme.Light,\n    advancedTheme: UITheme.Dark,\n\n    // address: null as string | null,\n    url: null as string | null,\n    quoteCurrency: Currency.USD,\n}) implements Serializable<GeneralData> {\n\n    public serialize(): string {\n        const obj = {};\n        for (const key of Array.from(syncedGeneralData.keys())) {\n            obj[key] = this.get(key);\n        }\n        return JSON.stringify(obj);\n    }\n\n    public deserialize(str: string): GeneralData {\n        // tslint:disable-next-line:no-this-assignment\n        let next = this;\n        try {\n            const data = JSON.parse(str);\n            for (const key of Array.from(syncedGeneralData.keys())) {\n                try {\n                    next = next.set(\n                        key,\n                        validateType(syncedGeneralData.get(key), data[key])\n                    );\n                } catch (error) {\n                    _captureInteractionException_(error, { description: \"Error in GeneralData.deserialize\", shownToUser: \"No\" });\n                }\n            }\n        } catch (error) {\n            _captureBackgroundException_(error, {\n                description: \"cannot deserialize local storage\",\n            });\n            // TODO: Remove me!!!\n            alert(\"Check console!\");\n        }\n        return next;\n    }\n}\n\nexport interface MarketPrice {\n    price: number;\n    percentChange: number;\n}\n\nexport const UnknownMarketPrice: MarketPrice = {\n    price: 0,\n    percentChange: 0,\n};\n\nexport type TokenPrices = ImmutableMap<string, ImmutableMap<Currency, number>>;\n\nexport class MarketPriceData extends Record({\n    updating: false,\n    marketPrices: OrderedMap<string, MarketPrice>(),\n    tokenPrices: null as TokenPrices | null,\n}) { }\n","import * as React from \"react\";\n\nimport { ReactComponent as MetaMask } from \"../../styles/images/metamask.svg\";\n\ninterface Props {\n    // tslint:disable-next-line: no-any\n    onGenerateAddress: (e?: any) => void;\n    ethereumAddress: string | undefined;\n    onChange: (event: React.FormEvent<HTMLInputElement>) => void;\n    getMetaMaskAddress: () => Promise<void>;\n}\n\nexport const ReceiveAddress = ({ onGenerateAddress, ethereumAddress, onChange, getMetaMaskAddress }: Props) => <div className=\"block\">\n    <form onSubmit={onGenerateAddress} className=\"swap--eth--form\">\n        <div className=\"swap--eth--input\">\n            <input type=\"text\" value={ethereumAddress} onChange={onChange} placeholder=\"Enter Ethereum address for receiving\" />\n            <button type=\"button\" className=\"metamask-logo\" onClick={getMetaMaskAddress}><MetaMask /></button>\n            <button type=\"submit\" className=\"button--white swap--eth--submit\" disabled={!ethereumAddress}>Go</button>\n        </div>\n    </form>\n</div>;\n","import * as React from \"react\";\n\nimport CircularProgressBar from \"react-circular-progressbar\";\n\nimport { Loading } from \"@renex/react-components\";\nimport { List, Map } from \"immutable\";\n\nimport { Currency, UTXO, CurrencyDecimals, CurrencyColor } from \"../../lib/blockchain/depositAddresses\";\n\nimport \"react-circular-progressbar/dist/styles.css\";\nimport { MultiAddress } from \"../../lib/types/types\";\n\nconst showCircle = (percentage: number, color?: string) => {\n    return <CircularProgressBar\n        className=\"circle--progress\"\n        percentage={percentage}\n        strokeWidth={18}\n        styles={{\n            path: {\n                stroke: color || \"#006FE8\",\n                strokeLinecap: \"butt\",\n                // strokeOpacity: 0.6,\n            },\n            trail: {\n                stroke: color || \"#006FE8\",\n                strokeOpacity: 0.2,\n            },\n        }}\n    />;\n};\n\n// TODO: Refactor props\nexport type Props = {\n    simple: true;\n    last: boolean;\n    utxo: UTXO;\n    redeemingUTXO: boolean;\n    redeeming: boolean;\n    onRedeem: (utxo: UTXO) => void;\n} | {\n    simple: false;\n    // tslint:disable-next-line: no-any\n    time: any;\n    renVMMessage: List<{\n        messageID: string;\n        multiAddress: MultiAddress;\n    }>,\n    signatures: Map<string, string>;\n    redeemingOnEthereum: Map<string, boolean>;\n    checkingResponse: Map<string, boolean>;\n    messageToUtxos: Map<string, List<UTXO>>;\n    redeemOnEthereum: (id: string) => Promise<void>;\n    checkForResponse: (id: string) => Promise<void>;\n    resubmitting: Map<string, boolean>;\n};\n\nexport const ShowUTXO = (props: Props) => {\n    if (props.simple) {\n        const { last, utxo, redeemingUTXO, redeeming, onRedeem } = props;\n        const onClick = () => {\n            onRedeem(utxo);\n        };\n        return <div className={`utxo ${redeemingUTXO ? \"utxo--redeemed\" : \"\"}`} >\n            {showCircle(33)}\n            <div className=\"utxo--right\">\n                <span>Deposited <b>{utxo.utxo.amount / (10 ** CurrencyDecimals(utxo.currency))} {utxo.currency.toUpperCase()}</b>{redeemingUTXO ? <>{\" \"}<span className=\"tag\">REDEEMING</span></> : null}</span>\n                <a rel=\"noreferrer\" target=\"_blank\" href={`https://live.blockcypher.com/btc-testnet/tx/${utxo.utxo.txHash}`}>\n                    <span className=\"utxo--txid\">{utxo.utxo.txHash}</span>\n                </a>\n            </div>\n            <div className=\"utxo--buttons\">\n                {last && !redeemingUTXO ? <button disabled={redeeming} className=\"button--blue\" onClick={onClick}>{redeeming ? <Loading alt={true} /> : <>Send to darknodes</>}</button> : null}\n            </div>\n        </div>;\n    } else {\n        const { signatures, redeemingOnEthereum, checkingResponse, time, renVMMessage, messageToUtxos, redeemOnEthereum, checkForResponse, resubmitting } = props;\n        // const first = renVMMessage.first(undefined);\n        const loading = signatures.has(time) ? redeemingOnEthereum.get(time) : checkingResponse.get(time);\n        const messageUtxos = messageToUtxos.get(time);\n        let values = Map<Currency, number>();\n        if (messageUtxos) {\n            messageUtxos.map(utxo => {\n                const previousValue = values.get(utxo.currency) || 0;\n                values = values.set(utxo.currency, previousValue + utxo.utxo.amount);\n            });\n        }\n        const valuesString = values.map((value, currency) => {\n            return `${value / (10 ** CurrencyDecimals(currency))} ${currency.toUpperCase()}`;\n        }).join(\", \");\n        return <div className={`utxo ${signatures.has(time) ? \"done\" : \"\"}`}>\n            {showCircle(signatures.has(time) ? 100 : 66)}\n            <div className=\"utxo--right\">\n                <span>Deposited <b>{valuesString}</b></span>\n                <span className=\"utxo--txid\">{signatures.has(time) ? <>Redeemed.</> : <>Sent to <b>{renVMMessage.size} darknodes</b>. Awaiting response.</>}</span>\n                {/* <span>\n                                    {messageUtxos ? messageUtxos.map(utxo => <span key={utxo.txHash} className=\"utxo--txid\">{utxo.txHash.slice(0, 8)}...</span>).toArray() : null}\n                                </span> */}\n                {/* <span className=\"utxo--txid\">{first ? first.messageID : \"\"}</span> */}\n                {/* <span className=\"utxo--txid\">{time}</span> */}\n            </div>\n            {signatures.has(time) ?\n                <div className=\"utxo--buttons\">\n                    {/* tslint:disable-next-line: react-this-binding-issue jsx-no-lambda */}\n                    {/* <button className=\"button--blue\" onClick={() => { redeemOnEthereum(time).catch(console.error); }} disabled={loading}>{loading ? <Loading /> : <>Redeem on Ethereum</>}</button> */}\n                </div>\n                :\n                <>\n                    <div className=\"utxo--buttons\">\n                        {/* tslint:disable-next-line: react-this-binding-issue jsx-no-lambda */}\n                        <button className=\"button--white\" onClick={() => { checkForResponse(time).catch(console.error); }} disabled={loading}>{loading ? <Loading /> : <>Check for response</>}</button>\n                    </div>\n                </>\n            }\n        </div>;\n    }\n};\n","import * as React from \"react\";\n\nimport { Loading } from \"@renex/react-components\";\nimport { List, Map } from \"immutable\";\n\nimport { UTXO } from \"../../lib/blockchain/depositAddresses\";\nimport { MultiAddress } from \"../../lib/types/types\";\nimport { ShowUTXO } from \"./ShowUTXO\";\n\n// TODO: Refactor props\ninterface Props {\n    checking: boolean;\n    onRefresh: () => Promise<void>;\n    utxos: List<UTXO>;\n    utxoToMessage: Map<string, string>;\n    // tslint:disable-next-line: no-any\n    redeemedUTXOs: any;\n    redeeming: boolean;\n    onRedeem: (utxo: UTXO) => Promise<void>;\n    renVMMessages: Map<string, List<{\n        messageID: string;\n        multiAddress: MultiAddress;\n    }>>;\n    signatures: Map<string, string>;\n    redeemingOnEthereum: Map<string, boolean>;\n    checkingResponse: Map<string, boolean>;\n    messageToUtxos: Map<string, List<UTXO>>;\n    redeemOnEthereum: (id: string) => Promise<void>;\n    checkForResponse: (id: string) => Promise<void>;\n    resubmitting: Map<string, boolean>;\n}\n\nexport const ShowUTXOs = ({ checking, onRefresh, utxos, utxoToMessage, redeemedUTXOs, redeeming, onRedeem, renVMMessages, signatures, redeemingOnEthereum, checkingResponse, messageToUtxos, redeemOnEthereum, checkForResponse, resubmitting }: Props) => {\n    const unredeemed = utxos.filter(utxo => !utxoToMessage.has(utxo.utxo.txHash));\n    const redeemable = unredeemed.first(undefined);\n    return <div className=\"block deposits\">\n        <div className=\"deposits--title\">\n            <h3>Deposits</h3>\n            <button disabled={checking} className=\"button--white\" onClick={onRefresh}>{checking ? <div className=\"checking\"><Loading /></div> : <>Refresh</>}</button>\n        </div>\n        {unredeemed.map((utxo) => {\n            const last = redeemable ? redeemable.utxo.txHash === utxo.utxo.txHash : false;\n            const redeemingUTXO = redeemedUTXOs.contains(utxo.utxo.txHash);\n            return <ShowUTXO last={last} simple={true} key={utxo.utxo.txHash} utxo={utxo} redeemingUTXO={redeemingUTXO} redeeming={redeeming} onRedeem={onRedeem} />;\n        })}\n        {renVMMessages.filter((_, message) => !signatures.has(message)).map((renVMMessage, time) => {\n            // const first = renVMMessage.first(undefined);\n            return <ShowUTXO key={time} simple={false} signatures={signatures} redeemingOnEthereum={redeemingOnEthereum} checkingResponse={checkingResponse} time={time} renVMMessage={renVMMessage} messageToUtxos={messageToUtxos} redeemOnEthereum={redeemOnEthereum} checkForResponse={checkForResponse} resubmitting={resubmitting} />;\n        }).toList()}\n        {renVMMessages.filter((_, message) => signatures.has(message)).map((renVMMessage, time) => {\n            // const first = renVMMessage.first(undefined);\n            return <ShowUTXO key={time} simple={false} signatures={signatures} redeemingOnEthereum={redeemingOnEthereum} checkingResponse={checkingResponse} time={time} renVMMessage={renVMMessage} messageToUtxos={messageToUtxos} redeemOnEthereum={redeemOnEthereum} checkForResponse={checkForResponse} resubmitting={resubmitting} />;\n        }).toList()}\n    </div>;\n}\n","import * as React from \"react\";\n\nimport Web3 from \"web3\";\n\nimport { List, Map } from \"immutable\";\nimport { connect, ConnectedReturnType } from \"react-redux\";\nimport { bindActionCreators, Dispatch } from \"redux\";\nimport { HttpProvider } from \"web3-providers\";\n\nimport { DepositAddresses, UTXO } from \"../../lib/blockchain/depositAddresses\";\nimport { addToMessageToUtxos, addToRedeemedUTXOs, addToRenVMMessages, addToSignatures, addToUtxoToMessage, setEthereumAddress } from \"../../store/actions/general/generalActions\";\nimport { ApplicationData } from \"../../store/types/general\";\nimport { CurrenciesBlock } from \"../views/CurrenciesBlock\";\nimport { ReceiveAddress } from \"../views/ReceiveAddress\";\nimport { ShowUTXOs } from \"../views/ShowUTXOs\";\n\ninterface InjectedEthereum extends HttpProvider {\n    enable: () => Promise<void>;\n}\n\ndeclare global {\n    interface Window {\n        ethereum?: InjectedEthereum;\n        web3?: Web3;\n    }\n}\n\nexport const getWeb3 = async () => new Promise<Web3>(async (resolve, reject) => {\n    // Modern dApp browsers...\n    if (window.ethereum) {\n        window.web3 = new Web3(window.ethereum);\n        try {\n            // Request account access if needed\n            await window.ethereum.enable();\n            resolve(new Web3(window.web3.currentProvider));\n\n        } catch (error) {\n            reject(error);\n        }\n    } else if (window.web3) {\n        // Legacy dApp browsers...\n        window.web3 = new Web3(window.web3.currentProvider);\n        // Accounts always exposed\n        resolve(new Web3(window.web3.currentProvider));\n    } else {\n        // Non-dApp browsers...\n        reject(\"Non-Ethereum browser detected. You should consider trying MetaMask!\");\n    }\n});\n\nconst SwapControllerClass = (props: Props) => {\n    const { store: { ethereumAddress, redeemedUTXOs, darknodeGroup, renVMMessages, signatures, utxoToMessage, messageToUtxos } } = props;\n\n    const [mounted, setMounted] = React.useState(false);\n\n    const [error, setError] = React.useState<string | undefined>(undefined);\n    // tslint:disable-next-line: prefer-const\n    let [depositAddresses, setDepositAddresses] = React.useState<DepositAddresses | undefined>(undefined);\n    const [checking, setChecking] = React.useState(false);\n    const [utxos, setUTXOs] = React.useState<List<UTXO>>(List());\n    const [redeeming, setRedeeming] = React.useState(false);\n    const [blur, setBlur] = React.useState(false);\n    // tslint:disable-next-line: prefer-const\n    let [checkingResponse, setCheckingResponse] = React.useState(Map<string, boolean>());\n    // tslint:disable-next-line: prefer-const\n    let [resubmitting, setResubmitting] = React.useState(Map<string, boolean>());\n    const [redeemingOnEthereum, setRedeemingOnEthereum] = React.useState(Map<string, boolean>());\n\n    const onChange = (event: React.FormEvent<HTMLInputElement>) => {\n        const element = (event.target as HTMLInputElement);\n        const value = element.value;\n        props.actions.setEthereumAddress(value);\n        // setDepositAddresses(undefined);\n        // setUTXOs(List());\n        setBlur(true);\n    };\n\n    const checkForResponse = async (id: string) => {\n        const renVMMessage = renVMMessages.get(id);\n        if (!renVMMessage) {\n            return;\n        }\n        checkingResponse = checkingResponse.set(id, true);\n        setCheckingResponse(checkingResponse);\n        try {\n            const signature = await darknodeGroup.checkForResponse(renVMMessage);\n            props.actions.addToSignatures({ utxo: id, signature });\n        } catch (error) {\n            console.error(error);\n        }\n        checkingResponse = checkingResponse.remove(id);\n        setCheckingResponse(checkingResponse);\n    };\n\n    const onSubmit = async () => {\n        if (!depositAddresses) {\n            setError(`No deposit address defined.`);\n            return;\n        }\n\n        setBlur(false);\n        setChecking(true);\n        setError(undefined);\n\n        const promises = renVMMessages.map(async (_, time) => {\n            // tslint:disable-next-line: no-console\n            return checkForResponse(time).catch(console.error);\n        }).valueSeq().toArray();\n\n        const newUtxos = await depositAddresses.getUTXOs();\n        setUTXOs(newUtxos);\n\n        try {\n            await Promise.all(promises);\n        } catch (error) {\n            // tslint:disable-next-line: no-console\n            console.error(error);\n        }\n\n        setChecking(false);\n    };\n\n    // Call onSubmit without passing in click-event parameters\n    const onRefresh = () => onSubmit();\n\n    // tslint:disable-next-line: no-any\n    const onGenerateAddress = (e?: any) => {\n        if (e && e.preventDefault) {\n            e.preventDefault();\n        }\n        setError(undefined);\n\n        if (ethereumAddress) {\n            if (depositAddresses && depositAddresses.receiveAddress === ethereumAddress) {\n                // do nothing\n            } else {\n                setUTXOs(List());\n                try {\n                    depositAddresses = new DepositAddresses(ethereumAddress);\n                    setDepositAddresses(depositAddresses);\n                } catch (error) {\n                    setError(`${error && error.toString ? error.toString() : error}`);\n                    return;\n                }\n            }\n            // tslint:disable-next-line: no-console\n            onSubmit().catch(console.error);\n        }\n    };\n\n    if (!mounted && ethereumAddress && ethereumAddress.length === 42 && !depositAddresses) {\n        onGenerateAddress();\n    }\n\n    if (!mounted) {\n        setMounted(true);\n    }\n\n    const onRedeem = async (utxo: UTXO) => {\n        setRedeeming(true);\n        if (!ethereumAddress) {\n            return;\n        }\n\n        const id = utxo.utxo.txHash;\n\n        try {\n            const messages = await darknodeGroup.submitDeposits(ethereumAddress, utxo);\n            props.actions.addToRenVMMessages({ utxo: id, messages });\n            props.actions.addToMessageToUtxos({ message: id, utxos: List([utxo]) });\n        } catch (error) {\n            console.error(error);\n            setRedeeming(false);\n            setError(`${error && error.toString ? error.toString() : error}`);\n            return;\n        }\n        props.actions.addToRedeemedUTXOs(utxo.utxo.txHash);\n        props.actions.addToUtxoToMessage({ utxo: utxo.utxo.txHash, message: id });\n        setRedeeming(false);\n    };\n\n    const getMetaMaskAddress = async () => {\n        try {\n            const web3 = await getWeb3();\n            const addresses = await web3.eth.getAccounts();\n            props.actions.setEthereumAddress(addresses[0]);\n            setBlur(true);\n        } catch (error) {\n            setError(`${error && error.toString ? error.toString() : error}`);\n        }\n    };\n\n    const redeemOnEthereum = async (id: string) => {\n        const signature = signatures.get(id);\n        if (!signature) {\n            return;\n        }\n        setRedeemingOnEthereum(redeemingOnEthereum.set(id, true));\n        try {\n            // const web3 = await getWeb3();\n        } catch (error) {\n            setError(`${error && error.toString ? error.toString() : error}`);\n        }\n        setRedeemingOnEthereum(redeemingOnEthereum.remove(id));\n    };\n\n    return <div className=\"swap container\">\n        <ReceiveAddress onGenerateAddress={onGenerateAddress} ethereumAddress={ethereumAddress} onChange={onChange} getMetaMaskAddress={getMetaMaskAddress} />\n        {error ? <p className=\"red\">{error}</p> : null}\n        {depositAddresses ?\n            <div className={`swap--bottom ${blur ? \"blur\" : \"\"}`}>\n                <CurrenciesBlock depositAddresses={depositAddresses} />\n                <ShowUTXOs checking={checking} onRefresh={onRefresh} utxos={utxos} utxoToMessage={utxoToMessage} redeemedUTXOs={redeemedUTXOs} redeeming={redeeming} onRedeem={onRedeem} renVMMessages={renVMMessages} signatures={signatures} redeemingOnEthereum={redeemingOnEthereum} checkingResponse={checkingResponse} messageToUtxos={messageToUtxos} redeemOnEthereum={redeemOnEthereum} checkForResponse={checkForResponse} resubmitting={resubmitting} />\n            </div> : null}\n    </div >;\n};\n\nconst mapStateToProps = (state: ApplicationData) => ({\n    store: {\n        ethereumAddress: state.general.ethereumAddress,\n        redeemedUTXOs: state.general.redeemedUTXOs,\n        darknodeGroup: state.general.darknodeGroup,\n        renVMMessages: state.general.renVMMessages,\n        utxoToMessage: state.general.utxoToMessage,\n        messageToUtxos: state.general.messageToUtxos,\n        signatures: state.general.signatures,\n    }\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n    actions: bindActionCreators({\n        setEthereumAddress,\n        addToRedeemedUTXOs,\n        addToRenVMMessages,\n        addToSignatures,\n        addToUtxoToMessage,\n        addToMessageToUtxos,\n    }, dispatch)\n});\n\ninterface Props extends ReturnType<typeof mapStateToProps>, ConnectedReturnType<typeof mapDispatchToProps> {\n}\n\nexport const SwapController = connect(mapStateToProps, mapDispatchToProps)(SwapControllerClass);\n","import * as React from \"react\";\n\nimport { connect, ConnectedReturnType } from \"react-redux\"; // Custom typings\nimport { Router, withRouter } from \"react-router-dom\";\nimport { bindActionCreators, Dispatch } from \"redux\";\n\nimport { FeedbackButton, ScrollToTop as ScrollToTopWithoutRouter } from \"@renex/react-components\";\n\nimport { _captureBackgroundException_ } from \"../../lib/util/errors\";\nimport { history } from \"../../lib/util/history\";\nimport { ApplicationData } from \"../../store/types/general\";\nimport { _catch_ } from \"../views/ErrorBoundary\";\nimport { BackgroundTasks } from \"./BackgroundTasks\";\nimport { HeaderController } from \"./HeaderController\";\nimport { SwapController } from \"./SwapController\";\n\nconst ScrollToTop = withRouter(ScrollToTopWithoutRouter);\n\n/**\n * App is the main visual component responsible for displaying different routes\n * and running background app loops\n */\nclass AppClass extends React.Component<Props, State> {\n    /**\n     * The main render function.\n     * @dev Should have minimal computation, loops and anonymous functions.\n     */\n    public render(): React.ReactNode {\n        return (\n            <Router history={history}>\n                <main className=\"theme-light\">\n                    <div className=\"themed-app\">\n                        {_catch_(<BackgroundTasks />)}\n                        <ScrollToTop />\n\n                        <div>\n                            {_catch_(<HeaderController />)}\n                            {_catch_(<SwapController />)}\n                            {_catch_(<FeedbackButton url=\"#\" />)}\n                        </div>\n                    </div>\n                </main>\n            </Router>\n        );\n    }\n}\n\nconst mapStateToProps = (state: ApplicationData) => ({\n    store: {\n    }\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n    actions: bindActionCreators({\n    }, dispatch)\n});\n\ninterface Props extends ReturnType<typeof mapStateToProps>, ConnectedReturnType<typeof mapDispatchToProps> {\n}\n\ninterface State {\n}\n\nexport const App = connect(mapStateToProps, mapDispatchToProps)(AppClass);\n","import axios, { AxiosResponse } from \"axios\";\n\nimport { MultiAddress } from \"../types/types\";\nimport {\n    AddressesRequest,\n    AddressesResponse,\n    EpochResponse,\n    HealthResponse,\n    NumPeersResponse,\n    PeersResponse,\n    ReceiveMessageRequest,\n    ReceiveMessageResponse,\n    SendMessageRequest,\n    SendMessageResponse,\n} from \"./types\";\n\nexport class Darknode {\n    public multiAddress: MultiAddress;\n    private readonly url: string;\n\n    constructor(multiAddress: MultiAddress) {\n        this.multiAddress = multiAddress;\n        if (multiAddress.multiAddress.charAt(0) === \"/\") {\n            try {\n                const [_, _ip4, ip, _tcp, port, _ren, _id] = multiAddress.multiAddress.split(\"/\");\n                const fixedPort = port === \"18514\" ? \"18515\" : port;\n                // tslint:disable-next-line: no-http-string\n                this.url = `http://${ip}:${fixedPort}`;\n            } catch (error) {\n                throw new Error(`Malformatted multiAddress: ${multiAddress}`);\n            }\n        } else {\n            this.url = multiAddress.multiAddress;\n        }\n    }\n\n    public async getHealth(): Promise<HealthResponse> {\n        let resp;\n        try {\n            resp = await axios.post(`${this.url}`, this.generatePayload(\"ren_healthCheck\"));\n            if (resp.status !== 200) {\n                throw this.responseError(\"Unexpected status code returned by Darknode\", resp);\n            }\n        } catch (error) {\n            if (error.response) {\n                throw new Error(\n                    `Darknode returned status ${error.response.status} with reason: ${error.response.data}`,\n                );\n            } else {\n                throw error;\n            }\n        }\n        return resp.data as HealthResponse;\n    }\n\n    public async getPeers(): Promise<PeersResponse> {\n        let resp;\n        try {\n            resp = await axios.post(`${this.url}`, this.generatePayload(\"ren_queryPeers\"));\n            if (resp.status !== 200) {\n                throw this.responseError(\"Unexpected status code returned by Darknode\", resp);\n            }\n        } catch (error) {\n            if (error.response) {\n                throw new Error(\n                    `Darknode returned status ${error.response.status} with reason: ${error.response.data}`,\n                );\n            } else {\n                throw error;\n            }\n        }\n        return resp.data as PeersResponse;\n    }\n\n    public async getNumberOfPeers(): Promise<NumPeersResponse> {\n        let resp;\n        try {\n            resp = await axios.post(`${this.url}`, this.generatePayload(\"ren_queryNumPeers\"));\n            if (resp.status !== 200) {\n                throw this.responseError(\"Unexpected status code returned by Darknode\", resp);\n            }\n        } catch (error) {\n            if (error.response) {\n                throw new Error(\n                    `Darknode returned status ${error.response.status} with reason: ${error.response.data}`,\n                );\n            } else {\n                throw error;\n            }\n        }\n        return resp.data as NumPeersResponse;\n    }\n\n    public async getEpoch(): Promise<EpochResponse> {\n        let resp;\n        try {\n            resp = await axios.post(`${this.url}`, this.generatePayload(\"ren_queryEpoch\"));\n            if (resp.status !== 200) {\n                throw this.responseError(\"Unexpected status code returned by Darknode\", resp);\n            }\n        } catch (error) {\n            if (error.response) {\n                throw new Error(\n                    `Darknode returned status ${error.response.status} with reason: ${error.response.data}`,\n                );\n            } else {\n                throw error;\n            }\n        }\n        return resp.data as EpochResponse;\n    }\n\n    public async getAddresses(request: AddressesRequest): Promise<AddressesResponse> {\n        let resp;\n        try {\n            resp = await axios.post(`${this.url}`, this.generatePayload(\"ren_queryAddresses\", request));\n            if (resp.status !== 200) {\n                throw this.responseError(\"Unexpected status code returned by Darknode\", resp);\n            }\n        } catch (error) {\n            if (error.response) {\n                throw new Error(\n                    `Darknode returned status ${error.response.status} with reason: ${error.response.data}`,\n                );\n            } else {\n                throw error;\n            }\n        }\n        return resp.data as AddressesResponse;\n    }\n\n    public async sendMessage(request: SendMessageRequest): Promise<SendMessageResponse> {\n        let resp;\n        try {\n            resp = await axios.post(`${this.url}`, this.generatePayload(\"ren_sendMessage\", request));\n            if (resp.status !== 200) {\n                throw this.responseError(\"Unexpected status code returned by Darknode\", resp);\n            }\n        } catch (error) {\n            if (error.response) {\n                throw new Error(\n                    `Darknode returned status ${error.response.status} with reason: ${error.response.data}`,\n                );\n            } else {\n                throw error;\n            }\n        }\n        return resp.data as SendMessageResponse;\n    }\n\n    public async receiveMessage(request: ReceiveMessageRequest): Promise<ReceiveMessageResponse> {\n        let resp;\n        try {\n            resp = await axios.post(`${this.url}`, this.generatePayload(\"ren_receiveMessage\", request));\n            if (resp.status !== 200) {\n                throw this.responseError(\"Unexpected status code returned by Darknode\", resp);\n            }\n        } catch (error) {\n            if (error.response) {\n                throw new Error(\n                    `Darknode returned status ${error.response.status} with reason: ${error.response.data}`,\n                );\n            } else {\n                throw error;\n            }\n        }\n        return resp.data as ReceiveMessageResponse;\n    }\n\n    private generatePayload(method: string, params?: unknown) {\n        return {\n            id: 1,\n            jsonrpc: \"2.0\",\n            method,\n            params,\n            version: \"0.0\",\n        };\n    }\n\n    private responseError(msg: string, response: AxiosResponse): ResponseError {\n        const error = new Error(msg) as ResponseError;\n        error.response = response;\n        return error;\n    }\n}\n\ninterface ResponseError extends Error {\n    response: AxiosResponse;\n}\n","import { List, Map } from \"immutable\";\n\nimport { MultiAddress, multiAddressToID, NewMultiAddress } from \"../types/types\";\nimport { Darknode } from \"./darknode\";\nimport {\n    HealthResponse,\n    ReceiveMessageRequest,\n    ReceiveMessageResponse,\n    RenVMReceiveMessageResponse,\n    SendMessageRequest,\n    SendMessageResponse,\n} from \"./types\";\nimport { UTXO, Currency } from \"../blockchain/depositAddresses\";\n\nconst bootStrapNode0 = NewMultiAddress(\"/ip4/18.234.163.143/tcp/18515/8MJpA1rXYMPTeJoYjsFBHJcuYBe7zP\");\nconst bootStrapNode1 = NewMultiAddress(\"/ip4/34.213.51.170/tcp/18515/8MH9zGoDLJKiXrhqWLXTzHp1idfxte\");\nconst bootStrapNode2 = NewMultiAddress(\"/ip4/34.205.143.11/tcp/18515/8MGJGnGLdYF6x5YuhkAmgfj6kknJBb\");\nconst bootStrapNode3 = NewMultiAddress(\"/ip4/99.79.61.64/tcp/18515/8MJppC57CkHzDQVAAPTotQGGyzqJ2r\");\nconst bootStrapNode4 = NewMultiAddress(\"/ip4/35.154.42.26/tcp/18515/8MHdUqYXcEhisZipM3hXPsFxHfM3VH\");\nconst bootStrapNode5 = NewMultiAddress(\"/ip4/34.220.215.156/tcp/18515/8MJd7zB9GXsvpm2cSECFP4Bof5G3i8\");\nconst bootStrapNode6 = NewMultiAddress(\"/ip4/18.196.15.243/tcp/18515/8MJN1hHhdcJwzDoj35zRLL3zE3yk45\");\nconst bootStrapNode7 = NewMultiAddress(\"/ip4/18.231.179.161/tcp/18515/8MKYusXyZAGVRn76vTmnK9FWmmPbJj\");\n\nexport const bootstrapNodes = [\n    bootStrapNode0,\n    bootStrapNode1,\n    bootStrapNode2,\n    bootStrapNode3,\n    bootStrapNode4,\n    bootStrapNode5,\n    bootStrapNode6,\n    bootStrapNode7,\n];\n\nconst promiseAll = async <a>(list: List<Promise<a>>, defaultValue: a): Promise<List<a>> => {\n    let newList = List<a>();\n    for (const entryP of list.toArray()) {\n        try {\n            newList = newList.push(await entryP);\n        } catch (error) {\n            newList = newList.push(defaultValue);\n        }\n    }\n    return newList;\n};\n\n/**\n * DarknodeGroup allows sending messages to multiple darknodes\n */\nexport class DarknodeGroup {\n    public bootstraps = List<MultiAddress>();\n    public darknodes = Map<string, Darknode>();\n\n    constructor(multiAddresses: MultiAddress[] | MultiAddress) {\n        if (Array.isArray(multiAddresses)) {\n            this.bootstraps = this.bootstraps.concat(multiAddresses);\n            this.addDarknodes(multiAddresses);\n        } else {\n            this.addDarknodes([multiAddresses]);\n        }\n        this.bootstraps = this.bootstraps.concat(multiAddresses);\n    }\n\n    public bootstrap = async (): Promise<this> => {\n        let success = false;\n        let lastError;\n        for (const multiAddress of this.bootstraps.toArray()) {\n            try {\n                const result: Darknode | undefined = this.darknodes.get(multiAddressToID(multiAddress).id);\n                if (!result) {\n                    throw new Error(\"No darknode provided\");\n                }\n                const peers = await result.getPeers();\n                if (peers.result) {\n                    this.addDarknodes(peers.result.peers.map(NewMultiAddress));\n                    success = true;\n                } else if (peers.error) {\n                    throw peers.error;\n                }\n            } catch (error) {\n                lastError = error;\n            }\n        }\n        if (!success) {\n            throw lastError;\n        }\n        return this;\n    }\n\n    public getHealth = async (): Promise<List<HealthResponse | null>> => {\n        return promiseAll<HealthResponse | null>(\n            this.darknodes.valueSeq().map(darknode => darknode.getHealth()).toList(),\n            null,\n        );\n    }\n\n    public sendMessage = async (request: SendMessageRequest): Promise<List<{ result: SendMessageResponse, multiAddress: MultiAddress } | null>> => {\n        return promiseAll<{ result: SendMessageResponse, multiAddress: MultiAddress } | null>(\n            this.darknodes.valueSeq().map(async (darknode) => ({\n                multiAddress: darknode.multiAddress,\n                result: await darknode.sendMessage(request),\n            })).toList(),\n            null,\n        );\n    }\n\n    public receiveMessage = async (request: ReceiveMessageRequest): Promise<List<ReceiveMessageResponse | null>> => {\n        return promiseAll<ReceiveMessageResponse | null>(\n            this.darknodes.valueSeq().map(darknode => darknode.receiveMessage(request)).toList(),\n            null,\n        );\n    }\n\n    private readonly addDarknodes = (multiAddresses: MultiAddress[]): this => {\n        for (const multiAddress of multiAddresses) {\n            this.darknodes = this.darknodes.set(multiAddressToID(multiAddress).id, new Darknode(multiAddress));\n        }\n        return this;\n    }\n}\n\nexport class WarpGateGroup extends DarknodeGroup {\n    constructor(multiAddresses: MultiAddress[] | MultiAddress) {\n        super(multiAddresses);\n        // this.getHealth();\n    }\n\n    public submitDeposits = async (address: string, utxo: UTXO): Promise<List<{ messageID: string, multiAddress: MultiAddress }>> => {\n        // TODO: If one fails, still return the other.\n\n        const method = utxo.currency === Currency.BTC ? \"MintZBTC\"\n            : utxo.currency === Currency.ZEC ? \"MintZZEC\" : undefined;\n\n        if (!method) {\n            throw new Error(`Minting ${utxo.currency} not supported`);\n        }\n\n        const results = await this.sendMessage({\n            nonce: 0,\n            to: \"WarpGate\",\n            signature: \"\",\n            payload: {\n                method,\n                args: [\n                    {\n                        value: address.slice(0, 2) === \"0x\" ? address.slice(2) : address,\n                    }\n                ],\n            },\n        });\n\n        if (results.filter(x => x !== null).size < 1) {\n            throw new Error(\"Unable to send message to enough darknodes.\");\n        }\n\n        return results.filter(x => x !== null).map((result) => ({\n            // tslint:disable: no-non-null-assertion no-unnecessary-type-assertion\n            multiAddress: result!.multiAddress,\n            messageID: result!.result.result!.messageID,\n            // tslint:enable: no-non-null-assertion no-unnecessary-type-assertion\n        })).toList();\n    }\n\n    public checkForResponse = async (messages: List<{ messageID: string, multiAddress: MultiAddress }>): Promise<string> => {\n        for (const { messageID, multiAddress } of messages.toArray()) {\n            const node = this.darknodes.get(multiAddressToID(multiAddress).id);\n            if (node) {\n                try {\n                    const signature = await node.receiveMessage({ messageID }) as RenVMReceiveMessageResponse;\n                    // Error:\n                    // { \"jsonrpc\": \"2.0\", \"version\": \"0.1\", \"error\": { \"code\": -32603, \"message\": \"result not available\", \"data\": null }, \"id\": null }\n                    // Success:\n                    // (TODO)\n                    if (signature.result) {\n                        return signature.result.result[0].value;\n                    } else if (signature.error) {\n                        throw signature.error;\n                    }\n                } catch (error) {\n                    console.error(error);\n                }\n            }\n        }\n        throw new Error(`Signature not available`);\n    }\n}\n","import { List, Map, Set } from \"immutable\";\n\n/**\n * TYPE can be (recursively defined):\n *\n * 1) result of `typeof` (\"object\", \"number\", \"string\")\n * 2) TYPE[]\n * 3) List<TYPE>\n * 4) Set<TYPE>\n */\ntype TYPE = string;\n\nconst isArrayType = (type: TYPE) => type.slice(-2) === \"[]\";\nconst isListType = (type: TYPE) => type.slice(0, 5) === \"List<\" && type.slice(-1) === \">\";\nconst isSetType = (type: TYPE) => type.slice(0, 4) === \"Set<\" && type.slice(-1) === \">\";\nconst isMapType = (type: TYPE) => type.slice(0, 12) === \"Map<string, \" && type.slice(-1) === \">\";\n\n/**\n * validateType takes two parameters - a target type and a value, and checks\n * that the value can be converted to that type, returning the converted value\n * or throwing an error. Only List/Set conversions are supported.\n *\n * It is used for for deserializing JSON to Immutable types.\n *\n * Example:\n *      validateType(\"string\", \"abc\") => \"abc\"\n *      validateType(\"number\", 1) => 1\n *      validateType(\"string\", 1) => Err\n *      validateType(\"List<string>\", [ \"abc\" ]) => List [ \"abc\" ]\n *      validateType(\"Set<string>\", [ \"abc\" ]) => Set { \"abc\" }\n *\n * @param type The expected type as either X or X[] (etc.) where X is the output\n * of `typeof`\n * @param object The value to check the type of\n */\nexport const validateType = (type: TYPE, object: unknown): unknown => {\n    if (isArrayType(type)) {\n        const subtype = type.slice(0, -2);\n        return (object as unknown[]).map((e) => validateType(subtype, e));\n    } else if (isListType(type)) {\n        const subtype = type.slice(5, -1);\n        return List((object as unknown[]).map((e) => validateType(subtype, e)));\n    } else if (isSetType(type)) {\n        const subtype = type.slice(4, -1);\n        return Set((object as unknown[]).map((e) => validateType(subtype, e)));\n    } else if (isMapType(type)) {\n        const subtype = type.slice(12, -1);\n        return Map(object as { [key: string]: {}; }).map(e => validateType(subtype, e));\n    }\n    if (typeof object === type) {\n        return object;\n    }\n    throw new Error(`Unexpected value of type ${typeof object} (expected ${type})`);\n};\n","import thunk from \"redux-thunk\";\n\nimport { Action, applyMiddleware, createStore, Middleware, Reducer } from \"redux\";\nimport { PersistConfig, persistReducer } from \"redux-persist\";\n\nimport { environment } from \"../lib/util/environmentVariables\";\nimport { rootReducer } from \"../store/reducers/rootReducer\";\nimport { persistConfig } from \"./persistConfig\";\n\nconst middlewares: Middleware[] = [\n    thunk,\n];\n\n// Log Redux actions (only in development)\nif (environment === \"local\") {\n    // middlewares.push(createLogger({ collapsed: true }));\n}\n\n// Workaround createStore not liking type of persistReducer\nconst typedPersistReducer = <S, A extends Action>(config: PersistConfig, reducer: Reducer<S, A>) => {\n    return persistReducer<S, A>(\n        config,\n        reducer\n    );\n};\n\nconst persistedReducer = typedPersistReducer(persistConfig, rootReducer);\n\nexport const configureStore = () => createStore(\n    persistedReducer,\n    applyMiddleware(...middlewares),\n);\n","import { combineReducers } from \"redux\";\n\nimport { generalReducer } from \"./general/generalReducer\";\nimport { marketReducer } from \"./market/marketReducer\";\n\nimport { ApplicationData } from \"../types/general\";\n\nexport const rootReducer = combineReducers<ApplicationData>({\n    general: generalReducer,\n    marketPrices: marketReducer,\n});\n","import { ActionType, getType } from \"typesafe-actions\";\n\nimport * as generalActions from \"../../../store/actions/general/generalActions\";\n\nimport { GeneralData } from \"../../types/general\";\n\ntype GeneralActions = ActionType<typeof generalActions>;\n\n// tslint:disable-next-line: cyclomatic-complexity\nexport const generalReducer = (state: GeneralData = new GeneralData(), action: GeneralActions) => {\n    switch (action.type) {\n        case getType(generalActions.setQuoteCurrency):\n            return state.set(\"quoteCurrency\", action.payload);\n\n        case getType(generalActions.setEthereumAddress):\n            return state.set(\"ethereumAddress\", action.payload);\n\n        case getType(generalActions.addToRedeemedUTXOs):\n            return state.set(\"redeemedUTXOs\", state.redeemedUTXOs.add(action.payload));\n\n        case getType(generalActions.addToRenVMMessages):\n            return state.set(\"renVMMessages\", state.renVMMessages.set(action.payload.utxo, action.payload.messages));\n\n        case getType(generalActions.addToUtxoToMessage):\n            return state.set(\"utxoToMessage\", state.utxoToMessage.set(action.payload.utxo, action.payload.message));\n\n        case getType(generalActions.addToMessageToUtxos):\n            return state.set(\"messageToUtxos\", state.messageToUtxos.set(action.payload.message, action.payload.utxos));\n\n        case getType(generalActions.addToSignatures):\n            return state.set(\"signatures\", state.signatures.set(action.payload.utxo, action.payload.signature));\n\n        default:\n            return state;\n    }\n};\n","import { ActionType, getType } from \"typesafe-actions\";\n\nimport * as marketActions from \"../../../store/actions/market/marketActions\";\n\nimport { MarketPrice, MarketPriceData } from \"../../types/general\";\n\ntype MarketAction = ActionType<typeof marketActions>;\n\nexport const marketReducer = (state: MarketPriceData = new MarketPriceData(), action: MarketAction) => {\n    switch (action.type) {\n        case getType(marketActions.updatePrices):\n            const { price, percentChange } = action.payload;\n            const marketPrice: MarketPrice = { price, percentChange };\n            return state.set(\"marketPrices\", state.marketPrices.set(action.payload.pair, marketPrice));\n\n        case getType(marketActions.pricesUpdating):\n            return state.set(\"updating\", action.payload);\n\n        case getType(marketActions.setTokenPrices):\n            return state.set(\"tokenPrices\", action.payload.tokenPrices);\n\n        default:\n            return state;\n    }\n};\n","import storage from \"redux-persist/lib/storage\";\n\nimport { createTransform, PersistConfig } from \"redux-persist\";\n\nimport { _captureBackgroundException_ } from \"../lib/util/errors\";\nimport { ApplicationData, GeneralData } from \"./types/general\";\n\n// Local Storage:\n\nconst generalTransform = createTransform<GeneralData, string>(\n    (inboundState: GeneralData, key: string): string => {\n        try {\n            return inboundState.serialize();\n        } catch (error) {\n            // tslint:disable-next-line: no-console\n            console.error(`Error serializing ${key} (${JSON.stringify(inboundState)}): ${error}`);\n            _captureBackgroundException_(error, { description: \"Error serializing local storage\" });\n            throw error;\n        }\n    },\n    (outboundState: string, key: string): GeneralData => {\n        try {\n            return new GeneralData().deserialize(outboundState);\n        } catch (error) {\n            // tslint:disable-next-line: no-console\n            console.error(`Error deserializing ${key} (${JSON.stringify(outboundState)}): ${error}`);\n            _captureBackgroundException_(error, { description: \"Error deserializing local storage\" });\n            throw error;\n        }\n    },\n    { whitelist: [\"general\"] as Array<keyof ApplicationData>, },\n);\n\nexport const persistConfig: PersistConfig = {\n    storage,\n    key: \"ren\",\n    whitelist: [\"general\"] as Array<keyof ApplicationData>,\n    transforms: [generalTransform],\n};\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\n\nimport { Provider } from \"react-redux\";\nimport { persistStore } from \"redux-persist\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nimport { App } from \"./components/controllers/App\";\nimport { _catch_ } from \"./components/views/ErrorBoundary\";\nimport { onLoad } from \"./lib/util/onLoad\";\nimport { configureStore } from \"./store/configureStore\";\n\nimport \"./styles/index.scss\";\n\nexport const store = configureStore();\n\nonLoad(\"RenXCS\");\n\nReactDOM.render(\n    _catch_(<Provider store={store}>\n        <PersistGate loading={null} persistor={persistStore(store)}>\n            <App />\n        </PersistGate>\n    </Provider>),\n    document.getElementById(\"root\") as HTMLElement\n);\n","import * as Sentry from \"@sentry/browser\";\n\nimport { _catch_ } from \"../../components/views/ErrorBoundary\";\nimport { environment, NETWORK, SENTRY_DSN, SOURCE_VERSION } from \"./environmentVariables\";\nimport { pageLoadedAt } from \"./errors\";\n\nexport const onLoad = (title: string) => {\n\n    // Initialize Sentry error logging\n    Sentry.init({\n        // Used to define the project to log errors to\n        dsn: SENTRY_DSN,\n\n        // Used to separate testnet and mainnet errors\n        environment,\n\n        // Used to track errors across versions\n        release: SOURCE_VERSION || \"local\",\n\n        // Only throw errors generated from scripts at these URLs\n        whitelistUrls: [\n            /.*republicprotocol.*/i,\n            /.*renproject.*/i,\n\n            // Local testing (localhost and IPv4 addresses)\n            /.*localhost.*/i,\n            /.*(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).*/\n        ],\n    });\n\n    Sentry.configureScope((scope) => {\n        scope.setExtra(\"loggedIn\", false);\n\n        // We set this to false when logging to Sentry explicitly.\n        scope.setExtra(\"caught\", false);\n\n        scope.setExtra(\"release\", SOURCE_VERSION || \"local\");\n\n        scope.setExtra(\"pageLoadedAt\", pageLoadedAt());\n    });\n\n    // Update document title to show network\n    if (NETWORK && NETWORK !== \"mainnet\") {\n        document.title = `${title} (${NETWORK})`;\n    } else {\n        document.title = title; // Also set in index.html\n    }\n\n    // tslint:disable-next-line: no-console\n    console.log(`${title} version hash: ${SOURCE_VERSION || \"local\"}`);\n};\n"],"sourceRoot":""}